PHPUnit 3.7.19 by Sebastian Bergmann.

Configuration read from /home/gerard/work/cg/phpunit.xml.dist

.............................................................   61 / 3172 (  1%)
.............................................................  122 / 3172 (  3%)
........................................................F...F  183 / 3172 (  5%)
.................F...........................................  244 / 3172 (  7%)
.............................................................  305 / 3172 (  9%)
.................................................FF..........  366 / 3172 ( 11%)
.....................................................F.......  427 / 3172 ( 13%)
.............................................................  488 / 3172 ( 15%)
FEFFFFFFFFFFFFFFF.E.......................................E..  549 / 3172 ( 17%)
.....................................................E.......  610 / 3172 ( 19%)
.............................................................  671 / 3172 ( 21%)
.......E.....................................................  732 / 3172 ( 23%)
.......................................F.....................  793 / 3172 ( 25%)
.............................................................  854 / 3172 ( 26%)
....................................................F........  915 / 3172 ( 28%)
.............................E..............................E  976 / 3172 ( 30%)
............................................................. 1037 / 3172 ( 32%)
........................................F.................E.. 1098 / 3172 ( 34%)
E..............................F.E........................FE. 1159 / 3172 ( 36%)
......................FEE.F........................F.F....F.. 1220 / 3172 ( 38%)
.......F..................................................... 1281 / 3172 ( 40%)
........................FF....FF....................FFFF..... 1342 / 3172 ( 42%)
......................................................E...... 1403 / 3172 ( 44%)
...................................FFE......................E 1464 / 3172 ( 46%)
.......................E..E.................................. 1525 / 3172 ( 48%)
........................................E.E.................. 1586 / 3172 ( 50%)
........E...................................F..........F..... 1647 / 3172 ( 51%)
............E...............F................................ 1708 / 3172 ( 53%)
......................F...................................... 1769 / 3172 ( 55%)
................................E............E............... 1830 / 3172 ( 57%)
.................................................E........... 1891 / 3172 ( 59%)
...E...E.E......................................E............ 1952 / 3172 ( 61%)
............................................................. 2013 / 3172 ( 63%)
..E.............................................E.E...E...... 2074 / 3172 ( 65%)
..............................F.............................. 2135 / 3172 ( 67%)
..................F.......E.............F.................... 2196 / 3172 ( 69%)
...........................FFFFFFFF..........E............... 2257 / 3172 ( 71%)
............................................................. 2318 / 3172 ( 73%)
............................................................. 2379 / 3172 ( 75%)
.......................................EE.EEE................ 2440 / 3172 ( 76%)
........E...............E.....F....................F.......F. 2501 / 3172 ( 78%)
.........F................................................... 2562 / 3172 ( 80%)
....E............E...........E...........E................... 2623 / 3172 ( 82%)
............F.FFFF............................FFFFF.........F 2684 / 3172 ( 84%)
.FFFFFF............................E......................... 2745 / 3172 ( 86%)
......E............FFFFFFFFFFFFFFF.FFFF...................... 2806 / 3172 ( 88%)
......FEEFFE.........................FFFFFF.................. 2867 / 3172 ( 90%)
.......................FFFFFEEFFFFFFFFFEFEFEFEFFEFFFEFFFFFEFE 2928 / 3172 ( 92%)
FFFEFFFFFFEEEEE.............................................. 2989 / 3172 ( 94%)
.....................E......F................................ 3050 / 3172 ( 96%)
...EE........................................................ 3111 / 3172 ( 98%)
............................................................. 3172 / 3172 (100%)


Time: 01:14, Memory: 41.25Mb

There were 70 errors:

1) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #480 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Component/DependencyInjection/Tests/Fixtures/includes/foo.php)
Melp\Cg\Common\ParserException: Parser exception

  6. {
  7.     public $foo, $moo;
                    ^--------- Unexpected data, expected ;
  8. 



/home/gerard/work/cg/src/Melp/Cg/Common/Scanner.php:84
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/PropertyParser.php:28
/home/gerard/work/cg/src/Melp/Cg/Common/Parser.php:31
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/ClassParser.php:59
/home/gerard/work/cg/src/Melp/Cg/Common/Parser.php:31
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/FileParser.php:30
/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:26

2) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #497 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Component/DependencyInjection/Tests/ContainerTest.php)
Melp\Cg\Common\ParserException: Parser exception

678. {
679.     public $__bar, $__foo_bar, $__foo_baz;
                      ^--------- Unexpected data, expected ;
680.     public $synchronized;



/home/gerard/work/cg/src/Melp/Cg/Common/Scanner.php:84
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/PropertyParser.php:28
/home/gerard/work/cg/src/Melp/Cg/Common/Parser.php:31
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/ClassParser.php:59
/home/gerard/work/cg/src/Melp/Cg/Common/Parser.php:31
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/FileParser.php:30
/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:26

3) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #537 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Component/DependencyInjection/Extension/Extension.php)
Melp\Cg\Common\ParserException: Parser exception

100. 
101.     final protected function processConfiguration(ConfigurationInterface $configuration, array $configs)
         ^--------- Unexpected data, expected }
102.     {



/home/gerard/work/cg/src/Melp/Cg/Common/Scanner.php:84
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/ClassParser.php:60
/home/gerard/work/cg/src/Melp/Cg/Common/Parser.php:31
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/FileParser.php:30
/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:26

4) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #593 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php)
Melp\Cg\Common\ParserException: Parser exception

358. 
359.         return "\n        return \$instance;\n    }\n";
             ^--------- Unexpected data, expected }
360.     }



/home/gerard/work/cg/src/Melp/Cg/Common/Scanner.php:84
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/ClassParser.php:60
/home/gerard/work/cg/src/Melp/Cg/Common/Parser.php:31
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/FileParser.php:30
/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:26

5) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #669 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Component/Validator/Tests/Constraints/CurrencyValidatorTest.php)
Melp\Cg\Common\ParserException: Parser exception

 72.      **/
 73.     public function testValidCurrenciesWithCountrySpecificLocale($currency)
         ^--------- Unexpected data, expected */
 74.     {



/home/gerard/work/cg/src/Melp/Cg/Common/Scanner.php:84
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/DocCommentParser.php:32
/home/gerard/work/cg/src/Melp/Cg/Common/Parser.php:31
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/ClassParser.php:59
/home/gerard/work/cg/src/Melp/Cg/Common/Parser.php:31
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/FileParser.php:30
/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:26

6) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #935 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Component/PropertyAccess/PropertyAccessor.php)
Melp\Cg\Common\ParserException: Parser exception

178.      */
179.     private function &readPropertiesUntil(&$objectOrArray, PropertyPathInterface $propertyPath, $lastIndex, $ignoreInvalidIndices = true)
                          ^--------- Unexpected data, expected data matching #[a-zA-Z_][a-zA-Z0-9_]*#A
180.     {



/home/gerard/work/cg/src/Melp/Cg/Common/Scanner.php:95
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/FunctionParser.php:37
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/MethodParser.php:20
/home/gerard/work/cg/src/Melp/Cg/Common/Parser.php:31
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/ClassParser.php:59
/home/gerard/work/cg/src/Melp/Cg/Common/Parser.php:31
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/FileParser.php:30
/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:26

7) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #966 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Component/Config/Definition/BaseNode.php)
Melp\Cg\Common\ParserException: Parser exception

219.      */
220.     final public function merge($leftSide, $rightSide)
         ^--------- Unexpected data, expected }
221.     {



/home/gerard/work/cg/src/Melp/Cg/Common/Scanner.php:84
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/ClassParser.php:60
/home/gerard/work/cg/src/Melp/Cg/Common/Parser.php:31
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/FileParser.php:30
/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:26

8) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #1086 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Component/Yaml/Inline.php)
Melp\Cg\Common\ParserException: Parser exception

546. }
547. 
    ^--------- Unexpected data, expected }



/home/gerard/work/cg/src/Melp/Cg/Common/Scanner.php:84
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/ClassParser.php:60
/home/gerard/work/cg/src/Melp/Cg/Common/Parser.php:31
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/FileParser.php:30
/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:26

9) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #1089 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Component/Yaml/Parser.php)
Uninitialized string offset: 26738

/home/gerard/work/cg/src/Melp/Cg/Common/Scanner.php:172
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/FunctionParser.php:69
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/MethodParser.php:20
/home/gerard/work/cg/src/Melp/Cg/Common/Parser.php:31
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/ClassParser.php:59
/home/gerard/work/cg/src/Melp/Cg/Common/Parser.php:31
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/FileParser.php:30
/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:26

10) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #1122 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Component/ExpressionLanguage/Parser.php)
Melp\Cg\Common\ParserException: Parser exception

299.         }
300.         $this->stream->expect(Token::PUNCTUATION_TYPE, '}', 'An opened hash is not properly closed');
                                                              ^--------- Unexpected data, expected }
301. 



/home/gerard/work/cg/src/Melp/Cg/Common/Scanner.php:84
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/ClassParser.php:60
/home/gerard/work/cg/src/Melp/Cg/Common/Parser.php:31
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/FileParser.php:30
/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:26

11) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #1148 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Component/VarDumper/Tests/HtmlDumperTest.php)
Melp\Cg\Common\ParserException: Parser exception

 84.   </samp>}
 85.   "<span class=sf-dump-key>obj</span>" => <abbr title="Symfony\Component\VarDumper\Tests\Fixture\DumbFoo" class=sf-dump-note>DumbFoo</abbr> {<a class=sf-dump-ref href=#{$dumpId}-ref2%d title="2 occurrences">#%d</a><samp id={$dumpId}-ref2%d>
       ^--------- Unexpected data, expected }
 86.     +<span class=sf-dump-public title="Public property">foo</span>: "<span class=sf-dump-str title="3 characters">foo</span>"



/home/gerard/work/cg/src/Melp/Cg/Common/Scanner.php:84
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/ClassParser.php:60
/home/gerard/work/cg/src/Melp/Cg/Common/Parser.php:31
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/FileParser.php:30
/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:26

12) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #1173 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Component/VarDumper/Dumper/HtmlDumper.php)
Melp\Cg\Common\ParserException: Parser exception

 33.     protected $styles = array(
 34.         'default' => 'background-color:#18171B; color:#FF8400; line-height:1.2em; font:12px Menlo, Monaco, Consolas, monospace; word-wrap: break-word; white-space: pre-wrap; position:relative; z-index:100000',
                                                     ^--------- Unexpected data, expected }
 35.         'num' => 'font-weight:bold; color:#1299DA',



/home/gerard/work/cg/src/Melp/Cg/Common/Scanner.php:84
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/ClassParser.php:60
/home/gerard/work/cg/src/Melp/Cg/Common/Parser.php:31
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/FileParser.php:30
/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:26

13) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #1174 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Component/VarDumper/Dumper/CliDumper.php)
Melp\Cg\Common\ParserException: Parser exception

 29.         // See http://en.wikipedia.org/wiki/ANSI_escape_code#graphics
 30.         'default' => '38;5;208',
                              ^--------- Unexpected data, expected }
 31.         'num' => '1;38;5;38',



/home/gerard/work/cg/src/Melp/Cg/Common/Scanner.php:84
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/ClassParser.php:60
/home/gerard/work/cg/src/Melp/Cg/Common/Parser.php:31
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/FileParser.php:30
/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:26

14) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #1387 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Component/Intl/NumberFormatter/NumberFormatter.php)
Melp\Cg\Common\ParserException: Parser exception

253.     private static $enSymbols = array(
254.         self::DECIMAL => array('.', ',', ';', '%', '0', '#', '-', '+', '¤', '¤¤', '.', 'E', '‰', '*', '∞', 'NaN', '@', ','),
                                                ^--------- Unexpected data, expected }
255.         self::CURRENCY => array('.', ',', ';', '%', '0', '#', '-', '+', '¤', '¤¤', '.', 'E', '‰', '*', '∞', 'NaN', '@', ','),



/home/gerard/work/cg/src/Melp/Cg/Common/Scanner.php:84
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/ClassParser.php:60
/home/gerard/work/cg/src/Melp/Cg/Common/Parser.php:31
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/FileParser.php:30
/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:26

15) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #1431 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Component/Routing/Tests/Fixtures/annotated.php)
Melp\Cg\Common\ParserException: Parser exception

  1. 
    ^--------- Unexpected data, expected <?php



/home/gerard/work/cg/src/Melp/Cg/Common/Scanner.php:84
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/FileParser.php:28
/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:26

16) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #1454 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Component/Routing/Tests/RouteCompilerTest.php)
Melp\Cg\Common\ParserException: Parser exception

253. }
254. 
    ^--------- Unexpected data, expected }



/home/gerard/work/cg/src/Melp/Cg/Common/Scanner.php:84
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/ClassParser.php:60
/home/gerard/work/cg/src/Melp/Cg/Common/Parser.php:31
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/FileParser.php:30
/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:26

17) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #1478 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Component/Routing/RouteCompiler.php)
Melp\Cg\Common\ParserException: Parser exception

 28.      */
 29.     const SEPARATORS = '/,;.:-_~+*=@|';
                                ^--------- Unexpected data, expected }
 30. 



/home/gerard/work/cg/src/Melp/Cg/Common/Scanner.php:84
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/ClassParser.php:60
/home/gerard/work/cg/src/Melp/Cg/Common/Parser.php:31
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/FileParser.php:30
/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:26

18) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #1481 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Component/Routing/Generator/UrlGenerator.php)
Melp\Cg\Common\ParserException: Parser exception

 70.         // so URI producing applications can use these chars to delimit subcomponents in a path segment without being encoded for better readability
 71.         '%3B' => ';',
                        ^--------- Unexpected data, expected }
 72.         '%2C' => ',',



/home/gerard/work/cg/src/Melp/Cg/Common/Scanner.php:84
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/ClassParser.php:60
/home/gerard/work/cg/src/Melp/Cg/Common/Parser.php:31
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/FileParser.php:30
/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:26

19) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #1556 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Component/Security/Http/Firewall/AbstractAuthenticationListener.php)
Melp\Cg\Common\ParserException: Parser exception

128.      */
129.     final public function handle(GetResponseEvent $event)
         ^--------- Unexpected data, expected }
130.     {



/home/gerard/work/cg/src/Melp/Cg/Common/Scanner.php:84
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/ClassParser.php:60
/home/gerard/work/cg/src/Melp/Cg/Common/Parser.php:31
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/FileParser.php:30
/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:26

20) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #1558 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Component/Security/Http/Firewall/AbstractPreAuthenticatedListener.php)
Melp\Cg\Common\ParserException: Parser exception

 54.      */
 55.     final public function handle(GetResponseEvent $event)
         ^--------- Unexpected data, expected }
 56.     {



/home/gerard/work/cg/src/Melp/Cg/Common/Scanner.php:84
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/ClassParser.php:60
/home/gerard/work/cg/src/Melp/Cg/Common/Parser.php:31
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/FileParser.php:30
/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:26

21) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #1585 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Component/Security/Http/RememberMe/AbstractRememberMeServices.php)
Melp\Cg\Common\ParserException: Parser exception

111.      */
112.     final public function autoLogin(Request $request)
         ^--------- Unexpected data, expected }
113.     {



/home/gerard/work/cg/src/Melp/Cg/Common/Scanner.php:84
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/ClassParser.php:60
/home/gerard/work/cg/src/Melp/Cg/Common/Parser.php:31
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/FileParser.php:30
/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:26

22) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #1650 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Component/Security/Acl/Dbal/AclProvider.php)
Melp\Cg\Common\ParserException: Parser exception

394.      */
395.     final protected function retrieveObjectIdentityPrimaryKey(ObjectIdentityInterface $oid)
         ^--------- Unexpected data, expected }
396.     {



/home/gerard/work/cg/src/Melp/Cg/Common/Scanner.php:84
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/ClassParser.php:60
/home/gerard/work/cg/src/Melp/Cg/Common/Parser.php:31
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/FileParser.php:30
/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:26

23) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #1792 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Component/Security/Core/Authorization/AuthorizationChecker.php)
Melp\Cg\Common\ParserException: Parser exception

 53.      */
 54.     final public function isGranted($attributes, $object = null)
         ^--------- Unexpected data, expected }
 55.     {



/home/gerard/work/cg/src/Melp/Cg/Common/Scanner.php:84
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/ClassParser.php:60
/home/gerard/work/cg/src/Melp/Cg/Common/Parser.php:31
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/FileParser.php:30
/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:26

24) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #1805 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Component/Security/Core/Encoder/BasePasswordEncoder.php)
Melp\Cg\Common\ParserException: Parser exception

100. }
101. 
    ^--------- Unexpected data, expected }



/home/gerard/work/cg/src/Melp/Cg/Common/Scanner.php:84
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/ClassParser.php:60
/home/gerard/work/cg/src/Melp/Cg/Common/Parser.php:31
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/FileParser.php:30
/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:26

25) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #1870 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Component/Serializer/Serializer.php)
Melp\Cg\Common\ParserException: Parser exception

 89.      */
 90.     final public function serialize($data, $format, array $context = array())
         ^--------- Unexpected data, expected }
 91.     {



/home/gerard/work/cg/src/Melp/Cg/Common/Scanner.php:84
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/ClassParser.php:60
/home/gerard/work/cg/src/Melp/Cg/Common/Parser.php:31
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/FileParser.php:30
/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:26

26) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #1885 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Component/Serializer/Encoder/ChainDecoder.php)
Melp\Cg\Common\ParserException: Parser exception

 35.      */
 36.     final public function decode($data, $format, array $context = array())
         ^--------- Unexpected data, expected }
 37.     {



/home/gerard/work/cg/src/Melp/Cg/Common/Scanner.php:84
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/ClassParser.php:60
/home/gerard/work/cg/src/Melp/Cg/Common/Parser.php:31
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/FileParser.php:30
/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:26

27) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #1889 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Component/Serializer/Encoder/XmlEncoder.php)
Melp\Cg\Common\ParserException: Parser exception

177.      */
178.     final protected function appendXMLString(\DOMNode $node, $val)
         ^--------- Unexpected data, expected }
179.     {



/home/gerard/work/cg/src/Melp/Cg/Common/Scanner.php:84
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/ClassParser.php:60
/home/gerard/work/cg/src/Melp/Cg/Common/Parser.php:31
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/FileParser.php:30
/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:26

28) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #1891 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Component/Serializer/Encoder/ChainEncoder.php)
Melp\Cg\Common\ParserException: Parser exception

 35.      */
 36.     final public function encode($data, $format, array $context = array())
         ^--------- Unexpected data, expected }
 37.     {



/home/gerard/work/cg/src/Melp/Cg/Common/Scanner.php:84
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/ClassParser.php:60
/home/gerard/work/cg/src/Melp/Cg/Common/Parser.php:31
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/FileParser.php:30
/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:26

29) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #1930 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Component/HttpKernel/Tests/DataCollector/DumpDataCollectorTest.php)
Uninitialized string offset: 4963

/home/gerard/work/cg/src/Melp/Cg/Common/Scanner.php:172
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/FunctionParser.php:69
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/MethodParser.php:20
/home/gerard/work/cg/src/Melp/Cg/Common/Parser.php:31
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/ClassParser.php:59
/home/gerard/work/cg/src/Melp/Cg/Common/Parser.php:31
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/FileParser.php:30
/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:26

30) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2006 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Component/HttpKernel/DependencyInjection/ConfigurableExtension.php)
Melp\Cg\Common\ParserException: Parser exception

 32.      */
 33.     final public function load(array $configs, ContainerBuilder $container)
         ^--------- Unexpected data, expected }
 34.     {



/home/gerard/work/cg/src/Melp/Cg/Common/Scanner.php:84
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/ClassParser.php:60
/home/gerard/work/cg/src/Melp/Cg/Common/Parser.php:31
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/FileParser.php:30
/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:26

31) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2052 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Component/HttpKernel/HttpCache/Ssi.php)
Melp\Cg\Common\ParserException: Parser exception

 27.         array('<?', '<%', '<s', '<S'),
 28.         array('<?php echo "<?"; ?>', '<?php echo "<%"; ?>', '<?php echo "<s"; ?>', '<?php echo "<S"; ?>'),
                                     ^--------- Unexpected data, expected }
 29.     );



/home/gerard/work/cg/src/Melp/Cg/Common/Scanner.php:84
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/ClassParser.php:60
/home/gerard/work/cg/src/Melp/Cg/Common/Parser.php:31
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/FileParser.php:30
/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:26

32) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2054 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Component/HttpKernel/HttpCache/Esi.php)
Melp\Cg\Common\ParserException: Parser exception

 33.         array('<?', '<%', '<s', '<S'),
 34.         array('<?php echo "<?"; ?>', '<?php echo "<%"; ?>', '<?php echo "<s"; ?>', '<?php echo "<S"; ?>'),
                                     ^--------- Unexpected data, expected }
 35.     );



/home/gerard/work/cg/src/Melp/Cg/Common/Scanner.php:84
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/ClassParser.php:60
/home/gerard/work/cg/src/Melp/Cg/Common/Parser.php:31
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/FileParser.php:30
/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:26

33) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2058 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Component/HttpKernel/Bundle/Bundle.php)
Melp\Cg\Common\ParserException: Parser exception

152.      */
153.     final public function getName()
         ^--------- Unexpected data, expected }
154.     {



/home/gerard/work/cg/src/Melp/Cg/Common/Scanner.php:84
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/ClassParser.php:60
/home/gerard/work/cg/src/Melp/Cg/Common/Parser.php:31
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/FileParser.php:30
/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:26

34) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2152 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Component/HttpFoundation/Session/Attribute/NamespacedAttributeBag.php)
Melp\Cg\Common\ParserException: Parser exception

108.      */
109.     protected function &resolveAttributePath($name, $writeContext = false)
                            ^--------- Unexpected data, expected data matching #[a-zA-Z_][a-zA-Z0-9_]*#A
110.     {



/home/gerard/work/cg/src/Melp/Cg/Common/Scanner.php:95
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/FunctionParser.php:37
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/MethodParser.php:20
/home/gerard/work/cg/src/Melp/Cg/Common/Parser.php:31
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/ClassParser.php:59
/home/gerard/work/cg/src/Melp/Cg/Common/Parser.php:31
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/FileParser.php:30
/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:26

35) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2232 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Component/Console/Tests/Input/InputDefinitionTest.php)
Melp\Cg\Common\ParserException: Parser exception

 21. 
 22.     protected $foo, $bar, $foo1, $foo2;
                       ^--------- Unexpected data, expected ;
 23. 



/home/gerard/work/cg/src/Melp/Cg/Common/Scanner.php:84
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/PropertyParser.php:28
/home/gerard/work/cg/src/Melp/Cg/Common/Parser.php:31
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/ClassParser.php:59
/home/gerard/work/cg/src/Melp/Cg/Common/Parser.php:31
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/FileParser.php:30
/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:26

36) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2409 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Component/ClassLoader/Tests/Fixtures/ClassesWithParents/F.php)
Melp\Cg\Common\ParserException: Parser exception

  6. {
  7.     use CTrait;
         ^--------- Unexpected data, expected }
  8. }



/home/gerard/work/cg/src/Melp/Cg/Common/Scanner.php:84
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/ClassParser.php:60
/home/gerard/work/cg/src/Melp/Cg/Common/Parser.php:31
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/FileParser.php:30
/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:26

37) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2410 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Component/ClassLoader/Tests/Fixtures/ClassesWithParents/D.php)
Melp\Cg\Common\ParserException: Parser exception

  6. {
  7.     use BTrait;
         ^--------- Unexpected data, expected }
  8. }



/home/gerard/work/cg/src/Melp/Cg/Common/Scanner.php:84
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/ClassParser.php:60
/home/gerard/work/cg/src/Melp/Cg/Common/Parser.php:31
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/FileParser.php:30
/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:26

38) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2412 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Component/ClassLoader/Tests/Fixtures/ClassesWithParents/G.php)
Melp\Cg\Common\ParserException: Parser exception

  6. {
  7.     use CTrait;
         ^--------- Unexpected data, expected }
  8. }



/home/gerard/work/cg/src/Melp/Cg/Common/Scanner.php:84
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/ClassParser.php:60
/home/gerard/work/cg/src/Melp/Cg/Common/Parser.php:31
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/FileParser.php:30
/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:26

39) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2413 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Component/ClassLoader/Tests/Fixtures/ClassesWithParents/E.php)
Melp\Cg\Common\ParserException: Parser exception

  6. {
  7.     use CTrait;
         ^--------- Unexpected data, expected }
  8. }



/home/gerard/work/cg/src/Melp/Cg/Common/Scanner.php:84
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/ClassParser.php:60
/home/gerard/work/cg/src/Melp/Cg/Common/Parser.php:31
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/FileParser.php:30
/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:26

40) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2414 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Component/ClassLoader/Tests/Fixtures/ClassesWithParents/BTrait.php)
Melp\Cg\Common\ParserException: Parser exception

  6. {
  7.     use ATrait;
         ^--------- Unexpected data, expected }
  8. }



/home/gerard/work/cg/src/Melp/Cg/Common/Scanner.php:84
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/ClassParser.php:60
/home/gerard/work/cg/src/Melp/Cg/Common/Parser.php:31
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/FileParser.php:30
/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:26

41) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2439 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Component/ClassLoader/Tests/Fixtures/deps/traits.php)
Melp\Cg\Common\ParserException: Parser exception

  8. {
  9.     use TD;
         ^--------- Unexpected data, expected }
 10. }



/home/gerard/work/cg/src/Melp/Cg/Common/Scanner.php:84
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/ClassParser.php:60
/home/gerard/work/cg/src/Melp/Cg/Common/Parser.php:31
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/FileParser.php:30
/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:26

42) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2455 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Component/ClassLoader/Tests/Fixtures/php5.4/traits.php)
Melp\Cg\Common\ParserException: Parser exception

  9.     {
 10.         use TFoo;
             ^--------- Unexpected data, expected }
 11.     }



/home/gerard/work/cg/src/Melp/Cg/Common/Scanner.php:84
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/ClassParser.php:60
/home/gerard/work/cg/src/Melp/Cg/Common/Parser.php:31
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/FileParser.php:30
/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:26

43) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2557 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Component/Translation/Loader/CsvFileLoader.php)
Melp\Cg\Common\ParserException: Parser exception

 24. {
 25.     private $delimiter = ';';
                                ^--------- Unexpected data, expected }
 26.     private $enclosure = '"';



/home/gerard/work/cg/src/Melp/Cg/Common/Scanner.php:84
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/ClassParser.php:60
/home/gerard/work/cg/src/Melp/Cg/Common/Parser.php:31
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/FileParser.php:30
/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:26

44) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2570 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Component/Translation/Dumper/CsvFileDumper.php)
Melp\Cg\Common\ParserException: Parser exception

 22. {
 23.     private $delimiter = ';';
                                ^--------- Unexpected data, expected }
 24.     private $enclosure = '"';



/home/gerard/work/cg/src/Melp/Cg/Common/Scanner.php:84
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/ClassParser.php:60
/home/gerard/work/cg/src/Melp/Cg/Common/Parser.php:31
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/FileParser.php:30
/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:26

45) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2582 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Component/Translation/Util/ArrayConverter.php)
Melp\Cg\Common\ParserException: Parser exception

 50. 
 51.     private static function &getElementByPath(array &$tree, array $parts)
                                 ^--------- Unexpected data, expected data matching #[a-zA-Z_][a-zA-Z0-9_]*#A
 52.     {



/home/gerard/work/cg/src/Melp/Cg/Common/Scanner.php:95
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/FunctionParser.php:37
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/MethodParser.php:20
/home/gerard/work/cg/src/Melp/Cg/Common/Parser.php:31
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/ClassParser.php:59
/home/gerard/work/cg/src/Melp/Cg/Common/Parser.php:31
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/FileParser.php:30
/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:26

46) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2594 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Component/DomCrawler/FormFieldRegistry.php)
Melp\Cg\Common\ParserException: Parser exception

 81.      */
 82.     public function &get($name)
                         ^--------- Unexpected data, expected data matching #[a-zA-Z_][a-zA-Z0-9_]*#A
 83.     {



/home/gerard/work/cg/src/Melp/Cg/Common/Scanner.php:95
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/FunctionParser.php:37
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/MethodParser.php:20
/home/gerard/work/cg/src/Melp/Cg/Common/Parser.php:31
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/ClassParser.php:59
/home/gerard/work/cg/src/Melp/Cg/Common/Parser.php:31
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/FileParser.php:30
/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:26

47) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2710 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Bundle/SecurityBundle/DependencyInjection/Security/Factory/AbstractFactory.php)
Melp\Cg\Common\ParserException: Parser exception

 91. 
 92.     final public function addOption($name, $default = null)
         ^--------- Unexpected data, expected }
 93.     {



/home/gerard/work/cg/src/Melp/Cg/Common/Scanner.php:84
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/ClassParser.php:60
/home/gerard/work/cg/src/Melp/Cg/Common/Parser.php:31
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/FileParser.php:30
/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:26

48) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2742 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Bundle/FrameworkBundle/Tests/Fixtures/Resources/views/translation.html.php)
Melp\Cg\Common\ParserException: Parser exception

  1. This template is used for translation message extraction tests
     ^--------- Unexpected data, expected <?php
  2. <?php echo $view['translator']->trans('single-quoted key') ?>



/home/gerard/work/cg/src/Melp/Cg/Common/Scanner.php:84
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/FileParser.php:28
/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:26

49) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2804 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Bundle/FrameworkBundle/Tests/Templating/Helper/Resources/Parent/form_label.html.php)
Melp\Cg\Common\ParserException: Parser exception

  1. <label>parent</label>
     ^--------- Unexpected data, expected <?php
  2. 



/home/gerard/work/cg/src/Melp/Cg/Common/Scanner.php:84
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/FileParser.php:28
/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:26

50) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2805 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Bundle/FrameworkBundle/Tests/Templating/Helper/Resources/Custom/_text_id_widget.html.php)
Melp\Cg\Common\ParserException: Parser exception

  1. <div id="container">
     ^--------- Unexpected data, expected <?php
  2.     <?php echo $view['form']->widget($form) ?>



/home/gerard/work/cg/src/Melp/Cg/Common/Scanner.php:84
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/FileParser.php:28
/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:26

51) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2808 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Bundle/FrameworkBundle/Tests/Templating/Helper/Resources/Child/form_label.html.php)
Melp\Cg\Common\ParserException: Parser exception

  1. <label><?php echo $global ?>child</label>
     ^--------- Unexpected data, expected <?php
  2. 



/home/gerard/work/cg/src/Melp/Cg/Common/Scanner.php:84
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/FileParser.php:28
/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:26

52) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2886 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Bundle/FrameworkBundle/Resources/views/Form/button_label.html.php)
Melp\Cg\Common\ParserException: Parser exception

  1. 
    ^--------- Unexpected data, expected <?php



/home/gerard/work/cg/src/Melp/Cg/Common/Scanner.php:84
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/FileParser.php:28
/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:26

53) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2887 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Bundle/FrameworkBundle/Resources/views/Form/textarea_widget.html.php)
Melp\Cg\Common\ParserException: Parser exception

  1. <textarea <?php echo $view['form']->block($form, 'widget_attributes') ?>><?php echo $view->escape($value) ?></textarea>
     ^--------- Unexpected data, expected <?php
  2. 



/home/gerard/work/cg/src/Melp/Cg/Common/Scanner.php:84
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/FileParser.php:28
/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:26

54) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2897 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Bundle/FrameworkBundle/Resources/views/Form/form_widget_compound.html.php)
Melp\Cg\Common\ParserException: Parser exception

  1. <div <?php echo $view['form']->block($form, 'widget_container_attributes') ?>>
     ^--------- Unexpected data, expected <?php
  2.     <?php if (!$form->parent && $errors): ?>



/home/gerard/work/cg/src/Melp/Cg/Common/Scanner.php:84
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/FileParser.php:28
/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:26

55) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2899 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Bundle/FrameworkBundle/Resources/views/Form/choice_widget_collapsed.html.php)
Melp\Cg\Common\ParserException: Parser exception

  1. <select
     ^--------- Unexpected data, expected <?php
  2.     <?php if ($required && null === $placeholder && $placeholder_in_choices === false && $multiple === false):



/home/gerard/work/cg/src/Melp/Cg/Common/Scanner.php:84
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/FileParser.php:28
/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:26

56) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2901 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Bundle/FrameworkBundle/Resources/views/Form/button_attributes.html.php)
Melp\Cg\Common\ParserException: Parser exception

  1. id="<?php echo $view->escape($id) ?>" name="<?php echo $view->escape($full_name) ?>" <?php if ($disabled): ?>disabled="disabled" <?php endif ?>
     ^--------- Unexpected data, expected <?php
  2. <?php foreach ($attr as $k => $v): ?>



/home/gerard/work/cg/src/Melp/Cg/Common/Scanner.php:84
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/FileParser.php:28
/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:26

57) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2903 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Bundle/FrameworkBundle/Resources/views/Form/button_row.html.php)
Melp\Cg\Common\ParserException: Parser exception

  1. <div>
     ^--------- Unexpected data, expected <?php
  2.     <?php echo $view['form']->widget($form) ?>



/home/gerard/work/cg/src/Melp/Cg/Common/Scanner.php:84
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/FileParser.php:28
/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:26

58) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2906 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Bundle/FrameworkBundle/Resources/views/Form/widget_attributes.html.php)
Melp\Cg\Common\ParserException: Parser exception

  1. id="<?php echo $view->escape($id) ?>" name="<?php echo $view->escape($full_name) ?>"<?php if ($disabled): ?> disabled="disabled"<?php endif ?>
     ^--------- Unexpected data, expected <?php
  2. <?php if ($required): ?> required="required"<?php endif ?>



/home/gerard/work/cg/src/Melp/Cg/Common/Scanner.php:84
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/FileParser.php:28
/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:26

59) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2910 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Bundle/FrameworkBundle/Resources/views/Form/radio_widget.html.php)
Melp\Cg\Common\ParserException: Parser exception

  1. <input type="radio"
     ^--------- Unexpected data, expected <?php
  2.     <?php echo $view['form']->block($form, 'widget_attributes') ?>



/home/gerard/work/cg/src/Melp/Cg/Common/Scanner.php:84
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/FileParser.php:28
/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:26

60) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2916 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Bundle/FrameworkBundle/Resources/views/Form/form_row.html.php)
Melp\Cg\Common\ParserException: Parser exception

  1. <div>
     ^--------- Unexpected data, expected <?php
  2.     <?php echo $view['form']->label($form) ?>



/home/gerard/work/cg/src/Melp/Cg/Common/Scanner.php:84
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/FileParser.php:28
/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:26

61) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2918 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Bundle/FrameworkBundle/Resources/views/Form/choice_widget_expanded.html.php)
Melp\Cg\Common\ParserException: Parser exception

  1. <div <?php echo $view['form']->block($form, 'widget_container_attributes') ?>>
     ^--------- Unexpected data, expected <?php
  2. <?php foreach ($form as $child): ?>



/home/gerard/work/cg/src/Melp/Cg/Common/Scanner.php:84
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/FileParser.php:28
/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:26

62) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2922 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Bundle/FrameworkBundle/Resources/views/Form/form_widget_simple.html.php)
Melp\Cg\Common\ParserException: Parser exception

  1. <input type="<?php echo isset($type) ? $view->escape($type) : 'text' ?>" <?php echo $view['form']->block($form, 'widget_attributes') ?><?php if (!empty($value) || is_numeric($value)): ?> value="<?php echo $view->escape($value) ?>"<?php endif ?> />
     ^--------- Unexpected data, expected <?php
  2. 



/home/gerard/work/cg/src/Melp/Cg/Common/Scanner.php:84
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/FileParser.php:28
/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:26

63) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2929 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Bundle/FrameworkBundle/Resources/views/Form/checkbox_widget.html.php)
Melp\Cg\Common\ParserException: Parser exception

  1. <input type="checkbox"
     ^--------- Unexpected data, expected <?php
  2.     <?php echo $view['form']->block($form, 'widget_attributes') ?>



/home/gerard/work/cg/src/Melp/Cg/Common/Scanner.php:84
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/FileParser.php:28
/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:26

64) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2930 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Bundle/FrameworkBundle/Resources/views/FormTable/form_widget_compound.html.php)
Melp\Cg\Common\ParserException: Parser exception

  1. <table <?php echo $view['form']->block($form, 'widget_container_attributes') ?>>
     ^--------- Unexpected data, expected <?php
  2.     <?php if (!$form->parent && $errors): ?>



/home/gerard/work/cg/src/Melp/Cg/Common/Scanner.php:84
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/FileParser.php:28
/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:26

65) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2931 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Bundle/FrameworkBundle/Resources/views/FormTable/button_row.html.php)
Melp\Cg\Common\ParserException: Parser exception

  1. <tr>
     ^--------- Unexpected data, expected <?php
  2.     <td></td>



/home/gerard/work/cg/src/Melp/Cg/Common/Scanner.php:84
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/FileParser.php:28
/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:26

66) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2932 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Bundle/FrameworkBundle/Resources/views/FormTable/form_row.html.php)
Melp\Cg\Common\ParserException: Parser exception

  1. <tr>
     ^--------- Unexpected data, expected <?php
  2.     <td>



/home/gerard/work/cg/src/Melp/Cg/Common/Scanner.php:84
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/FileParser.php:28
/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:26

67) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2933 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Bundle/FrameworkBundle/Resources/views/FormTable/hidden_row.html.php)
Melp\Cg\Common\ParserException: Parser exception

  1. <tr style="display: none">
     ^--------- Unexpected data, expected <?php
  2.     <td colspan="2">



/home/gerard/work/cg/src/Melp/Cg/Common/Scanner.php:84
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/FileParser.php:28
/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:26

68) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #3001 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Bridge/ProxyManager/Tests/LazyProxy/Fixtures/includes/foo.php)
Melp\Cg\Common\ParserException: Parser exception

  4. {
  5.     public $foo, $moo;
                    ^--------- Unexpected data, expected ;
  6. 



/home/gerard/work/cg/src/Melp/Cg/Common/Scanner.php:84
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/PropertyParser.php:28
/home/gerard/work/cg/src/Melp/Cg/Common/Parser.php:31
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/ClassParser.php:59
/home/gerard/work/cg/src/Melp/Cg/Common/Parser.php:31
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/FileParser.php:30
/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:26

69) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #3044 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Bridge/Twig/Tests/Command/LintCommandTest.php)
Uninitialized string offset: 3100

/home/gerard/work/cg/src/Melp/Cg/Common/Scanner.php:172
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/FunctionParser.php:69
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/MethodParser.php:20
/home/gerard/work/cg/src/Melp/Cg/Common/Parser.php:31
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/ClassParser.php:59
/home/gerard/work/cg/src/Melp/Cg/Common/Parser.php:31
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/FileParser.php:30
/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:26

70) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #3045 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Bridge/Twig/Tests/TwigEngineTest.php)
Melp\Cg\Common\ParserException: Parser exception

 78. }
 79. 
    ^--------- Unexpected data, expected }



/home/gerard/work/cg/src/Melp/Cg/Common/Scanner.php:84
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/ClassParser.php:60
/home/gerard/work/cg/src/Melp/Cg/Common/Parser.php:31
/home/gerard/work/cg/src/Melp/Cg/Php/Parser/FileParser.php:30
/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:26

--


There were 145 failures:

1) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #169 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Component/Form/Tests/FormIntegrationTestCase.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
     /**
-    * {@inheritdoc}
-    */
+     * {@inheritdoc}
+     */
     protected function setUp()
     {
         @trigger_error('The '.__CLASS__.' class is deprecated since version 2.3 and will be removed in 3.0. Use the Symfony\Component\Form\Test\FormIntegrationTestCase class instead.', E_USER_DEPRECATED);
         parent::setUp();
     }
 }'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

2) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #173 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Component/Form/Tests/FormPerformanceTestCase.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
     /**
-    * {@inheritdoc}
-    */
+     * {@inheritdoc}
+     */
     protected function setUp()
     {
         @trigger_error('The '.__CLASS__.' class is deprecated since version 2.3 and will be removed in 3.0. Use the Symfony\Component\Form\Test\FormPerformanceTestCase class instead.', E_USER_DEPRECATED);
         parent::setUp();
     }
 }'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

3) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #191 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Component/Form/Extension/DependencyInjection/DependencyInjectionExtension.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
     private $guesserLoaded = false;
-    public function __construct(ContainerInterface $container,
-        array $typeServiceIds, array $typeExtensionServiceIds,
-        array $guesserServiceIds)
+    public function __construct(ContainerInterface $container, array $typeServiceIds, array $typeExtensionServiceIds, array $guesserServiceIds)
     {
         $this->container = $container;
         $this->typeServiceIds = $typeServiceIds;
         $this->typeExtensionServiceIds = $typeExtensionServiceIds;
         $this->guesserServiceIds = $guesserServiceIds;
     }
     public function getType($name)
     {
         if (!isset($this->typeServiceIds[$name])) {
             throw new InvalidArgumentException(sprintf('The field type "%s" is not registered with the service container.', $name));
         }
         $type = $this->container->get($this->typeServiceIds[$name]);
         if ($type->getName() !== $name) {
             throw new InvalidArgumentException(
                 sprintf('The type name specified for the service "%s" does not match the actual name. Expected "%s", given "%s"',
                     $this->typeServiceIds[$name],
                     $name,
                     $type->getName()
                 ));
         }
         return $type;
     }
     public function hasType($name)
     {
         return isset($this->typeServiceIds[$name]);
     }
     public function getTypeExtensions($name)
     {
         $extensions = array();
         if (isset($this->typeExtensionServiceIds[$name])) {
             foreach ($this->typeExtensionServiceIds[$name] as $serviceId) {
                 $extensions[] = $this->container->get($serviceId);
             }
         }
         return $extensions;
     }
     public function hasTypeExtensions($name)
     {
         return isset($this->typeExtensionServiceIds[$name]);
     }
     public function getTypeGuesser()
     {
         if (!$this->guesserLoaded) {
             $this->guesserLoaded = true;
             $guessers = array();
             foreach ($this->guesserServiceIds as $serviceId) {
                 $guessers[] = $this->container->get($serviceId);
             }
             if (count($guessers) > 0) {
                 $this->guesser = new FormTypeGuesserChain($guessers);
             }
         }
         return $this->guesser;
     }
 }'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

4) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #345 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Component/Form/Util/OrderedHashMapIterator.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
     /**
-     *{@inheritdoc}
+     * {@inheritdoc}

@@ @@
     /**
-     *{@inheritdoc}
+     * {@inheritdoc}

@@ @@
     /**
-     *{@inheritdoc}
+     * {@inheritdoc}

@@ @@
     /**
-     *{@inheritdoc}
+     * {@inheritdoc}
      *
      * @since 2.2.6
      */
     public function rewind()
     {
         $this->cursor = 0;
         if (isset($this->orderedKeys[0])) {
             $this->key = $this->orderedKeys[0];
             $this->current = $this->elements[$this->key];
         } else {
             $this->key = null;
             $this->current = null;
         }
     }
 }'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

5) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #346 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Component/Form/Util/VirtualFormAwareIterator.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
     /**
-     *{@inheritdoc}
+     * {@inheritdoc}
      */
     public function hasChildren()
     {
         return (bool) $this->current()->getConfig()->getInheritData();
     }
 }'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

6) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #410 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Component/Finder/Tests/Iterator/MockSplFileInfo.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 {
-    const   TYPE_DIRECTORY = 1;
-    const   TYPE_FILE = 2;
-    const   TYPE_UNKNOWN = 3;
+    const TYPE_DIRECTORY = 1;
+    const TYPE_FILE = 2;
+    const TYPE_UNKNOWN = 3;
     private $contents = null;
     private $mode = null;
     private $type = null;
     private $relativePath = null;
     private $relativePathname = null;
     public function __construct($param)
     {
         if (is_string($param)) {
             parent::__construct($param);
         } elseif (is_array($param)) {
             $defaults = array(
               'name' => 'file.txt',
               'contents' => null,
               'mode' => null,
               'type' => null,
               'relativePath' => null,
               'relativePathname' => null,
             );
             $defaults = array_merge($defaults, $param);
             parent::__construct($defaults['name']);
             $this->setContents($defaults['contents']);
             $this->setMode($defaults['mode']);
             $this->setType($defaults['type']);
             $this->setRelativePath($defaults['relativePath']);
             $this->setRelativePathname($defaults['relativePathname']);
         } else {
             throw new \RuntimeException(sprintf('Incorrect parameter "%s"', $param));
         }
     }
     public function isFile()
     {
         if (null === $this->type) {
             return false !== strpos($this->getFilename(), 'file');
         };
         return self::TYPE_FILE === $this->type;
     }
     public function isDir()
     {
         if (null === $this->type) {
             return false !== strpos($this->getFilename(), 'directory');
         }
         return self::TYPE_DIRECTORY === $this->type;
     }
     public function isReadable()
     {
         if (null === $this->mode) {
             return preg_match('/r\+/', $this->getFilename());
         }
         return preg_match('/r\+/', $this->mode);
     }
     public function getContents()
     {
         return $this->contents;
     }
     public function setContents($contents)
     {
         $this->contents = $contents;
     }
     public function setMode($mode)
     {
         $this->mode = $mode;
     }
     public function setType($type)
     {
         if (is_string($type)) {
             switch ($type) {
                 case 'directory':
                     $this->type = self::TYPE_DIRECTORY;
                 case 'd':
                     $this->type = self::TYPE_DIRECTORY;
                     break;
                 case 'file':
                     $this->type = self::TYPE_FILE;
                 case 'f':
                     $this->type = self::TYPE_FILE;
                     break;
                 default:
                     $this->type = self::TYPE_UNKNOWN;
             }
         } else {
             $this->type = $type;
         }
     }
     public function setRelativePath($relativePath)
     {
         $this->relativePath = $relativePath;
     }
     public function setRelativePathname($relativePathname)
     {
         $this->relativePathname = $relativePathname;
     }
     public function getRelativePath()
     {
         return $this->relativePath;
     }
     public function getRelativePathname()
     {
         return $this->relativePathname;
     }
 }'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

7) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #479 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Component/DependencyInjection/Tests/Fixtures/includes/createphar.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 '<?php
 $file = __DIR__.'/ProjectWithXsdExtensionInPhar.phar';
 if (is_file($file)) {
-    @unlink($file);
+@unlink($file);

@@ @@
 <xsd:schema xmlns="http://www.example.com/schema/projectwithxsdinphar"
-    xmlns:xsd="http://www.w3.org/2001/XMLSchema"
-    targetNamespace="http://www.example.com/schema/projectwithxsdinphar"
-    elementFormDefault="qualified">
-  <xsd:element name="bar" type="bar" />
-  <xsd:complexType name="bar">
-    <xsd:attribute name="foo" type="xsd:string" />
-  </xsd:complexType>
+xmlns:xsd="http://www.w3.org/2001/XMLSchema"
+targetNamespace="http://www.example.com/schema/projectwithxsdinphar"
+elementFormDefault="qualified">
+<xsd:element name="bar" type="bar" />
+<xsd:complexType name="bar">
+<xsd:attribute name="foo" type="xsd:string" />
+</xsd:complexType>
 </xsd:schema>
 EOT
 );
 $phar->setStub('<?php Phar::mapPhar("ProjectWithXsdExtensionInPhar.phar"); require_once "phar://ProjectWithXsdExtensionInPhar.phar/ProjectWithXsdExtensionInPhar.php"; __HALT_COMPILER(); ?>');'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

8) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #481 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Component/DependencyInjection/Tests/Fixtures/containers/container12.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 '<?php
 use Symfony\Component\DependencyInjection\ContainerBuilder;
 $container = new ContainerBuilder();
 $container->
-    register('foo', 'FooClass\\Foo')->
-    addArgument('foo<>&bar')->
-    addTag('foo"bar\\bar', array('foo' => 'foo"barřž€'))
+register('foo', 'FooClass\\Foo')->
+addArgument('foo<>&bar')->
+addTag('foo"bar\\bar', array('foo' => 'foo"barřž€'))
 ;
 return $container;'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

9) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #482 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Component/DependencyInjection/Tests/Fixtures/containers/container15.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 '<?php
 use Symfony\Component\DependencyInjection\ContainerBuilder;
 $container = new ContainerBuilder();
 $container
-    ->register('foo', 'FooClass\\Foo')
-    ->setDecoratedService('bar', 'bar.woozy')
+->register('foo', 'FooClass\\Foo')
+->setDecoratedService('bar', 'bar.woozy')
 ;
 return $container;'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

10) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #483 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Component/DependencyInjection/Tests/Fixtures/containers/container10.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 $container->
-    register('foo', 'FooClass')->
-    addArgument(new Reference('bar'))
+register('foo', 'FooClass')->
+addArgument(new Reference('bar'))
 ;
 return $container;'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

11) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #484 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Component/DependencyInjection/Tests/Fixtures/containers/container13.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 '<?php
 use Symfony\Component\DependencyInjection\ContainerBuilder;
 use Symfony\Component\DependencyInjection\Reference;
 $container = new ContainerBuilder();
 $container->
-    register('foo', 'FooClass')->
-    addArgument(new Reference('bar'))
+register('foo', 'FooClass')->
+addArgument(new Reference('bar'))
 ;
 $container->
-    register('bar', 'BarClass')
+register('bar', 'BarClass')
 ;
 $container->compile();
 return $container;'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

12) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #485 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Component/DependencyInjection/Tests/Fixtures/containers/legacy-container9.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 $container->
-    register('foo', 'Bar\FooClass')->
-    addTag('foo', array('foo' => 'foo'))->
-    addTag('foo', array('bar' => 'bar'))->
-    setFactoryClass('Bar\\FooClass')->
-    setFactoryMethod('getInstance')->
-    setArguments(array('foo', new Reference('foo.baz'), array('%foo%' => 'foo is %foo%', 'foobar' => '%foo%'), true, new Reference('service_container')))->
-    setProperties(array('foo' => 'bar', 'moo' => new Reference('foo.baz'), 'qux' => array('%foo%' => 'foo is %foo%', 'foobar' => '%foo%')))->
-    addMethodCall('setBar', array(new Reference('bar')))->
-    addMethodCall('initialize')->
-    setConfigurator('sc_configure')
+register('foo', 'Bar\FooClass')->
+addTag('foo', array('foo' => 'foo'))->
+addTag('foo', array('bar' => 'bar'))->
+setFactoryClass('Bar\\FooClass')->
+setFactoryMethod('getInstance')->
+setArguments(array('foo', new Reference('foo.baz'), array('%foo%' => 'foo is %foo%', 'foobar' => '%foo%'), true, new Reference('service_container')))->
+setProperties(array('foo' => 'bar', 'moo' => new Reference('foo.baz'), 'qux' => array('%foo%' => 'foo is %foo%', 'foobar' => '%foo%')))->
+addMethodCall('setBar', array(new Reference('bar')))->
+addMethodCall('initialize')->
+setConfigurator('sc_configure')
 ;
 $container->
-    register('foo.baz', '%baz_class%')->
-    setFactoryClass('%baz_class%')->
-    setFactoryMethod('getInstance')->
-    setConfigurator(array('%baz_class%', 'configureStatic1'))
+register('foo.baz', '%baz_class%')->
+setFactoryClass('%baz_class%')->
+setFactoryMethod('getInstance')->
+setConfigurator(array('%baz_class%', 'configureStatic1'))
 ;
 $container->
-    register('factory_service', 'Bar')->
-    setFactoryService('foo.baz')->
-    setFactoryMethod('getInstance')
+register('factory_service', 'Bar')->
+setFactoryService('foo.baz')->
+setFactoryMethod('getInstance')
 ;
 $container
-    ->register('foo_bar', '%foo_class%')
-    ->setScope('prototype')
+->register('foo_bar', '%foo_class%')
+->setScope('prototype')
 ;
 $container->getParameterBag()->clear();
 $container->getParameterBag()->add(array(
-    'foo_class' => 'Bar\FooClass',
-    'baz_class' => 'BazClass',
-    'foo' => 'bar',
+'foo_class' => 'Bar\FooClass',
+'baz_class' => 'BazClass',
+'foo' => 'bar',
 ));
 return $container;'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

13) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #486 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Component/DependencyInjection/Tests/Fixtures/containers/legacy-container18.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 $container->
-    register('foo', 'FooClass')->
-    setScope('request')
+register('foo', 'FooClass')->
+setScope('request')
 ;
 $container->compile();
 return $container;'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

14) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #487 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Component/DependencyInjection/Tests/Fixtures/containers/container16.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 '<?php
 use Symfony\Component\DependencyInjection\ContainerBuilder;
 $container = new ContainerBuilder();
 $container
-    ->register('foo', 'FooClass\\Foo')
-    ->setDecoratedService('bar')
+->register('foo', 'FooClass\\Foo')
+->setDecoratedService('bar')
 ;
 return $container;'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

15) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #488 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Component/DependencyInjection/Tests/Fixtures/containers/container8.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 '<?php
 use Symfony\Component\DependencyInjection\ContainerBuilder;
 use Symfony\Component\DependencyInjection\ParameterBag\ParameterBag;
 $container = new ContainerBuilder(new ParameterBag(array(
-    'FOO' => '%baz%',
-    'baz' => 'bar',
-    'bar' => 'foo is %%foo bar',
-    'escape' => '@escapeme',
-    'values' => array(true, false, null, 0, 1000.3, 'true', 'false', 'null'),
+'FOO' => '%baz%',
+'baz' => 'bar',
+'bar' => 'foo is %%foo bar',
+'escape' => '@escapeme',
+'values' => array(true, false, null, 0, 1000.3, 'true', 'false', 'null'),
 )));
 return $container;'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

16) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #489 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Component/DependencyInjection/Tests/Fixtures/containers/container19.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 $container
-    ->register('service_from_anonymous_factory', 'Bar\FooClass')
-    ->setFactory(array(new Definition('Bar\FooClass'), 'getInstance'))
+->register('service_from_anonymous_factory', 'Bar\FooClass')
+->setFactory(array(new Definition('Bar\FooClass'), 'getInstance'))
 ;
 $anonymousServiceWithFactory = new Definition('Bar\FooClass');
 $anonymousServiceWithFactory->setFactory('Bar\FooClass::getInstance');
 $container
-    ->register('service_with_method_call_and_factory', 'Bar\FooClass')
-    ->addMethodCall('setBar', array($anonymousServiceWithFactory))
+->register('service_with_method_call_and_factory', 'Bar\FooClass')
+->addMethodCall('setBar', array($anonymousServiceWithFactory))
 ;
 return $container;'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

17) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #490 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Component/DependencyInjection/Tests/Fixtures/containers/container20.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 $container
-    ->register('request', 'Request')
-    ->setSynchronized(true)
+->register('request', 'Request')
+->setSynchronized(true)
 ;
 $container
-    ->register('depends_on_request', 'stdClass')
-    ->addMethodCall('setRequest', array(new Reference('request', ContainerInterface::NULL_ON_INVALID_REFERENCE, false)))
+->register('depends_on_request', 'stdClass')
+->addMethodCall('setRequest', array(new Reference('request', ContainerInterface::NULL_ON_INVALID_REFERENCE, false)))
 ;
 return $container;'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

18) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #491 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Component/DependencyInjection/Tests/Fixtures/containers/container21.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 $container
-    ->register('foo', 'Foo')
-    ->setFactory(array($fooFactory, 'createFoo'))
-    ->setConfigurator(array($bar, 'configureFoo'))
+->register('foo', 'Foo')
+->setFactory(array($fooFactory, 'createFoo'))
+->setConfigurator(array($bar, 'configureFoo'))
 ;
 return $container;'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

19) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #492 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Component/DependencyInjection/Tests/Fixtures/containers/container9.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 $container
-    ->register('foo', 'Bar\FooClass')
-    ->addTag('foo', array('foo' => 'foo'))
-    ->addTag('foo', array('bar' => 'bar', 'baz' => 'baz'))
-    ->setFactory(array('Bar\\FooClass', 'getInstance'))
-    ->setArguments(array('foo', new Reference('foo.baz'), array('%foo%' => 'foo is %foo%', 'foobar' => '%foo%'), true, new Reference('service_container')))
-    ->setProperties(array('foo' => 'bar', 'moo' => new Reference('foo.baz'), 'qux' => array('%foo%' => 'foo is %foo%', 'foobar' => '%foo%')))
-    ->addMethodCall('setBar', array(new Reference('bar')))
-    ->addMethodCall('initialize')
-    ->setConfigurator('sc_configure')
+->register('foo', 'Bar\FooClass')
+->addTag('foo', array('foo' => 'foo'))
+->addTag('foo', array('bar' => 'bar', 'baz' => 'baz'))
+->setFactory(array('Bar\\FooClass', 'getInstance'))
+->setArguments(array('foo', new Reference('foo.baz'), array('%foo%' => 'foo is %foo%', 'foobar' => '%foo%'), true, new Reference('service_container')))
+->setProperties(array('foo' => 'bar', 'moo' => new Reference('foo.baz'), 'qux' => array('%foo%' => 'foo is %foo%', 'foobar' => '%foo%')))
+->addMethodCall('setBar', array(new Reference('bar')))
+->addMethodCall('initialize')
+->setConfigurator('sc_configure')
 ;
 $container
-    ->register('foo.baz', '%baz_class%')
-    ->setFactory(array('%baz_class%', 'getInstance'))
-    ->setConfigurator(array('%baz_class%', 'configureStatic1'))
+->register('foo.baz', '%baz_class%')
+->setFactory(array('%baz_class%', 'getInstance'))
+->setConfigurator(array('%baz_class%', 'configureStatic1'))
 ;
 $container
-    ->register('bar', 'Bar\FooClass')
-    ->setArguments(array('foo', new Reference('foo.baz'), new Parameter('foo_bar')))
-    ->setConfigurator(array(new Reference('foo.baz'), 'configure'))
+->register('bar', 'Bar\FooClass')
+->setArguments(array('foo', new Reference('foo.baz'), new Parameter('foo_bar')))
+->setConfigurator(array(new Reference('foo.baz'), 'configure'))
 ;
 $container
-    ->register('foo_bar', '%foo_class%')
-    ->setShared(false)
+->register('foo_bar', '%foo_class%')
+->setShared(false)
 ;
 $container->getParameterBag()->clear();
 $container->getParameterBag()->add(array(
-    'baz_class' => 'BazClass',
-    'foo_class' => 'Bar\FooClass',
-    'foo' => 'bar',
+'baz_class' => 'BazClass',
+'foo_class' => 'Bar\FooClass',
+'foo' => 'bar',
 ));
 $container->setAlias('alias_for_foo', 'foo');
 $container->setAlias('alias_for_alias', 'alias_for_foo');
 $container
-    ->register('method_call1', 'Bar\FooClass')
-    ->setFile(realpath(__DIR__.'/../includes/foo.php'))
-    ->addMethodCall('setBar', array(new Reference('foo')))
-    ->addMethodCall('setBar', array(new Reference('foo2', ContainerInterface::NULL_ON_INVALID_REFERENCE)))
-    ->addMethodCall('setBar', array(new Reference('foo3', ContainerInterface::IGNORE_ON_INVALID_REFERENCE)))
-    ->addMethodCall('setBar', array(new Reference('foobaz', ContainerInterface::IGNORE_ON_INVALID_REFERENCE)))
-    ->addMethodCall('setBar', array(new Expression('service("foo").foo() ~ (container.hasparameter("foo") ? parameter("foo") : "default")')))
+->register('method_call1', 'Bar\FooClass')
+->setFile(realpath(__DIR__.'/../includes/foo.php'))
+->addMethodCall('setBar', array(new Reference('foo')))
+->addMethodCall('setBar', array(new Reference('foo2', ContainerInterface::NULL_ON_INVALID_REFERENCE)))
+->addMethodCall('setBar', array(new Reference('foo3', ContainerInterface::IGNORE_ON_INVALID_REFERENCE)))
+->addMethodCall('setBar', array(new Reference('foobaz', ContainerInterface::IGNORE_ON_INVALID_REFERENCE)))
+->addMethodCall('setBar', array(new Expression('service("foo").foo() ~ (container.hasparameter("foo") ? parameter("foo") : "default")')))
 ;
 $container
-    ->register('foo_with_inline', 'Foo')
-    ->addMethodCall('setBar', array(new Reference('inlined')))
+->register('foo_with_inline', 'Foo')
+->addMethodCall('setBar', array(new Reference('inlined')))
 ;
 $container
-    ->register('inlined', 'Bar')
-    ->setProperty('pub', 'pub')
-    ->addMethodCall('setBaz', array(new Reference('baz')))
-    ->setPublic(false)
+->register('inlined', 'Bar')
+->setProperty('pub', 'pub')
+->addMethodCall('setBaz', array(new Reference('baz')))
+->setPublic(false)
 ;
 $container
-    ->register('baz', 'Baz')
-    ->addMethodCall('setFoo', array(new Reference('foo_with_inline')))
+->register('baz', 'Baz')
+->addMethodCall('setFoo', array(new Reference('foo_with_inline')))
 ;
 $container
-    ->register('request', 'Request')
-    ->setSynthetic(true)
+->register('request', 'Request')
+->setSynthetic(true)
 ;
 $container
-    ->register('configurator_service', 'ConfClass')
-    ->setPublic(false)
-    ->addMethodCall('setFoo', array(new Reference('baz')))
+->register('configurator_service', 'ConfClass')
+->setPublic(false)
+->addMethodCall('setFoo', array(new Reference('baz')))
 ;
 $container
-    ->register('configured_service', 'stdClass')
-    ->setConfigurator(array(new Reference('configurator_service'), 'configureStdClass'))
+->register('configured_service', 'stdClass')
+->setConfigurator(array(new Reference('configurator_service'), 'configureStdClass'))
 ;
 $container
-    ->register('decorated', 'stdClass')
+->register('decorated', 'stdClass')
 ;
 $container
-    ->register('decorator_service', 'stdClass')
-    ->setDecoratedService('decorated')
+->register('decorator_service', 'stdClass')
+->setDecoratedService('decorated')
 ;
 $container
-    ->register('decorator_service_with_name', 'stdClass')
-    ->setDecoratedService('decorated', 'decorated.pif-pouf')
+->register('decorator_service_with_name', 'stdClass')
+->setDecoratedService('decorated', 'decorated.pif-pouf')
 ;
 $container
-    ->register('new_factory', 'FactoryClass')
-    ->setProperty('foo', 'bar')
-    ->setPublic(false)
+->register('new_factory', 'FactoryClass')
+->setProperty('foo', 'bar')
+->setPublic(false)
 ;
 $container
-    ->register('factory_service', 'Bar')
-    ->setFactory(array(new Reference('foo.baz'), 'getInstance'))
+->register('factory_service', 'Bar')
+->setFactory(array(new Reference('foo.baz'), 'getInstance'))
 ;
 $container
-    ->register('new_factory_service', 'FooBarBaz')
-    ->setProperty('foo', 'bar')
-    ->setFactory(array(new Reference('new_factory'), 'getInstance'))
+->register('new_factory_service', 'FooBarBaz')
+->setProperty('foo', 'bar')
+->setFactory(array(new Reference('new_factory'), 'getInstance'))
 ;
 $container
-    ->register('service_from_static_method', 'Bar\FooClass')
-    ->setFactory(array('Bar\FooClass', 'getInstance'))
+->register('service_from_static_method', 'Bar\FooClass')
+->setFactory(array('Bar\FooClass', 'getInstance'))
 ;
 return $container;'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

20) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #493 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Component/DependencyInjection/Tests/Fixtures/containers/container11.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 '<?php
 use Symfony\Component\DependencyInjection\ContainerBuilder;
 use Symfony\Component\DependencyInjection\Definition;
 $container = new ContainerBuilder();
 $container->
-    register('foo', 'FooClass')->
-    addArgument(new Definition('BarClass', array(new Definition('BazClass'))))
+register('foo', 'FooClass')->
+addArgument(new Definition('BarClass', array(new Definition('BazClass'))))
 ;
 return $container;'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

21) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #494 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Component/DependencyInjection/Tests/Fixtures/containers/container14.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 if (!class_exists('Container14\ProjectServiceContainer')) {
-    class ProjectServiceContainer extends ContainerBuilder
-    {
-    }
+class ProjectServiceContainer extends ContainerBuilder
+{
+}
 }
 return new ProjectServiceContainer();'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

22) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #495 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Component/DependencyInjection/Tests/Fixtures/containers/container17.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 '<?php
 use Symfony\Component\DependencyInjection\ContainerBuilder;
 $container = new ContainerBuilder();
 $container
-    ->register('foo', '%foo.class%')
+->register('foo', '%foo.class%')
 ;
 return $container;'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

23) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #762 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Component/Validator/Constraints/UrlValidator.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
     const PATTERN = '~^
-            (%s)://                                 # protocol
-            (([\pL\pN-]+:)?([\pL\pN-]+)@)?          # basic auth
-            (
-                ([\pL\pN\pS-\.])+(\.?([\pL]|xn\-\-[\pL\pN-]+)+\.?) # a domain name
-                    |                                              # or
-                \d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}                 # a IP address
-                    |                                              # or
-                \[
-                    (?:(?:(?:(?:(?:(?:(?:[0-9a-f]{1,4})):){6})(?:(?:(?:(?:(?:[0-9a-f]{1,4})):(?:(?:[0-9a-f]{1,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9]))\.){3}(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9])))))))|(?:(?:::(?:(?:(?:[0-9a-f]{1,4})):){5})(?:(?:(?:(?:(?:[0-9a-f]{1,4})):(?:(?:[0-9a-f]{1,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9]))\.){3}(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9])))))))|(?:(?:(?:(?:(?:[0-9a-f]{1,4})))?::(?:(?:(?:[0-9a-f]{1,4})):){4})(?:(?:(?:(?:(?:[0-9a-f]{1,4})):(?:(?:[0-9a-f]{1,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9]))\.){3}(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9])))))))|(?:(?:(?:(?:(?:(?:[0-9a-f]{1,4})):){0,1}(?:(?:[0-9a-f]{1,4})))?::(?:(?:(?:[0-9a-f]{1,4})):){3})(?:(?:(?:(?:(?:[0-9a-f]{1,4})):(?:(?:[0-9a-f]{1,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9]))\.){3}(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9])))))))|(?:(?:(?:(?:(?:(?:[0-9a-f]{1,4})):){0,2}(?:(?:[0-9a-f]{1,4})))?::(?:(?:(?:[0-9a-f]{1,4})):){2})(?:(?:(?:(?:(?:[0-9a-f]{1,4})):(?:(?:[0-9a-f]{1,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9]))\.){3}(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9])))))))|(?:(?:(?:(?:(?:(?:[0-9a-f]{1,4})):){0,3}(?:(?:[0-9a-f]{1,4})))?::(?:(?:[0-9a-f]{1,4})):)(?:(?:(?:(?:(?:[0-9a-f]{1,4})):(?:(?:[0-9a-f]{1,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9]))\.){3}(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9])))))))|(?:(?:(?:(?:(?:(?:[0-9a-f]{1,4})):){0,4}(?:(?:[0-9a-f]{1,4})))?::)(?:(?:(?:(?:(?:[0-9a-f]{1,4})):(?:(?:[0-9a-f]{1,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9]))\.){3}(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9])))))))|(?:(?:(?:(?:(?:(?:[0-9a-f]{1,4})):){0,5}(?:(?:[0-9a-f]{1,4})))?::)(?:(?:[0-9a-f]{1,4})))|(?:(?:(?:(?:(?:(?:[0-9a-f]{1,4})):){0,6}(?:(?:[0-9a-f]{1,4})))?::))))
-                \]  # a IPv6 address
-            )
-            (:[0-9]+)?                              # a port (optional)
-            (/?|/\S+)                               # a /, nothing or a / with something
-        $~ixu';
+                (%s)://                                 # protocol
+                (([\pL\pN-]+:)?([\pL\pN-]+)@)?          # basic auth
+                (
+                    ([\pL\pN\pS-\.])+(\.?([\pL]|xn\-\-[\pL\pN-]+)+\.?) # a domain name
+                        |                                              # or
+                    \d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}                 # a IP address
+                        |                                              # or
+                    \[
+                        (?:(?:(?:(?:(?:(?:(?:[0-9a-f]{1,4})):){6})(?:(?:(?:(?:(?:[0-9a-f]{1,4})):(?:(?:[0-9a-f]{1,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9]))\.){3}(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9])))))))|(?:(?:::(?:(?:(?:[0-9a-f]{1,4})):){5})(?:(?:(?:(?:(?:[0-9a-f]{1,4})):(?:(?:[0-9a-f]{1,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9]))\.){3}(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9])))))))|(?:(?:(?:(?:(?:[0-9a-f]{1,4})))?::(?:(?:(?:[0-9a-f]{1,4})):){4})(?:(?:(?:(?:(?:[0-9a-f]{1,4})):(?:(?:[0-9a-f]{1,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9]))\.){3}(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9])))))))|(?:(?:(?:(?:(?:(?:[0-9a-f]{1,4})):){0,1}(?:(?:[0-9a-f]{1,4})))?::(?:(?:(?:[0-9a-f]{1,4})):){3})(?:(?:(?:(?:(?:[0-9a-f]{1,4})):(?:(?:[0-9a-f]{1,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9]))\.){3}(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9])))))))|(?:(?:(?:(?:(?:(?:[0-9a-f]{1,4})):){0,2}(?:(?:[0-9a-f]{1,4})))?::(?:(?:(?:[0-9a-f]{1,4})):){2})(?:(?:(?:(?:(?:[0-9a-f]{1,4})):(?:(?:[0-9a-f]{1,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9]))\.){3}(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9])))))))|(?:(?:(?:(?:(?:(?:[0-9a-f]{1,4})):){0,3}(?:(?:[0-9a-f]{1,4})))?::(?:(?:[0-9a-f]{1,4})):)(?:(?:(?:(?:(?:[0-9a-f]{1,4})):(?:(?:[0-9a-f]{1,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9]))\.){3}(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9])))))))|(?:(?:(?:(?:(?:(?:[0-9a-f]{1,4})):){0,4}(?:(?:[0-9a-f]{1,4})))?::)(?:(?:(?:(?:(?:[0-9a-f]{1,4})):(?:(?:[0-9a-f]{1,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9]))\.){3}(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9])))))))|(?:(?:(?:(?:(?:(?:[0-9a-f]{1,4})):){0,5}(?:(?:[0-9a-f]{1,4})))?::)(?:(?:[0-9a-f]{1,4})))|(?:(?:(?:(?:(?:(?:[0-9a-f]{1,4})):){0,6}(?:(?:[0-9a-f]{1,4})))?::))))
+                    \]  # a IPv6 address
+                )
+                (:[0-9]+)?                              # a port (optional)
+                (/?|/\S+)                               # a /, nothing or a / with something
+            $~ixu';
     /**
      * {@inheritdoc}
      */
     public function validate($value, Constraint $constraint)
     {
         if (!$constraint instanceof Url) {
             throw new UnexpectedTypeException($constraint, __NAMESPACE__.'\Url');
         }
         if (null === $value || '' === $value) {
             return;
         }
         if (!is_scalar($value) && !(is_object($value) && method_exists($value, '__toString'))) {
             throw new UnexpectedTypeException($value, 'string');
         }
         $value = (string) $value;
         $pattern = sprintf(static::PATTERN, implode('|', $constraint->protocols));
         if (!preg_match($pattern, $value)) {
             if ($this->context instanceof ExecutionContextInterface) {
                 $this->context->buildViolation($constraint->message)
                     ->setParameter('{{ value }}', $this->formatValue($value))
                     ->setCode(Url::INVALID_URL_ERROR)
                     ->addViolation();
             } else {
                 $this->buildViolation($constraint->message)
                     ->setParameter('{{ value }}', $this->formatValue($value))
                     ->setCode(Url::INVALID_URL_ERROR)
                     ->addViolation();
             }
             return;
         }
         if ($constraint->checkDNS) {
             $host = parse_url($value, PHP_URL_HOST);
             if (!checkdnsrr($host, 'ANY')) {
                 if ($this->context instanceof ExecutionContextInterface) {
                     $this->context->buildViolation($constraint->dnsMessage)
                         ->setParameter('{{ value }}', $this->formatValue($host))
                         ->setCode(Url::INVALID_URL_ERROR)
                         ->addViolation();
                 } else {
                     $this->buildViolation($constraint->dnsMessage)
                         ->setParameter('{{ value }}', $this->formatValue($host))
                         ->setCode(Url::INVALID_URL_ERROR)
                         ->addViolation();
                 }
             }
         }
     }
 }'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

24) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #897 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Component/Validator/Validator.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
     private $objectInitializers;
-    public function __construct(
-        MetadataFactoryInterface $metadataFactory,
-        ConstraintValidatorFactoryInterface $validatorFactory,
-        TranslatorInterface $translator,
-        $translationDomain = 'validators',
-        array $objectInitializers = array()
-    ) {
+    public function __construct(MetadataFactoryInterface $metadataFactory, ConstraintValidatorFactoryInterface $validatorFactory, TranslatorInterface $translator, $translationDomain = 'validators', array $objectInitializers = array()
+        )
+    {
         $this->metadataFactory = $metadataFactory;
         $this->validatorFactory = $validatorFactory;
         $this->translator = $translator;
         $this->translationDomain = $translationDomain;
         $this->objectInitializers = $objectInitializers;
     }
     /**
      * {@inheritdoc}
      */
     public function getMetadataFactory()
     {
         return $this->metadataFactory;
     }
     /**
      * {@inheritdoc}
      */
     public function getMetadataFor($value)
     {
         return $this->metadataFactory->getMetadataFor($value);
     }
     /**
      * {@inheritdoc}
      */
     public function hasMetadataFor($value)
     {
         return $this->metadataFactory->hasMetadataFor($value);
     }
     /**
      * {@inheritdoc}
      */
     public function validate($value, $groups = null, $traverse = false, $deep = false)
     {
         $visitor = $this->createVisitor($value);
         foreach ($this->resolveGroups($groups) as $group) {
             $visitor->validate($value, $group, '', $traverse, $deep);
         }
         return $visitor->getViolations();
     }
     /**
      * {@inheritdoc}
      *
      * @throws ValidatorException If the metadata for the value does not support properties.
      */
     public function validateProperty($containingValue, $property, $groups = null)
     {
         $visitor = $this->createVisitor($containingValue);
         $metadata = $this->metadataFactory->getMetadataFor($containingValue);
         if (!$metadata instanceof PropertyMetadataContainerInterface) {
             $valueAsString = is_scalar($containingValue)
                 ? '"'.$containingValue.'"'
                 : 'the value of type '.gettype($containingValue);
             throw new ValidatorException(sprintf('The metadata for %s does not support properties.', $valueAsString));
         }
         foreach ($this->resolveGroups($groups) as $group) {
             if (!$metadata->hasPropertyMetadata($property)) {
                 continue;
             }
             foreach ($metadata->getPropertyMetadata($property) as $propMeta) {
                 $propMeta->accept($visitor, $propMeta->getPropertyValue($containingValue), $group, $property);
             }
         }
         return $visitor->getViolations();
     }
     /**
      * {@inheritdoc}
      *
      * @throws ValidatorException If the metadata for the value does not support properties.
      */
     public function validatePropertyValue($containingValue, $property, $value, $groups = null)
     {
         $visitor = $this->createVisitor(is_object($containingValue) ? $containingValue : $value);
         $metadata = $this->metadataFactory->getMetadataFor($containingValue);
         if (!$metadata instanceof PropertyMetadataContainerInterface) {
             $valueAsString = is_scalar($containingValue)
                 ? '"'.$containingValue.'"'
                 : 'the value of type '.gettype($containingValue);
             throw new ValidatorException(sprintf('The metadata for '.$valueAsString.' does not support properties.'));
         }
         // If $containingValue is passed as class name, take $value as root
         // and start the traversal with an empty property path
         $propertyPath = is_object($containingValue) ? $property : '';
         foreach ($this->resolveGroups($groups) as $group) {
             if (!$metadata->hasPropertyMetadata($property)) {
                 continue;
             }
             foreach ($metadata->getPropertyMetadata($property) as $propMeta) {
                 $propMeta->accept($visitor, $value, $group, $propertyPath);
             }
         }
         return $visitor->getViolations();
     }
     /**
      * {@inheritdoc}
      */
     public function validateValue($value, $constraints, $groups = null)
     {
         $context = new ExecutionContext($this->createVisitor($value), $this->translator, $this->translationDomain);
         $constraints = is_array($constraints) ? $constraints : array($constraints);
         foreach ($constraints as $constraint) {
             if ($constraint instanceof Valid) {
                 // Why can't the Valid constraint be executed directly?
                 //
                 // It cannot be executed like regular other constraints, because regular
                 // constraints are only executed *if they belong to the validated group*.
                 // The Valid constraint, on the other hand, is always executed and propagates
                 // the group to the cascaded object. The propagated group depends on
                 //
                 //  * Whether a group sequence is currently being executed. Then the default
                 //    group is propagated.
                 //
                 //  * Otherwise the validated group is propagated.
                 throw new ValidatorException(
                     sprintf(
                         'The constraint %s cannot be validated. Use the method validate() instead.',
                         get_class($constraint)
                     )
                 );
             }
             $context->validateValue($value, $constraint, '', $groups);
         }
         return $context->getViolations();
     }
     /**
      * @param mixed $root
      *
      * @return ValidationVisitor
      */
     private function createVisitor($root)
     {
         return new ValidationVisitor(
             $root,
             $this->metadataFactory,
             $this->validatorFactory,
             $this->translator,
             $this->translationDomain,
             $this->objectInitializers
         );
     }
     /**
      * @param null|string|string[] $groups
      *
      * @return string[]
      */
     private function resolveGroups($groups)
     {
         return $groups ? (array) $groups : array(Constraint::DEFAULT_GROUP);
     }
 }'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

25) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #1068 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Component/Debug/ErrorHandler.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
     );
-    private $thrownErrors = 0x1FFF; // E_ALL - E_DEPRECATED - E_USER_DEPRECATED
-    private $scopedErrors = 0x1FFF; // E_ALL - E_DEPRECATED - E_USER_DEPRECATED
-    private $tracedErrors = 0x77FB; // E_ALL - E_STRICT - E_PARSE
-    private $screamedErrors = 0x55; // E_ERROR + E_CORE_ERROR + E_COMPILE_ERROR + E_PARSE
+    private $thrownErrors = 0x1FFF;
+    // E_ALL - E_DEPRECATED - E_USER_DEPRECATED
+    private $scopedErrors = 0x1FFF;
+    // E_ALL - E_DEPRECATED - E_USER_DEPRECATED
+    private $tracedErrors = 0x77FB;
+    // E_ALL - E_STRICT - E_PARSE
+    private $screamedErrors = 0x55;
+    // E_ERROR + E_CORE_ERROR + E_COMPILE_ERROR + E_PARSE
     private $loggedErrors = 0;
     private $loggedTraces = array();
     private $isRecursive = 0;
     private $exceptionHandler;
     private static $reservedMemory;
     private static $stackedErrors = array();
     private static $stackedErrorLevels = array();
     private static $toStringException = null;
     /**
      * Same init value as thrownErrors.
      *
      * @deprecated since version 2.6, to be removed in 3.0.
      */
     private $displayErrors = 0x1FFF;
     /**
      * Registers the error handler.
      *
      * @param self|null|int $handler The handler to register, or @deprecated (since version 2.6, to be removed in 3.0) bit field of thrown levels
      * @param bool          $replace Whether to replace or not any existing handler
      *
      * @return self The registered error handler
      */
     public static function register($handler = null, $replace = true)
     {
         if (null === self::$reservedMemory) {
             self::$reservedMemory = str_repeat('x', 10240);
             register_shutdown_function(__CLASS__.'::handleFatalError');
         }
         $levels = -1;
         if ($handlerIsNew = !$handler instanceof self) {
             // @deprecated polymorphism, to be removed in 3.0
             if (null !== $handler) {
                 $levels = $replace ? $handler : 0;
                 $replace = true;
             }
             $handler = new static();
         }
         $prev = set_error_handler(array($handler, 'handleError'), $handler->thrownErrors | $handler->loggedErrors);
         if ($handlerIsNew && is_array($prev) && $prev[0] instanceof self) {
             $handler = $prev[0];
             $replace = false;
         }
         if ($replace || !$prev) {
             $handler->setExceptionHandler(set_exception_handler(array($handler, 'handleException')));
         } else {
             restore_error_handler();
         }
         $handler->throwAt($levels & $handler->thrownErrors, true);
         return $handler;
     }
     /**
      * Sets a logger to non assigned errors levels.
      *
      * @param LoggerInterface $logger  A PSR-3 logger to put as default for the given levels
      * @param array|int       $levels  An array map of E_* to LogLevel::* or an integer bit field of E_* constants
      * @param bool            $replace Whether to replace or not any existing logger
      */
     public function setDefaultLogger(LoggerInterface $logger, $levels = null, $replace = false)
     {
         $loggers = array();
         if (is_array($levels)) {
             foreach ($levels as $type => $logLevel) {
                 if (empty($this->loggers[$type][0]) || $replace) {
                     $loggers[$type] = array($logger, $logLevel);
                 }
             }
         } else {
             if (null === $levels) {
                 $levels = E_ALL | E_STRICT;
             }
             foreach ($this->loggers as $type => $log) {
                 if (($type & $levels) && (empty($log[0]) || $replace)) {
                     $log[0] = $logger;
                     $loggers[$type] = $log;
                 }
             }
         }
         $this->setLoggers($loggers);
     }
     /**
      * Sets a logger for each error level.
      *
      * @param array $loggers Error levels to [LoggerInterface|null, LogLevel::*] map
      *
      * @return array The previous map
      *
      * @throws \InvalidArgumentException
      */
     public function setLoggers(array $loggers)
     {
         $prevLogged = $this->loggedErrors;
         $prev = $this->loggers;
         foreach ($loggers as $type => $log) {
             if (!isset($prev[$type])) {
                 throw new \InvalidArgumentException('Unknown error type: '.$type);
             }
             if (!is_array($log)) {
                 $log = array($log);
             } elseif (!array_key_exists(0, $log)) {
                 throw new \InvalidArgumentException('No logger provided');
             }
             if (null === $log[0]) {
                 $this->loggedErrors &= ~$type;
             } elseif ($log[0] instanceof LoggerInterface) {
                 $this->loggedErrors |= $type;
             } else {
                 throw new \InvalidArgumentException('Invalid logger provided');
             }
             $this->loggers[$type] = $log + $prev[$type];
         }
         $this->reRegister($prevLogged | $this->thrownErrors);
         return $prev;
     }
     /**
      * Sets a user exception handler.
      *
      * @param callable $handler A handler that will be called on Exception
      *
      * @return callable|null The previous exception handler
      *
      * @throws \InvalidArgumentException
      */
     public function setExceptionHandler($handler)
     {
         if (null !== $handler && !is_callable($handler)) {
             throw new \LogicException('The exception handler must be a valid PHP callable.');
         }
         $prev = $this->exceptionHandler;
         $this->exceptionHandler = $handler;
         return $prev;
     }
     /**
      * Sets the PHP error levels that throw an exception when a PHP error occurs.
      *
      * @param int  $levels  A bit field of E_* constants for thrown errors
      * @param bool $replace Replace or amend the previous value
      *
      * @return int The previous value
      */
     public function throwAt($levels, $replace = false)
     {
         $prev = $this->thrownErrors;
         $this->thrownErrors = ($levels | E_RECOVERABLE_ERROR | E_USER_ERROR) & ~E_USER_DEPRECATED & ~E_DEPRECATED;
         if (!$replace) {
             $this->thrownErrors |= $prev;
         }
         $this->reRegister($prev | $this->loggedErrors);
         // $this->displayErrors is @deprecated since version 2.6
         $this->displayErrors = $this->thrownErrors;
         return $prev;
     }
     /**
      * Sets the PHP error levels for which local variables are preserved.
      *
      * @param int  $levels  A bit field of E_* constants for scoped errors
      * @param bool $replace Replace or amend the previous value
      *
      * @return int The previous value
      */
     public function scopeAt($levels, $replace = false)
     {
         $prev = $this->scopedErrors;
         $this->scopedErrors = (int) $levels;
         if (!$replace) {
             $this->scopedErrors |= $prev;
         }
         return $prev;
     }
     /**
      * Sets the PHP error levels for which the stack trace is preserved.
      *
      * @param int  $levels  A bit field of E_* constants for traced errors
      * @param bool $replace Replace or amend the previous value
      *
      * @return int The previous value
      */
     public function traceAt($levels, $replace = false)
     {
         $prev = $this->tracedErrors;
         $this->tracedErrors = (int) $levels;
         if (!$replace) {
             $this->tracedErrors |= $prev;
         }
         return $prev;
     }
     /**
      * Sets the error levels where the @-operator is ignored.
      *
      * @param int  $levels  A bit field of E_* constants for screamed errors
      * @param bool $replace Replace or amend the previous value
      *
      * @return int The previous value
      */
     public function screamAt($levels, $replace = false)
     {
         $prev = $this->screamedErrors;
         $this->screamedErrors = (int) $levels;
         if (!$replace) {
             $this->screamedErrors |= $prev;
         }
         return $prev;
     }
     /**
      * Re-registers as a PHP error handler if levels changed.
      */
     private function reRegister($prev)
     {
         if ($prev !== $this->thrownErrors | $this->loggedErrors) {
             $handler = set_error_handler('var_dump', 0);
             $handler = is_array($handler) ? $handler[0] : null;
             restore_error_handler();
             if ($handler === $this) {
                 restore_error_handler();
                 set_error_handler(array($this, 'handleError'), $this->thrownErrors | $this->loggedErrors);
             }
         }
     }
     /**
      * Handles errors by filtering then logging them according to the configured bit fields.
      *
      * @param int    $type    One of the E_* constants
      * @param string $file
      * @param int    $line
      * @param array  $context
      *
      * @return bool Returns false when no handling happens so that the PHP engine can handle the error itself.
      *
      * @throws \ErrorException When $this->thrownErrors requests so
      *
      * @internal
      */
     public function handleError($type, $message, $file, $line, array $context, array $backtrace = null)
     {
         $level = error_reporting() | E_RECOVERABLE_ERROR | E_USER_ERROR;
         $log = $this->loggedErrors & $type;
         $throw = $this->thrownErrors & $type & $level;
         $type &= $level | $this->screamedErrors;
         if (!$type || (!$log && !$throw)) {
             return $type && $log;
         }
         if (PHP_VERSION_ID < 50400 && isset($context['GLOBALS']) && ($this->scopedErrors & $type)) {
             $e = $context;                  // Whatever the signature of the method,
             unset($e['GLOBALS'], $context); // $context is always a reference in 5.3
             $context = $e;
         }
         if (null !== $backtrace && $type & E_ERROR) {
             // E_ERROR fatal errors are triggered on HHVM when
             // hhvm.error_handling.call_user_handler_on_fatals=1
             // which is the way to get their backtrace.
             $this->handleFatalError(compact('type', 'message', 'file', 'line', 'backtrace'));
             return true;
         }
         if ($throw) {
             if (null !== self::$toStringException) {
                 $throw = self::$toStringException;
                 self::$toStringException = null;
             } elseif (($this->scopedErrors & $type) && class_exists('Symfony\Component\Debug\Exception\ContextErrorException')) {
                 // Checking for class existence is a work around for https://bugs.php.net/42098
                 $throw = new ContextErrorException($this->levels[$type].': '.$message, 0, $type, $file, $line, $context);
             } else {
                 $throw = new \ErrorException($this->levels[$type].': '.$message, 0, $type, $file, $line);
             }
             if (PHP_VERSION_ID <= 50407 && (PHP_VERSION_ID >= 50400 || PHP_VERSION_ID <= 50317)) {
                 // Exceptions thrown from error handlers are sometimes not caught by the exception
                 // handler and shutdown handlers are bypassed before 5.4.8/5.3.18.
                 // We temporarily re-enable display_errors to prevent any blank page related to this bug.
                 $throw->errorHandlerCanary = new ErrorHandlerCanary();
             }
             if (E_USER_ERROR & $type) {
                 $backtrace = $backtrace ?: $throw->getTrace();
                 for ($i = 1; isset($backtrace[$i]); ++$i) {
                     if (isset($backtrace[$i]['function'], $backtrace[$i]['type'], $backtrace[$i - 1]['function'])
                         && '__toString' === $backtrace[$i]['function']
                         && '->' === $backtrace[$i]['type']
                         && !isset($backtrace[$i - 1]['class'])
                         && ('trigger_error' === $backtrace[$i - 1]['function'] || 'user_error' === $backtrace[$i - 1]['function'])
                     ) {
                         // Here, we know trigger_error() has been called from __toString().
                         // HHVM is fine with throwing from __toString() but PHP triggers a fatal error instead.
                         // A small convention allows working around the limitation:
                         // given a caught $e exception in __toString(), quitting the method with
                         // `return trigger_error($e, E_USER_ERROR);` allows this error handler
                         // to make $e get through the __toString() barrier.
                         foreach ($context as $e) {
                             if (($e instanceof \Exception || $e instanceof \Throwable) && $e->__toString() === $message) {
                                 if (1 === $i) {
                                     // On HHVM
                                     $throw = $e;
                                     break;
                                 }
                                 self::$toStringException = $e;
                                 return true;
                             }
                         }
                         if (1 < $i) {
                             // On PHP (not on HHVM), display the original error message instead of the default one.
                             $this->handleException($throw);
                             // Stop the process by giving back the error to the native handler.
                             return false;
                         }
                     }
                 }
             }
             throw $throw;
         }
         // For duplicated errors, log the trace only once
         $e = md5("{$type}/{$line}/{$file}\x00{$message}", true);
         $trace = true;
         if (!($this->tracedErrors & $type) || isset($this->loggedTraces[$e])) {
             $trace = false;
         } else {
             $this->loggedTraces[$e] = 1;
         }
         $e = compact('type', 'file', 'line', 'level');
         if ($type & $level) {
             if ($this->scopedErrors & $type) {
                 $e['scope_vars'] = $context;
                 if ($trace) {
                     $e['stack'] = $backtrace ?: debug_backtrace(DEBUG_BACKTRACE_PROVIDE_OBJECT);
                 }
             } elseif ($trace) {
                 if (null === $backtrace) {
                     $e['stack'] = debug_backtrace(DEBUG_BACKTRACE_IGNORE_ARGS);
                 } else {
                     foreach ($backtrace as &$frame) {
                         unset($frame['args'], $frame);
                     }
                     $e['stack'] = $backtrace;
                 }
             }
         }
         if ($this->isRecursive) {
             $log = 0;
         } elseif (self::$stackedErrorLevels) {
             self::$stackedErrors[] = array($this->loggers[$type][0], ($type & $level) ? $this->loggers[$type][1] : LogLevel::DEBUG, $message, $e);
         } else {
             try {
                 $this->isRecursive = true;
                 $this->loggers[$type][0]->log(($type & $level) ? $this->loggers[$type][1] : LogLevel::DEBUG, $message, $e);
                 $this->isRecursive = false;
             } catch (\Exception $e) {
                 $this->isRecursive = false;
                 throw $e;
             }
         }
         return $type && $log;
     }
     /**
      * Handles an exception by logging then forwarding it to an other handler.
      *
      * @param \Exception|\Throwable $exception An exception to handle
      * @param array                 $error     An array as returned by error_get_last()
      *
      * @internal
      */
     public function handleException($exception, array $error = null)
     {
         if (!$exception instanceof \Exception) {
             $exception = new FatalThrowableError($exception);
         }
         $type = $exception instanceof FatalErrorException ? $exception->getSeverity() : E_ERROR;
         if ($this->loggedErrors & $type) {
             $e = array(
                 'type' => $type,
                 'file' => $exception->getFile(),
                 'line' => $exception->getLine(),
                 'level' => error_reporting(),
                 'stack' => $exception->getTrace(),
             );
             if ($exception instanceof FatalErrorException) {
                 if ($exception instanceof FatalThrowableError) {
                     $error = array(
                         'type' => $type,
                         'message' => $message = $exception->getMessage(),
                         'file' => $e['file'],
                         'line' => $e['line'],
                     );
                 } else {
                     $message = 'Fatal '.$exception->getMessage();
                 }
             } elseif ($exception instanceof \ErrorException) {
                 $message = 'Uncaught '.$exception->getMessage();
                 if ($exception instanceof ContextErrorException) {
                     $e['context'] = $exception->getContext();
                 }
             } else {
                 $message = 'Uncaught Exception: '.$exception->getMessage();
             }
             if ($this->loggedErrors & $e['type']) {
                 $this->loggers[$e['type']][0]->log($this->loggers[$e['type']][1], $message, $e);
             }
         }
         if ($exception instanceof FatalErrorException && !$exception instanceof OutOfMemoryException && $error) {
             foreach ($this->getFatalErrorHandlers() as $handler) {
                 if ($e = $handler->handleError($error, $exception)) {
                     $exception = $e;
                     break;
                 }
             }
         }
         if (empty($this->exceptionHandler)) {
             throw $exception; // Give back $exception to the native handler
         }
         try {
             call_user_func($this->exceptionHandler, $exception);
         } catch (\Exception $handlerException) {
         } catch (\Throwable $handlerException) {
         }
         if (isset($handlerException)) {
             $this->exceptionHandler = null;
             $this->handleException($handlerException);
         }
     }
     /**
      * Shutdown registered function for handling PHP fatal errors.
      *
      * @param array $error An array as returned by error_get_last()
      *
      * @internal
      */
     public static function handleFatalError(array $error = null)
     {
         if (null === self::$reservedMemory) {
             return;
         }
         self::$reservedMemory = null;
         $handler = set_error_handler('var_dump', 0);
         $handler = is_array($handler) ? $handler[0] : null;
         restore_error_handler();
         if (!$handler instanceof self) {
             return;
         }
         if (null === $error) {
             $error = error_get_last();
         }
         try {
             while (self::$stackedErrorLevels) {
                 static::unstackErrors();
             }
         } catch (\Exception $exception) {
             // Handled below
         }
         if ($error && $error['type'] &= E_PARSE | E_ERROR | E_CORE_ERROR | E_COMPILE_ERROR) {
             // Let's not throw anymore but keep logging
             $handler->throwAt(0, true);
             $trace = isset($error['backtrace']) ? $error['backtrace'] : null;
             if (0 === strpos($error['message'], 'Allowed memory') || 0 === strpos($error['message'], 'Out of memory')) {
                 $exception = new OutOfMemoryException($handler->levels[$error['type']].': '.$error['message'], 0, $error['type'], $error['file'], $error['line'], 2, false, $trace);
             } else {
                 $exception = new FatalErrorException($handler->levels[$error['type']].': '.$error['message'], 0, $error['type'], $error['file'], $error['line'], 2, true, $trace);
             }
         } elseif (!isset($exception)) {
             return;
         }
         try {
             $handler->handleException($exception, $error);
         } catch (FatalErrorException $e) {
             // Ignore this re-throw
         }
     }
     /**
      * Configures the error handler for delayed handling.
      * Ensures also that non-catchable fatal errors are never silenced.
      *
      * As shown by http://bugs.php.net/42098 and http://bugs.php.net/60724
      * PHP has a compile stage where it behaves unusually. To workaround it,
      * we plug an error handler that only stacks errors for later.
      *
      * The most important feature of this is to prevent
      * autoloading until unstackErrors() is called.
      */
     public static function stackErrors()
     {
         self::$stackedErrorLevels[] = error_reporting(error_reporting() | E_PARSE | E_ERROR | E_CORE_ERROR | E_COMPILE_ERROR);
     }
     /**
      * Unstacks stacked errors and forwards to the logger.
      */
     public static function unstackErrors()
     {
         $level = array_pop(self::$stackedErrorLevels);
         if (null !== $level) {
             $e = error_reporting($level);
             if ($e !== ($level | E_PARSE | E_ERROR | E_CORE_ERROR | E_COMPILE_ERROR)) {
                 // If the user changed the error level, do not overwrite it
                 error_reporting($e);
             }
         }
         if (empty(self::$stackedErrorLevels)) {
             $errors = self::$stackedErrors;
             self::$stackedErrors = array();
             foreach ($errors as $e) {
                 $e[0]->log($e[1], $e[2], $e[3]);
             }
         }
     }
     /**
      * Gets the fatal error handlers.
      *
      * Override this method if you want to define more fatal error handlers.
      *
      * @return FatalErrorHandlerInterface[] An array of FatalErrorHandlerInterface
      */
     protected function getFatalErrorHandlers()
     {
         return array(
             new UndefinedFunctionFatalErrorHandler(),
             new UndefinedMethodFatalErrorHandler(),
             new ClassNotFoundFatalErrorHandler(),
         );
     }
     /**
      * Sets the level at which the conversion to Exception is done.
      *
      * @param int|null $level The level (null to use the error_reporting() value and 0 to disable)
      *
      * @deprecated since version 2.6, to be removed in 3.0. Use throwAt() instead.
      */
     public function setLevel($level)
     {
         @trigger_error('The '.__METHOD__.' method is deprecated since version 2.6 and will be removed in 3.0. Use the throwAt() method instead.', E_USER_DEPRECATED);
         $level = null === $level ? error_reporting() : $level;
         $this->throwAt($level, true);
     }
     /**
      * Sets the display_errors flag value.
      *
      * @param int $displayErrors The display_errors flag value
      *
      * @deprecated since version 2.6, to be removed in 3.0. Use throwAt() instead.
      */
     public function setDisplayErrors($displayErrors)
     {
         @trigger_error('The '.__METHOD__.' method is deprecated since version 2.6 and will be removed in 3.0. Use the throwAt() method instead.', E_USER_DEPRECATED);
         if ($displayErrors) {
             $this->throwAt($this->displayErrors, true);
         } else {
             $displayErrors = $this->displayErrors;
             $this->throwAt(0, true);
             $this->displayErrors = $displayErrors;
         }
     }
     /**
      * Sets a logger for the given channel.
      *
      * @param LoggerInterface $logger  A logger interface
      * @param string          $channel The channel associated with the logger (deprecation, emergency or scream)
      *
      * @deprecated since version 2.6, to be removed in 3.0. Use setLoggers() or setDefaultLogger() instead.
      */
     public static function setLogger(LoggerInterface $logger, $channel = 'deprecation')
     {
         @trigger_error('The '.__METHOD__.' static method is deprecated since version 2.6 and will be removed in 3.0. Use the setLoggers() or setDefaultLogger() methods instead.', E_USER_DEPRECATED);
         $handler = set_error_handler('var_dump', 0);
         $handler = is_array($handler) ? $handler[0] : null;
         restore_error_handler();
         if (!$handler instanceof self) {
             return;
         }
         if ('deprecation' === $channel) {
             $handler->setDefaultLogger($logger, E_DEPRECATED | E_USER_DEPRECATED, true);
             $handler->screamAt(E_DEPRECATED | E_USER_DEPRECATED);
         } elseif ('scream' === $channel) {
             $handler->setDefaultLogger($logger, E_ALL | E_STRICT, false);
             $handler->screamAt(E_ALL | E_STRICT);
         } elseif ('emergency' === $channel) {
             $handler->setDefaultLogger($logger, E_PARSE | E_ERROR | E_CORE_ERROR | E_COMPILE_ERROR, true);
             $handler->screamAt(E_PARSE | E_ERROR | E_CORE_ERROR | E_COMPILE_ERROR);
         }
     }
     /**
      * @deprecated since version 2.6, to be removed in 3.0. Use handleError() instead.
      */
     public function handle($level, $message, $file = 'unknown', $line = 0, $context = array())
     {
         $this->handleError(E_USER_DEPRECATED, 'The '.__METHOD__.' method is deprecated since version 2.6 and will be removed in 3.0. Use the handleError() method instead.', __FILE__, __LINE__, array());
         return $this->handleError($level, $message, $file, $line, (array) $context);
     }
     /**
      * Handles PHP fatal errors.
      *
      * @deprecated since version 2.6, to be removed in 3.0. Use handleFatalError() instead.
      */
     public function handleFatal()
     {
         @trigger_error('The '.__METHOD__.' method is deprecated since version 2.6 and will be removed in 3.0. Use the handleFatalError() method instead.', E_USER_DEPRECATED);
         static::handleFatalError();
     }
 }
 /**
  * Private class used to work around https://bugs.php.net/54275.
  *
  * @author Nicolas Grekas <p@tchwork.com>
  *
  * @internal
  */
 class ErrorHandlerCanary
 {
     private static $displayErrors = null;
     public function __construct()
     {
         if (null === self::$displayErrors) {
             self::$displayErrors = ini_set('display_errors', 1);
         }
     }
     public function __destruct()
     {
         if (null !== self::$displayErrors) {
             ini_set('display_errors', self::$displayErrors);
             self::$displayErrors = null;
         }
     }
 }'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

26) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #1120 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Component/ExpressionLanguage/Resources/bin/generate_operator_regex.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 foreach ($operators as $operator => $length) {
-    // an operator that ends with a character must be followed by
-    // a whitespace or a parenthesis
-    $regex[] = preg_quote($operator, '/').(ctype_alpha($operator[$length - 1]) ? '(?=[\s(])' : '');
+// an operator that ends with a character must be followed by
+// a whitespace or a parenthesis
+$regex[] = preg_quote($operator, '/').(ctype_alpha($operator[$length - 1]) ? '(?=[\s(])' : '');
 }
 echo '/'.implode('|', $regex).'/A';'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

27) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #1147 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Component/VarDumper/Tests/Fixtures/dumb-var.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 '<?php
 namespace Symfony\Component\VarDumper\Tests\Fixture;
 if (!class_exists('Symfony\Component\VarDumper\Tests\Fixture\DumbFoo')) {
-    class DumbFoo
-    {
-        public $foo = 'foo';
-    }
+class DumbFoo
+{
+    public $foo = 'foo';
 }
+}
 $foo = new DumbFoo();
 $foo->bar = 'bar';
 $g = fopen(__FILE__, 'r');
 $var = array(
-    'number' => 1, null,
-    'const' => 1.1, true, false, NAN, INF, -INF, PHP_INT_MAX,
-    'str' => "déjà\n", "\xE9\x00",
-    '[]' => array(),
-    'res' => $g,
-    'obj' => $foo,
-    'closure' => function ($a, \PDO &$b = null) {},
-    'line' => __LINE__ - 1,
-    'nobj' => array((object) array()),
+'number' => 1, null,
+'const' => 1.1, true, false, NAN, INF, -INF, PHP_INT_MAX,
+'str' => "déjà\n", "\xE9\x00",
+'[]' => array(),
+'res' => $g,
+'obj' => $foo,
+'closure' => function ($a, \PDO &$b = null) {},
+'line' => __LINE__ - 1,
+'nobj' => array((object) array()),
 );
 $r = array();
 $r[] = &$r;
 $var['recurs'] = &$r;
 $var[] = &$var[0];
 $var['sobj'] = $var['obj'];
 $var['snobj'] = &$var['nobj'][0];
 $var['snobj2'] = $var['nobj'][0];
 $var['file'] = __FILE__;
 $var["bin-key-\xE9"] = '';
 unset($g, $r);'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

28) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #1172 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Component/VarDumper/Resources/functions/dump.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 if (!function_exists('dump')) {
-    /**
-     * @author Nicolas Grekas <p@tchwork.com>
-     */
-    function dump($var)
-    {
+/**
+ * @author Nicolas Grekas <p@tchwork.com>
+ */
+function dump($var)
+{
         foreach (func_get_args() as $var) {
             VarDumper::dump($var);
         }
     }
 }'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

29) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #1176 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Component/VarDumper/Dumper/AbstractDumper.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
     protected $outputStream;
-    protected $decimalPoint; // This is locale dependent
+    protected $decimalPoint;
+    // This is locale dependent
     protected $indentPad = '  ';
     private $charset;
     private $charsetConverter;
     /**
      * @param callable|resource|string|null $output  A line dumper callable, an opened stream or an output path, defaults to static::$defaultOutput.
      * @param string                        $charset The default character encoding to use for non-UTF8 strings.
      */
     public function __construct($output = null, $charset = null)
     {
         $this->setCharset($charset ?: ini_get('php.output_encoding') ?: ini_get('default_charset') ?: 'UTF-8');
         $this->decimalPoint = (string) 0.5;
         $this->decimalPoint = $this->decimalPoint[1];
         $this->setOutput($output ?: static::$defaultOutput);
         if (!$output && is_string(static::$defaultOutput)) {
             static::$defaultOutput = $this->outputStream;
         }
     }
     /**
      * Sets the output destination of the dumps.
      *
      * @param callable|resource|string $output A line dumper callable, an opened stream or an output path.
      *
      * @return callable|resource|string The previous output destination.
      */
     public function setOutput($output)
     {
         $prev = null !== $this->outputStream ? $this->outputStream : $this->lineDumper;
         if (is_callable($output)) {
             $this->outputStream = null;
             $this->lineDumper = $output;
         } else {
             if (is_string($output)) {
                 $output = fopen($output, 'wb');
             }
             $this->outputStream = $output;
             $this->lineDumper = array($this, 'echoLine');
         }
         return $prev;
     }
     /**
      * Sets the default character encoding to use for non-UTF8 strings.
      *
      * @param string $charset The default character encoding to use for non-UTF8 strings.
      *
      * @return string The previous charset.
      */
     public function setCharset($charset)
     {
         $prev = $this->charset;
         $this->charsetConverter = 'fallback';
         $charset = strtoupper($charset);
         $charset = null === $charset || 'UTF-8' === $charset || 'UTF8' === $charset ? 'CP1252' : $charset;
         $supported = true;
         set_error_handler(function () use (&$supported) {$supported = false;});
         if (function_exists('mb_encoding_aliases') && mb_encoding_aliases($charset)) {
             $this->charset = $charset;
             $this->charsetConverter = 'mbstring';
         } elseif (function_exists('iconv')) {
             $supported = true;
             iconv($charset, 'UTF-8', '');
             if ($supported) {
                 $this->charset = $charset;
                 $this->charsetConverter = 'iconv';
             }
         }
         if ('fallback' === $this->charsetConverter) {
             $this->charset = 'ISO-8859-1';
         }
         restore_error_handler();
         return $prev;
     }
     /**
      * Sets the indentation pad string.
      *
      * @param string $pad A string the will be prepended to dumped lines, repeated by nesting level.
      *
      * @return string The indent pad.
      */
     public function setIndentPad($pad)
     {
         $prev = $this->indentPad;
         $this->indentPad = $pad;
         return $prev;
     }
     /**
      * Dumps a Data object.
      *
      * @param Data                          $data   A Data object.
      * @param callable|resource|string|null $output A line dumper callable, an opened stream or an output path.
      */
     public function dump(Data $data, $output = null)
     {
         $exception = null;
         if ($output) {
             $prevOutput = $this->setOutput($output);
         }
         try {
             $data->dump($this);
             $this->dumpLine(-1);
         } catch (\Exception $exception) {
             // Re-thrown below
         }
         if ($output) {
             $this->setOutput($prevOutput);
         }
         if (null !== $exception) {
             throw $exception;
         }
     }
     /**
      * Dumps the current line.
      *
      * @param int $depth The recursive depth in the dumped structure for the line being dumped.
      */
     protected function dumpLine($depth)
     {
         call_user_func($this->lineDumper, $this->line, $depth, $this->indentPad);
         $this->line = '';
     }
     /**
      * Generic line dumper callback.
      *
      * @param string $line  The line to write.
      * @param int    $depth The recursive depth in the dumped structure.
      */
     protected function echoLine($line, $depth, $indentPad)
     {
         if (-1 !== $depth) {
             fwrite($this->outputStream, str_repeat($indentPad, $depth).$line."\n");
         }
     }
     /**
      * Converts a non-UTF-8 string to UTF-8.
      *
      * @param string $s The non-UTF-8 string to convert.
      *
      * @return string The string converted to UTF-8.
      */
     protected function utf8Encode($s)
     {
         if ('mbstring' === $this->charsetConverter) {
             return mb_convert_encoding($s, 'UTF-8', mb_check_encoding($s, $this->charset) ? $this->charset : '8bit');
         }
         if ('iconv' === $this->charsetConverter) {
             $valid = true;
             set_error_handler(function () use (&$valid) {$valid = false;});
             $c = iconv($this->charset, 'UTF-8', $s);
             restore_error_handler();
             if ($valid) {
                 return $c;
             }
         }
         $s .= $s;
         $len = strlen($s);
         for ($i = $len >> 1, $j = 0; $i < $len; ++$i, ++$j) {
             switch (true) {
                 case $s[$i] < "\x80":
                     $s[$j] = $s[$i];
                     break;
                 case $s[$i] < "\xC0":
                     $s[$j] = "\xC2";
                     $s[++$j] = $s[$i];
                     break;
                 default:
                     $s[$j] = "\xC3";
                     $s[++$j] = chr(ord($s[$i]) - 64);
                     break;
             }
         }
         return substr($s, 0, $j);
     }
 }'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

30) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #1201 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Component/Process/Tests/PipeStdinInStdoutStdErrStreamSelect.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 while ($read || $write) {
-    $r = $read;
-    $w = $write;
-    $e = null;
-    $n = stream_select($r, $w, $e, 5);
-    if (false === $n) {
-        die(ERR_SELECT_FAILED);
-    } elseif ($n < 1) {
-        die(ERR_TIMEOUT);
-    }
-    if (in_array(STDOUT, $w) && strlen($out) > 0) {
-        $written = fwrite(STDOUT, (binary) $out, 32768);
-        if (false === $written) {
-            die(ERR_WRITE_FAILED);
-        }
-        $out = (binary) substr($out, $written);
-    }
-    if (null === $read && '' === $out) {
-        $write = array_diff($write, array(STDOUT));
-    }
-    if (in_array(STDERR, $w) && strlen($err) > 0) {
-        $written = fwrite(STDERR, (binary) $err, 32768);
-        if (false === $written) {
-            die(ERR_WRITE_FAILED);
-        }
-        $err = (binary) substr($err, $written);
-    }
-    if (null === $read && '' === $err) {
-        $write = array_diff($write, array(STDERR));
-    }
-    if ($r) {
-        $str = fread(STDIN, 32768);
-        if (false !== $str) {
-            $out .= $str;
-            $err .= $str;
-        }
-        if (false === $str || feof(STDIN)) {
-            $read = null;
-            if (!feof(STDIN)) {
-                die(ERR_READ_FAILED);
-            }
-        }
-    }
+$r = $read;
+$w = $write;
+$e = null;
+$n = stream_select($r, $w, $e, 5);
+if (false === $n) {
+die(ERR_SELECT_FAILED);
+} elseif ($n < 1) {
+die(ERR_TIMEOUT);
+}
+if (in_array(STDOUT, $w) && strlen($out) > 0) {
+$written = fwrite(STDOUT, (binary) $out, 32768);
+if (false === $written) {
+die(ERR_WRITE_FAILED);
+}
+$out = (binary) substr($out, $written);
+}
+if (null === $read && '' === $out) {
+$write = array_diff($write, array(STDOUT));
+}
+if (in_array(STDERR, $w) && strlen($err) > 0) {
+$written = fwrite(STDERR, (binary) $err, 32768);
+if (false === $written) {
+die(ERR_WRITE_FAILED);
+}
+$err = (binary) substr($err, $written);
+}
+if (null === $read && '' === $err) {
+$write = array_diff($write, array(STDERR));
+}
+if ($r) {
+$str = fread(STDIN, 32768);
+if (false !== $str) {
+$out .= $str;
+$err .= $str;
+}
+if (false === $str || feof(STDIN)) {
+$read = null;
+if (!feof(STDIN)) {
+die(ERR_READ_FAILED);
+}
+}
+}
 }'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

31) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #1203 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Component/Process/Tests/SignalListener.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 while ($n < 400) {
-    usleep(10000);
-    ++$n;
+usleep(10000);
+++$n;
 }
 return;'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

32) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #1208 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Component/Process/Tests/NonStopableProcess.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 while ($duration > (microtime(true) - $start)) {
-    usleep(1000);
+usleep(1000);
 }'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

33) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #1218 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Component/Templating/Tests/Fixtures/templates/foo.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'<?php echo $foo ?>'
+'<?php
+echo $foo ?>'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

34) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #1296 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Component/Intl/Tests/Data/Bundle/Reader/Fixtures/php/en.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 return array(
-    'Foo' => 'Bar',
+'Foo' => 'Bar',
 );'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

35) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #1297 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Component/Intl/Tests/Data/Bundle/Reader/Fixtures/en.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 return array(
-    'Foo' => 'Bar',
+'Foo' => 'Bar',
 );'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

36) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #1302 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Component/Intl/Tests/Data/Bundle/Writer/Fixtures/rb.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 '<?php
 return array(
-    'Entry' => array(
-        'NestedEntry' => 'Value',
-    ),
+'Entry' => array(
+'NestedEntry' => 'Value',
+),
 );'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

37) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #1303 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Component/Intl/Tests/Data/Bundle/Writer/Fixtures/en.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 '<?php
 return array(
-    'Entry1' => array(
-        'Array' => array(
-            0 => 'foo',
-            1 => 'bar',
-        ),
-        'Integer' => 5,
-        'Boolean' => false,
-        'Float' => 1.23,
-    ),
-    'Entry2' => 'String',
-    'Traversable' => array(
-        'Foo' => 'Bar',
-    ),
+'Entry1' => array(
+'Array' => array(
+0 => 'foo',
+1 => 'bar',
+),
+'Integer' => 5,
+'Boolean' => false,
+'Float' => 1.23,
+),
+'Entry2' => 'String',
+'Traversable' => array(
+'Foo' => 'Bar',
+),
 );'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

38) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #1324 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Component/Intl/Resources/stubs/functions.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 if (!function_exists('intl_is_failure')) {
-    /**
-     * Stub implementation for the {@link intl_is_failure()} function of the intl
-     * extension.
-     *
-     * @author Bernhard Schussek <bschussek@gmail.com>
-     *
-     * @param int $errorCode The error code returned by intl_get_error_code().
-     *
-     * @return bool Whether the error code indicates an error.
-     *
-     * @see IntlGlobals::isFailure()
-     */
-    function intl_is_failure($errorCode)
-    {
+/**
+ * Stub implementation for the {@link intl_is_failure()} function of the intl
+ * extension.
+ *
+ * @author Bernhard Schussek <bschussek@gmail.com>
+ *
+ * @param int $errorCode The error code returned by intl_get_error_code().
+ *
+ * @return bool Whether the error code indicates an error.
+ *
+ * @see IntlGlobals::isFailure()
+ */
+function intl_is_failure($errorCode)
+{
         return IntlGlobals::isFailure($errorCode);
     }
-    /**
-     * Stub implementation for the {@link intl_get_error_code()} function of the
-     * intl extension.
-     *
-     * @author Bernhard Schussek <bschussek@gmail.com>
-     *
-     * @return bool The error code of the last intl function call or
-     *              IntlGlobals::U_ZERO_ERROR if no error occurred.
-     *
-     * @see IntlGlobals::getErrorCode()
-     */
-    function intl_get_error_code()
-    {
+/**
+ * Stub implementation for the {@link intl_get_error_code()} function of the
+ * intl extension.
+ *
+ * @author Bernhard Schussek <bschussek@gmail.com>
+ *
+ * @return bool The error code of the last intl function call or
+ *              IntlGlobals::U_ZERO_ERROR if no error occurred.
+ *
+ * @see IntlGlobals::getErrorCode()
+ */
+function intl_get_error_code()
+{
         return IntlGlobals::getErrorCode();
     }
-    /**
-     * Stub implementation for the {@link intl_get_error_code()} function of the
-     * intl extension.
-     *
-     * @author Bernhard Schussek <bschussek@gmail.com>
-     *
-     * @return bool The error message of the last intl function call or
-     *              "U_ZERO_ERROR" if no error occurred.
-     *
-     * @see IntlGlobals::getErrorMessage()
-     */
-    function intl_get_error_message()
-    {
+/**
+ * Stub implementation for the {@link intl_get_error_code()} function of the
+ * intl extension.
+ *
+ * @author Bernhard Schussek <bschussek@gmail.com>
+ *
+ * @return bool The error message of the last intl function call or
+ *              "U_ZERO_ERROR" if no error occurred.
+ *
+ * @see IntlGlobals::getErrorMessage()
+ */
+function intl_get_error_message()
+{
         return IntlGlobals::getErrorMessage();
     }
-    /**
-     * Stub implementation for the {@link intl_error_name()} function of the intl
-     * extension.
-     *
-     * @param int $errorCode The error code.
-     *
-     * @return string The name of the error code constant.
-     *
-     * @see IntlGlobals::getErrorName()
-     */
-    function intl_error_name($errorCode)
-    {
+/**
+ * Stub implementation for the {@link intl_error_name()} function of the intl
+ * extension.
+ *
+ * @param int $errorCode The error code.
+ *
+ * @return string The name of the error code constant.
+ *
+ * @see IntlGlobals::getErrorName()
+ */
+function intl_error_name($errorCode)
+{
         return IntlGlobals::getErrorName($errorCode);
     }
 }'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

39) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #1325 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Component/Intl/Resources/bin/common.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 set_exception_handler(function (\Exception $exception) {
-    echo "\n";
-    $cause = $exception;
-    $root = true;
-    while (null !== $cause) {
-        if (!$root) {
-            echo "Caused by\n";
-        }
-        echo get_class($cause).': '.$cause->getMessage()."\n";
-        echo "\n";
-        echo $cause->getFile().':'.$cause->getLine()."\n";
-        foreach ($cause->getTrace() as $trace) {
-            echo $trace['file'].':'.$trace['line']."\n";
-        }
-        echo "\n";
-        $cause = $cause->getPrevious();
-        $root = false;
-    }
+echo "\n";
+$cause = $exception;
+$root = true;
+while (null !== $cause) {
+if (!$root) {
+echo "Caused by\n";
+}
+echo get_class($cause).': '.$cause->getMessage()."\n";
+echo "\n";
+echo $cause->getFile().':'.$cause->getLine()."\n";
+foreach ($cause->getTrace() as $trace) {
+echo $trace['file'].':'.$trace['line']."\n";
+}
+echo "\n";
+$cause = $cause->getPrevious();
+$root = false;
+}
 });'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

40) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #1326 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Component/Intl/Resources/bin/autoload.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 if (!file_exists($autoload)) {
-    bailout('You should run "composer install --dev" in the component before running this script.');
+bailout('You should run "composer install --dev" in the component before running this script.');
 }
 require_once $autoload;'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

41) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #1327 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Component/Intl/Resources/bin/update-data.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 if ($argc > 3 || 2 === $argc && '-h' === $argv[1]) {
-    bailout(<<<MESSAGE
+bailout(<<<MESSAGE

@@ @@
 MESSAGE
-    );
+);
 }
 echo LINE;
 echo centered('ICU Resource Bundle Compilation')."\n";
 echo LINE;
 if (!Intl::isExtensionLoaded()) {
-    bailout('The intl extension for PHP is not installed.');
+bailout('The intl extension for PHP is not installed.');

@@ @@
 foreach ($urls as $urlVersion => $url) {
-    $maxVersion = IcuVersion::compare($maxVersion, $urlVersion, '<')
-        ? $urlVersion
-        : $maxVersion;
-    echo "  $urlVersion\n";
+$maxVersion = IcuVersion::compare($maxVersion, $urlVersion, '<')
+? $urlVersion
+: $maxVersion;
+echo "  $urlVersion\n";
 }
 $shortIcuVersion = strip_minor_versions($maxVersion);
 if ($argc >= 2) {
-    $sourceDir = $argv[1];
-    $svn = new SvnRepository($sourceDir);
-    echo "Using existing SVN repository at {$sourceDir}.\n";
+$sourceDir = $argv[1];
+$svn = new SvnRepository($sourceDir);
+echo "Using existing SVN repository at {$sourceDir}.\n";
 } else {
-    echo "Starting SVN checkout for version $shortIcuVersion. This may take a while...\n";
-    $sourceDir = sys_get_temp_dir().'/icu-data/'.$shortIcuVersion.'/source';
-    $svn = SvnRepository::download($urls[$shortIcuVersion], $sourceDir);
-    echo "SVN checkout to {$sourceDir} complete.\n";
+echo "Starting SVN checkout for version $shortIcuVersion. This may take a while...\n";
+$sourceDir = sys_get_temp_dir().'/icu-data/'.$shortIcuVersion.'/source';
+$svn = SvnRepository::download($urls[$shortIcuVersion], $sourceDir);
+echo "SVN checkout to {$sourceDir} complete.\n";
 }
 if ($argc >= 3) {
-    $buildDir = $argv[2];
+$buildDir = $argv[2];
 } else {
-    // Always build genrb so that we can determine the ICU version of the
-    // download by running genrb --version
-    echo "Building genrb.\n";
-    cd($sourceDir);
-    echo "Running configure...\n";
-    $buildDir = sys_get_temp_dir().'/icu-data/'.$shortIcuVersion.'/build';
-    $filesystem->remove($buildDir);
-    $filesystem->mkdir($buildDir);
-    run('./configure --prefix='.$buildDir.' 2>&1');
-    echo "Running make...\n";
-    // If the directory "lib" does not exist in the download, create it or we
-    // will run into problems when building libicuuc.so.
-    $filesystem->mkdir($sourceDir.'/lib');
-    // If the directory "bin" does not exist in the download, create it or we
-    // will run into problems when building genrb.
-    $filesystem->mkdir($sourceDir.'/bin');
-    echo '[1/6] libicudata.so...';
-    cd($sourceDir.'/stubdata');
-    run('make 2>&1 && make install 2>&1');
-    echo " ok.\n";
-    echo '[2/6] libicuuc.so...';
-    cd($sourceDir.'/common');
-    run('make 2>&1 && make install 2>&1');
-    echo " ok.\n";
-    echo '[3/6] libicui18n.so...';
-    cd($sourceDir.'/i18n');
-    run('make 2>&1 && make install 2>&1');
-    echo " ok.\n";
-    echo '[4/6] libicutu.so...';
-    cd($sourceDir.'/tools/toolutil');
-    run('make 2>&1 && make install 2>&1');
-    echo " ok.\n";
-    echo '[5/6] libicuio.so...';
-    cd($sourceDir.'/io');
-    run('make 2>&1 && make install 2>&1');
-    echo " ok.\n";
-    echo '[6/6] genrb...';
-    cd($sourceDir.'/tools/genrb');
-    run('make 2>&1 && make install 2>&1');
-    echo " ok.\n";
+// Always build genrb so that we can determine the ICU version of the
+// download by running genrb --version
+echo "Building genrb.\n";
+cd($sourceDir);
+echo "Running configure...\n";
+$buildDir = sys_get_temp_dir().'/icu-data/'.$shortIcuVersion.'/build';
+$filesystem->remove($buildDir);
+$filesystem->mkdir($buildDir);
+run('./configure --prefix='.$buildDir.' 2>&1');
+echo "Running make...\n";
+// If the directory "lib" does not exist in the download, create it or we
+// will run into problems when building libicuuc.so.
+$filesystem->mkdir($sourceDir.'/lib');
+// If the directory "bin" does not exist in the download, create it or we
+// will run into problems when building genrb.
+$filesystem->mkdir($sourceDir.'/bin');
+echo '[1/6] libicudata.so...';
+cd($sourceDir.'/stubdata');
+run('make 2>&1 && make install 2>&1');
+echo " ok.\n";
+echo '[2/6] libicuuc.so...';
+cd($sourceDir.'/common');
+run('make 2>&1 && make install 2>&1');
+echo " ok.\n";
+echo '[3/6] libicui18n.so...';
+cd($sourceDir.'/i18n');
+run('make 2>&1 && make install 2>&1');
+echo " ok.\n";
+echo '[4/6] libicutu.so...';
+cd($sourceDir.'/tools/toolutil');
+run('make 2>&1 && make install 2>&1');
+echo " ok.\n";
+echo '[5/6] libicuio.so...';
+cd($sourceDir.'/io');
+run('make 2>&1 && make install 2>&1');
+echo " ok.\n";
+echo '[6/6] genrb...';
+cd($sourceDir.'/tools/genrb');
+run('make 2>&1 && make install 2>&1');
+echo " ok.\n";

@@ @@
 foreach ($workingDirs as $targetDir) {
-    $filesystem->mkdir(array(
-        $targetDir.'/'.Intl::CURRENCY_DIR,
-        $targetDir.'/'.Intl::LANGUAGE_DIR,
-        $targetDir.'/'.Intl::LOCALE_DIR,
-        $targetDir.'/'.Intl::REGION_DIR,
-        $targetDir.'/'.Intl::SCRIPT_DIR,
-    ));
+$filesystem->mkdir(array(
+$targetDir.'/'.Intl::CURRENCY_DIR,
+$targetDir.'/'.Intl::LANGUAGE_DIR,
+$targetDir.'/'.Intl::LOCALE_DIR,
+$targetDir.'/'.Intl::REGION_DIR,
+$targetDir.'/'.Intl::SCRIPT_DIR,
+));

@@ @@
 $generator = new LocaleDataGenerator(
-    Intl::LOCALE_DIR,
-    new LanguageDataProvider($jsonDir.'/'.Intl::LANGUAGE_DIR, $reader),
-    new ScriptDataProvider($jsonDir.'/'.Intl::SCRIPT_DIR, $reader),
-    new RegionDataProvider($jsonDir.'/'.Intl::REGION_DIR, $reader)
+Intl::LOCALE_DIR,
+new LanguageDataProvider($jsonDir.'/'.Intl::LANGUAGE_DIR, $reader),
+new ScriptDataProvider($jsonDir.'/'.Intl::SCRIPT_DIR, $reader),
+new RegionDataProvider($jsonDir.'/'.Intl::REGION_DIR, $reader)

@@ @@
 foreach ($targetDirs as $targetDir) {
-    $svnInfoFile = $targetDir.'/svn-info.txt';
-    file_put_contents($svnInfoFile, $svnInfo);
-    echo "Wrote $svnInfoFile.\n";
-    $versionFile = $targetDir.'/version.txt';
-    file_put_contents($versionFile, "$icuVersionInDownload\n");
-    echo "Wrote $versionFile.\n";
+$svnInfoFile = $targetDir.'/svn-info.txt';
+file_put_contents($svnInfoFile, $svnInfo);
+echo "Wrote $svnInfoFile.\n";
+$versionFile = $targetDir.'/version.txt';
+file_put_contents($versionFile, "$icuVersionInDownload\n");
+echo "Wrote $versionFile.\n";
 }
 echo "Done.\n";'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

42) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #1429 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Component/Routing/Tests/Fixtures/validpattern.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 '<?php
 use Symfony\Component\Routing\RouteCollection;
 use Symfony\Component\Routing\Route;
 $collection = new RouteCollection();
 $collection->add('blog_show', new Route(
-    '/blog/{slug}',
-    array('_controller' => 'MyBlogBundle:Blog:show'),
-    array('locale' => '\w+'),
-    array('compiler_class' => 'RouteCompiler'),
-    '{locale}.example.com',
-    array('https'),
-    array('GET', 'POST', 'put', 'OpTiOnS'),
-    'context.getMethod() == "GET"'
+'/blog/{slug}',
+array('_controller' => 'MyBlogBundle:Blog:show'),
+array('locale' => '\w+'),
+array('compiler_class' => 'RouteCompiler'),
+'{locale}.example.com',
+array('https'),
+array('GET', 'POST', 'put', 'OpTiOnS'),
+'context.getMethod() == "GET"'
 ));
 return $collection;'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

43) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #1430 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Component/Routing/Tests/Fixtures/validresource.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 '<?php
 /** @var $loader \Symfony\Component\Routing\Loader\PhpFileLoader */
 /** @var \Symfony\Component\Routing\RouteCollection $collection */
 $collection = $loader->import('validpattern.php');
 $collection->addDefaults(array(
-    'foo' => 123,
+'foo' => 123,
 ));
 $collection->addRequirements(array(
-    'foo' => '\d+',
+'foo' => '\d+',
 ));
 $collection->addOptions(array(
-    'foo' => 'bar',
+'foo' => 'bar',
 ));
 $collection->setCondition('context.getMethod() == "POST"');
 $collection->addPrefix('/prefix');
 return $collection;'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

44) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #1621 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Component/Security/Acl/Tests/Domain/ObjectIdentityTest.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 {
-    use Symfony\Component\Security\Acl\Domain\ObjectIdentity;
-    class ObjectIdentityTest extends \PHPUnit_Framework_TestCase
+use Symfony\Component\Security\Acl\Domain\ObjectIdentity;
+class ObjectIdentityTest extends \PHPUnit_Framework_TestCase
+{
+    public function testConstructor()
     {
-        public function testConstructor()
-        {
             $id = new ObjectIdentity('fooid', 'footype');
             $this->assertEquals('fooid', $id->getIdentifier());
             $this->assertEquals('footype', $id->getType());
         }
-        // Test that constructor never changes passed type, even with proxies
-        public function testConstructorWithProxy()
-        {
+    // Test that constructor never changes passed type, even with proxies
+    public function testConstructorWithProxy()
+    {
             $id = new ObjectIdentity('fooid', 'Acme\DemoBundle\Proxy\__CG__\Symfony\Component\Security\Acl\Tests\Domain\TestDomainObject');
             $this->assertEquals('fooid', $id->getIdentifier());
             $this->assertEquals('Acme\DemoBundle\Proxy\__CG__\Symfony\Component\Security\Acl\Tests\Domain\TestDomainObject', $id->getType());
         }
-        public function testFromDomainObjectPrefersInterfaceOverGetId()
-        {
+    public function testFromDomainObjectPrefersInterfaceOverGetId()
+    {

@@ @@
         }
-        public function testFromDomainObjectWithoutInterface()
-        {
+    public function testFromDomainObjectWithoutInterface()
+    {
             $id = ObjectIdentity::fromDomainObject(new TestDomainObject());
             $this->assertEquals('getId()', $id->getIdentifier());
             $this->assertEquals('Symfony\Component\Security\Acl\Tests\Domain\TestDomainObject', $id->getType());
         }
-        public function testFromDomainObjectWithProxy()
-        {
+    public function testFromDomainObjectWithProxy()
+    {
             $id = ObjectIdentity::fromDomainObject(new \Acme\DemoBundle\Proxy\__CG__\Symfony\Component\Security\Acl\Tests\Domain\TestDomainObject());
             $this->assertEquals('getId()', $id->getIdentifier());
             $this->assertEquals('Symfony\Component\Security\Acl\Tests\Domain\TestDomainObject', $id->getType());
         }
-        public function testFromDomainObjectWithoutInterfaceEnforcesStringIdentifier()
-        {
+    public function testFromDomainObjectWithoutInterfaceEnforcesStringIdentifier()
+    {

@@ @@
         }
-        public function testFromDomainObjectWithoutInterfaceAllowsZeroAsIdentifier()
-        {
+    public function testFromDomainObjectWithoutInterfaceAllowsZeroAsIdentifier()
+    {

@@ @@
         }
-        /**
-         * @dataProvider getCompareData
-         */
-        public function testEquals($oid1, $oid2, $equal)
-        {
+    /**
+     * @dataProvider getCompareData
+     */
+    public function testEquals($oid1, $oid2, $equal)
+    {

@@ @@
         }
-        public function getCompareData()
-        {
+    public function getCompareData()
+    {

@@ @@
         }
-    }
-    class TestDomainObject
+}
+class TestDomainObject
+{
+    public $id = 'getId()';
+    public function getObjectIdentifier()
     {
-        public $id = 'getId()';
-        public function getObjectIdentifier()
-        {
             return 'getObjectIdentifier()';
         }
-        public function getId()
-        {
+    public function getId()
+    {
             return $this->id;
         }
-    }
 }
+}
 namespace Acme\DemoBundle\Proxy\__CG__\Symfony\Component\Security\Acl\Tests\Domain
 {
-    class TestDomainObject extends \Symfony\Component\Security\Acl\Tests\Domain\TestDomainObject
-    {
-    }
+class TestDomainObject extends \Symfony\Component\Security\Acl\Tests\Domain\TestDomainObject
+{
+}
 }'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

45) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #1632 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Component/Security/Acl/Resources/bin/generateSql.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 $loader->addPrefixes(array(
-    'Symfony' => __DIR__.'/../../../../../..',
-    'Doctrine\\Common' => __DIR__.'/../../../../../../../vendor/doctrine-common/lib',
-    'Doctrine\\DBAL\\Migrations' => __DIR__.'/../../../../../../../vendor/doctrine-migrations/lib',
-    'Doctrine\\DBAL' => __DIR__.'/../../../../../../../vendor/doctrine/dbal/lib',
-    'Doctrine' => __DIR__.'/../../../../../../../vendor/doctrine/lib',
+'Symfony' => __DIR__.'/../../../../../..',
+'Doctrine\\Common' => __DIR__.'/../../../../../../../vendor/doctrine-common/lib',
+'Doctrine\\DBAL\\Migrations' => __DIR__.'/../../../../../../../vendor/doctrine-migrations/lib',
+'Doctrine\\DBAL' => __DIR__.'/../../../../../../../vendor/doctrine/dbal/lib',
+'Doctrine' => __DIR__.'/../../../../../../../vendor/doctrine/lib',
 ));
 $loader->register();
 $schema = new Schema(array(
-    'class_table_name' => 'acl_classes',
-    'entry_table_name' => 'acl_entries',
-    'oid_table_name' => 'acl_object_identities',
-    'oid_ancestors_table_name' => 'acl_object_identity_ancestors',
-    'sid_table_name' => 'acl_security_identities',
+'class_table_name' => 'acl_classes',
+'entry_table_name' => 'acl_entries',
+'oid_table_name' => 'acl_object_identities',
+'oid_ancestors_table_name' => 'acl_object_identity_ancestors',
+'sid_table_name' => 'acl_security_identities',
 ));
 $reflection = new ReflectionClass('Doctrine\\DBAL\\Platforms\\AbstractPlatform');
 $finder = new Finder();
 $finder->name('*Platform.php')->in(dirname($reflection->getFileName()));
 foreach ($finder as $file) {
-    require_once $file->getPathName();
-    $className = 'Doctrine\\DBAL\\Platforms\\'.$file->getBasename('.php');
-    $reflection = new ReflectionClass($className);
-    if ($reflection->isAbstract()) {
-        continue;
-    }
-    $platform = $reflection->newInstance();
-    $targetFile = sprintf(__DIR__.'/../schema/%s.sql', $platform->getName());
-    file_put_contents($targetFile, implode("\n\n", $schema->toSql($platform)));
+require_once $file->getPathName();
+$className = 'Doctrine\\DBAL\\Platforms\\'.$file->getBasename('.php');
+$reflection = new ReflectionClass($className);
+if ($reflection->isAbstract()) {
+continue;
+}
+$platform = $reflection->newInstance();
+$targetFile = sprintf(__DIR__.'/../schema/%s.sql', $platform->getName());
+file_put_contents($targetFile, implode("\n\n", $schema->toSql($platform)));
 }'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

46) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #1666 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Component/Security/Acl/Permission/MaskBuilder.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 {
-    const MASK_VIEW = 1;           // 1 << 0
-    const MASK_CREATE = 2;         // 1 << 1
-    const MASK_EDIT = 4;           // 1 << 2
-    const MASK_DELETE = 8;         // 1 << 3
-    const MASK_UNDELETE = 16;      // 1 << 4
-    const MASK_OPERATOR = 32;      // 1 << 5
-    const MASK_MASTER = 64;        // 1 << 6
-    const MASK_OWNER = 128;        // 1 << 7
-    const MASK_IDDQD = 1073741823; // 1 << 0 | 1 << 1 | ... | 1 << 30
+    const MASK_VIEW = 1;
+    // 1 << 0
+    const MASK_CREATE = 2;
+    // 1 << 1
+    const MASK_EDIT = 4;
+    // 1 << 2
+    const MASK_DELETE = 8;
+    // 1 << 3
+    const MASK_UNDELETE = 16;
+    // 1 << 4
+    const MASK_OPERATOR = 32;
+    // 1 << 5
+    const MASK_MASTER = 64;
+    // 1 << 6
+    const MASK_OWNER = 128;
+    // 1 << 7
+    const MASK_IDDQD = 1073741823;
+    // 1 << 0 | 1 << 1 | ... | 1 << 30
     const CODE_VIEW = 'V';
     const CODE_CREATE = 'C';
     const CODE_EDIT = 'E';
     const CODE_DELETE = 'D';
     const CODE_UNDELETE = 'U';
     const CODE_OPERATOR = 'O';
     const CODE_MASTER = 'M';
     const CODE_OWNER = 'N';
     const ALL_OFF = '................................';
     const OFF = '.';
     const ON = '*';
     /**
      * Returns a human-readable representation of the permission.
      *
      * @return string
      */
     public function getPattern()
     {
         $pattern = self::ALL_OFF;
         $length = strlen($pattern);
         $bitmask = str_pad(decbin($this->mask), $length, '0', STR_PAD_LEFT);
         for ($i = $length - 1; $i >= 0; --$i) {
             if ('1' === $bitmask[$i]) {
                 try {
                     $pattern[$i] = self::getCode(1 << ($length - $i - 1));
                 } catch (\Exception $e) {
                     $pattern[$i] = self::ON;
                 }
             }
         }
         return $pattern;
     }
     /**
      * Returns the code for the passed mask.
      *
      * @param int $mask
      *
      * @throws \InvalidArgumentException
      * @throws \RuntimeException
      *
      * @return string
      */
     public static function getCode($mask)
     {
         if (!is_int($mask)) {
             throw new \InvalidArgumentException('$mask must be an integer.');
         }
         $reflection = new \ReflectionClass(get_called_class());
         foreach ($reflection->getConstants() as $name => $cMask) {
             if (0 !== strpos($name, 'MASK_') || $mask !== $cMask) {
                 continue;
             }
             if (!defined($cName = 'static::CODE_'.substr($name, 5))) {
                 throw new \RuntimeException('There was no code defined for this mask.');
             }
             return constant($cName);
         }
         throw new \InvalidArgumentException(sprintf('The mask "%d" is not supported.', $mask));
     }
     /**
      * Returns the mask for the passed code
      *
      * @param mixed $code
      *
      * @return int
      *
      * @throws \InvalidArgumentException
      */
     public function resolveMask($code)
     {
         if (is_string($code)) {
             if (!defined($name = sprintf('static::MASK_%s', strtoupper($code)))) {
                 throw new \InvalidArgumentException(sprintf('The code "%s" is not supported', $code));
             }
             return constant($name);
         }
         if (!is_int($code)) {
             throw new \InvalidArgumentException('$code must be an integer.');
         }
         return $code;
     }
 }'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

47) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #1721 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Component/Security/Core/Tests/Util/ClassUtilsTest.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 {
-    use Symfony\Component\Security\Core\Util\ClassUtils;
-    class ClassUtilsTest extends \PHPUnit_Framework_TestCase
+use Symfony\Component\Security\Core\Util\ClassUtils;
+class ClassUtilsTest extends \PHPUnit_Framework_TestCase
+{
+    public static function dataGetClass()
     {
-        public static function dataGetClass()
-        {

@@ @@
         }
-        /**
-         * @dataProvider dataGetClass
-         */
-        public function testGetRealClass($object, $expectedClassName)
-        {
+    /**
+     * @dataProvider dataGetClass
+     */
+    public function testGetRealClass($object, $expectedClassName)
+    {
             $this->assertEquals($expectedClassName, ClassUtils::getRealClass($object));
         }
-    }
-    class TestObject
-    {
-    }
 }
+class TestObject
+{
+}
+}
 namespace Acme\DemoBundle\Proxy\__CG__\Symfony\Component\Security\Core\Tests\Util
 {
-    class TestObject extends \Symfony\Component\Security\Core\Tests\Util\TestObject
-    {
-    }
+class TestObject extends \Symfony\Component\Security\Core\Tests\Util\TestObject
+{
+}
 }'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

48) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2095 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Component/HttpFoundation/Tests/JsonResponseTest.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 if (interface_exists('JsonSerializable')) {
-    class JsonSerializableObject implements \JsonSerializable
+class JsonSerializableObject implements \JsonSerializable
+{
+    public function jsonSerialize()
     {
-        public function jsonSerialize()
-        {
             throw new \Exception('This error is expected');
         }
-    }
+}
 }'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

49) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2144 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Component/HttpFoundation/Response.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
     const HTTP_SWITCHING_PROTOCOLS = 101;
-    const HTTP_PROCESSING = 102;            // RFC2518
+    const HTTP_PROCESSING = 102;
+    // RFC2518

@@ @@
     const HTTP_PARTIAL_CONTENT = 206;
-    const HTTP_MULTI_STATUS = 207;          // RFC4918
-    const HTTP_ALREADY_REPORTED = 208;      // RFC5842
-    const HTTP_IM_USED = 226;               // RFC3229
+    const HTTP_MULTI_STATUS = 207;
+    // RFC4918
+    const HTTP_ALREADY_REPORTED = 208;
+    // RFC5842
+    const HTTP_IM_USED = 226;
+    // RFC3229

@@ @@
     const HTTP_TEMPORARY_REDIRECT = 307;
-    const HTTP_PERMANENTLY_REDIRECT = 308;  // RFC7238
+    const HTTP_PERMANENTLY_REDIRECT = 308;
+    // RFC7238

@@ @@
     const HTTP_EXPECTATION_FAILED = 417;
-    const HTTP_I_AM_A_TEAPOT = 418;                                               // RFC2324
-    const HTTP_UNPROCESSABLE_ENTITY = 422;                                        // RFC4918
-    const HTTP_LOCKED = 423;                                                      // RFC4918
-    const HTTP_FAILED_DEPENDENCY = 424;                                           // RFC4918
-    const HTTP_RESERVED_FOR_WEBDAV_ADVANCED_COLLECTIONS_EXPIRED_PROPOSAL = 425;   // RFC2817
-    const HTTP_UPGRADE_REQUIRED = 426;                                            // RFC2817
-    const HTTP_PRECONDITION_REQUIRED = 428;                                       // RFC6585
-    const HTTP_TOO_MANY_REQUESTS = 429;                                           // RFC6585
-    const HTTP_REQUEST_HEADER_FIELDS_TOO_LARGE = 431;                             // RFC6585
+    const HTTP_I_AM_A_TEAPOT = 418;
+    // RFC2324
+    const HTTP_UNPROCESSABLE_ENTITY = 422;
+    // RFC4918
+    const HTTP_LOCKED = 423;
+    // RFC4918
+    const HTTP_FAILED_DEPENDENCY = 424;
+    // RFC4918
+    const HTTP_RESERVED_FOR_WEBDAV_ADVANCED_COLLECTIONS_EXPIRED_PROPOSAL = 425;
+    // RFC2817
+    const HTTP_UPGRADE_REQUIRED = 426;
+    // RFC2817
+    const HTTP_PRECONDITION_REQUIRED = 428;
+    // RFC6585
+    const HTTP_TOO_MANY_REQUESTS = 429;
+    // RFC6585
+    const HTTP_REQUEST_HEADER_FIELDS_TOO_LARGE = 431;
+    // RFC6585

@@ @@
     const HTTP_VERSION_NOT_SUPPORTED = 505;
-    const HTTP_VARIANT_ALSO_NEGOTIATES_EXPERIMENTAL = 506;                        // RFC2295
-    const HTTP_INSUFFICIENT_STORAGE = 507;                                        // RFC4918
-    const HTTP_LOOP_DETECTED = 508;                                               // RFC5842
-    const HTTP_NOT_EXTENDED = 510;                                                // RFC2774
-    const HTTP_NETWORK_AUTHENTICATION_REQUIRED = 511;                             // RFC6585
+    const HTTP_VARIANT_ALSO_NEGOTIATES_EXPERIMENTAL = 506;
+    // RFC2295
+    const HTTP_INSUFFICIENT_STORAGE = 507;
+    // RFC4918
+    const HTTP_LOOP_DETECTED = 508;
+    // RFC5842
+    const HTTP_NOT_EXTENDED = 510;
+    // RFC2774
+    const HTTP_NETWORK_AUTHENTICATION_REQUIRED = 511;
+    // RFC6585
     /**
      * @var \Symfony\Component\HttpFoundation\ResponseHeaderBag
      */
     public $headers;
     /**
      * @var string
      */
     protected $content;
     /**
      * @var string
      */
     protected $version;
     /**
      * @var int
      */
     protected $statusCode;
     /**
      * @var string
      */
     protected $statusText;
     /**
      * @var string
      */
     protected $charset;
     /**
      * Status codes translation table.
      *
      * The list of codes is complete according to the
      * {@link http://www.iana.org/assignments/http-status-codes/ Hypertext Transfer Protocol (HTTP) Status Code Registry}
      * (last updated 2012-02-13).
      *
      * Unless otherwise noted, the status code is defined in RFC2616.
      *
      * @var array
      */
     public static $statusTexts = array(
         100 => 'Continue',
         101 => 'Switching Protocols',
         102 => 'Processing',            // RFC2518
         200 => 'OK',
         201 => 'Created',
         202 => 'Accepted',
         203 => 'Non-Authoritative Information',
         204 => 'No Content',
         205 => 'Reset Content',
         206 => 'Partial Content',
         207 => 'Multi-Status',          // RFC4918
         208 => 'Already Reported',      // RFC5842
         226 => 'IM Used',               // RFC3229
         300 => 'Multiple Choices',
         301 => 'Moved Permanently',
         302 => 'Found',
         303 => 'See Other',
         304 => 'Not Modified',
         305 => 'Use Proxy',
         306 => 'Reserved',
         307 => 'Temporary Redirect',
         308 => 'Permanent Redirect',    // RFC7238
         400 => 'Bad Request',
         401 => 'Unauthorized',
         402 => 'Payment Required',
         403 => 'Forbidden',
         404 => 'Not Found',
         405 => 'Method Not Allowed',
         406 => 'Not Acceptable',
         407 => 'Proxy Authentication Required',
         408 => 'Request Timeout',
         409 => 'Conflict',
         410 => 'Gone',
         411 => 'Length Required',
         412 => 'Precondition Failed',
         413 => 'Request Entity Too Large',
         414 => 'Request-URI Too Long',
         415 => 'Unsupported Media Type',
         416 => 'Requested Range Not Satisfiable',
         417 => 'Expectation Failed',
         418 => 'I\'m a teapot',                                               // RFC2324
         422 => 'Unprocessable Entity',                                        // RFC4918
         423 => 'Locked',                                                      // RFC4918
         424 => 'Failed Dependency',                                           // RFC4918
         425 => 'Reserved for WebDAV advanced collections expired proposal',   // RFC2817
         426 => 'Upgrade Required',                                            // RFC2817
         428 => 'Precondition Required',                                       // RFC6585
         429 => 'Too Many Requests',                                           // RFC6585
         431 => 'Request Header Fields Too Large',                             // RFC6585
         500 => 'Internal Server Error',
         501 => 'Not Implemented',
         502 => 'Bad Gateway',
         503 => 'Service Unavailable',
         504 => 'Gateway Timeout',
         505 => 'HTTP Version Not Supported',
         506 => 'Variant Also Negotiates (Experimental)',                      // RFC2295
         507 => 'Insufficient Storage',                                        // RFC4918
         508 => 'Loop Detected',                                               // RFC5842
         510 => 'Not Extended',                                                // RFC2774
         511 => 'Network Authentication Required',                             // RFC6585
     );
     /**
      * Constructor.
      *
      * @param mixed $content The response content, see setContent()
      * @param int   $status  The response status code
      * @param array $headers An array of response headers
      *
      * @throws \InvalidArgumentException When the HTTP status code is not valid
      *
      * @api
      */
     public function __construct($content = '', $status = 200, $headers = array())
     {
         $this->headers = new ResponseHeaderBag($headers);
         $this->setContent($content);
         $this->setStatusCode($status);
         $this->setProtocolVersion('1.0');
     }
     /**
      * Factory method for chainability.
      *
      * Example:
      *
      *     return Response::create($body, 200)
      *         ->setSharedMaxAge(300);
      *
      * @param mixed $content The response content, see setContent()
      * @param int   $status  The response status code
      * @param array $headers An array of response headers
      *
      * @return Response
      */
     public static function create($content = '', $status = 200, $headers = array())
     {
         return new static($content, $status, $headers);
     }
     /**
      * Returns the Response as an HTTP string.
      *
      * The string representation of the Response is the same as the
      * one that will be sent to the client only if the prepare() method
      * has been called before.
      *
      * @return string The Response as an HTTP string
      *
      * @see prepare()
      */
     public function __toString()
     {
         return
             sprintf('HTTP/%s %s %s', $this->version, $this->statusCode, $this->statusText)."\r\n".
             $this->headers."\r\n".
             $this->getContent();
     }
     /**
      * Clones the current Response instance.
      */
     public function __clone()
     {
         $this->headers = clone $this->headers;
     }
     /**
      * Prepares the Response before it is sent to the client.
      *
      * This method tweaks the Response to ensure that it is
      * compliant with RFC 2616. Most of the changes are based on
      * the Request that is "associated" with this Response.
      *
      * @param Request $request A Request instance
      *
      * @return Response The current response.
      */
     public function prepare(Request $request)
     {
         $headers = $this->headers;
         if ($this->isInformational() || $this->isEmpty()) {
             $this->setContent(null);
             $headers->remove('Content-Type');
             $headers->remove('Content-Length');
         } else {
             // Content-type based on the Request
             if (!$headers->has('Content-Type')) {
                 $format = $request->getRequestFormat();
                 if (null !== $format && $mimeType = $request->getMimeType($format)) {
                     $headers->set('Content-Type', $mimeType);
                 }
             }
             // Fix Content-Type
             $charset = $this->charset ?: 'UTF-8';
             if (!$headers->has('Content-Type')) {
                 $headers->set('Content-Type', 'text/html; charset='.$charset);
             } elseif (0 === stripos($headers->get('Content-Type'), 'text/') && false === stripos($headers->get('Content-Type'), 'charset')) {
                 // add the charset
                 $headers->set('Content-Type', $headers->get('Content-Type').'; charset='.$charset);
             }
             // Fix Content-Length
             if ($headers->has('Transfer-Encoding')) {
                 $headers->remove('Content-Length');
             }
             if ($request->isMethod('HEAD')) {
                 // cf. RFC2616 14.13
                 $length = $headers->get('Content-Length');
                 $this->setContent(null);
                 if ($length) {
                     $headers->set('Content-Length', $length);
                 }
             }
         }
         // Fix protocol
         if ('HTTP/1.0' != $request->server->get('SERVER_PROTOCOL')) {
             $this->setProtocolVersion('1.1');
         }
         // Check if we need to send extra expire info headers
         if ('1.0' == $this->getProtocolVersion() && 'no-cache' == $this->headers->get('Cache-Control')) {
             $this->headers->set('pragma', 'no-cache');
             $this->headers->set('expires', -1);
         }
         $this->ensureIEOverSSLCompatibility($request);
         return $this;
     }
     /**
      * Sends HTTP headers.
      *
      * @return Response
      */
     public function sendHeaders()
     {
         // headers have already been sent by the developer
         if (headers_sent()) {
             return $this;
         }
         if (!$this->headers->has('Date')) {
             $this->setDate(new \DateTime());
         }
         // status
         header(sprintf('HTTP/%s %s %s', $this->version, $this->statusCode, $this->statusText), true, $this->statusCode);
         // headers
         foreach ($this->headers->allPreserveCase() as $name => $values) {
             foreach ($values as $value) {
                 header($name.': '.$value, false, $this->statusCode);
             }
         }
         // cookies
         foreach ($this->headers->getCookies() as $cookie) {
             setcookie($cookie->getName(), $cookie->getValue(), $cookie->getExpiresTime(), $cookie->getPath(), $cookie->getDomain(), $cookie->isSecure(), $cookie->isHttpOnly());
         }
         return $this;
     }
     /**
      * Sends content for the current web response.
      *
      * @return Response
      */
     public function sendContent()
     {
         echo $this->content;
         return $this;
     }
     /**
      * Sends HTTP headers and content.
      *
      * @return Response
      *
      * @api
      */
     public function send()
     {
         $this->sendHeaders();
         $this->sendContent();
         if (function_exists('fastcgi_finish_request')) {
             fastcgi_finish_request();
         } elseif ('cli' !== PHP_SAPI) {
             static::closeOutputBuffers(0, true);
         }
         return $this;
     }
     /**
      * Sets the response content.
      *
      * Valid types are strings, numbers, null, and objects that implement a __toString() method.
      *
      * @param mixed $content Content that can be cast to string
      *
      * @return Response
      *
      * @throws \UnexpectedValueException
      *
      * @api
      */
     public function setContent($content)
     {
         if (null !== $content && !is_string($content) && !is_numeric($content) && !is_callable(array($content, '__toString'))) {
             throw new \UnexpectedValueException(sprintf('The Response content must be a string or object implementing __toString(), "%s" given.', gettype($content)));
         }
         $this->content = (string) $content;
         return $this;
     }
     /**
      * Gets the current response content.
      *
      * @return string Content
      *
      * @api
      */
     public function getContent()
     {
         return $this->content;
     }
     /**
      * Sets the HTTP protocol version (1.0 or 1.1).
      *
      * @param string $version The HTTP protocol version
      *
      * @return Response
      *
      * @api
      */
     public function setProtocolVersion($version)
     {
         $this->version = $version;
         return $this;
     }
     /**
      * Gets the HTTP protocol version.
      *
      * @return string The HTTP protocol version
      *
      * @api
      */
     public function getProtocolVersion()
     {
         return $this->version;
     }
     /**
      * Sets the response status code.
      *
      * @param int   $code HTTP status code
      * @param mixed $text HTTP status text
      *
      * If the status text is null it will be automatically populated for the known
      * status codes and left empty otherwise.
      *
      * @return Response
      *
      * @throws \InvalidArgumentException When the HTTP status code is not valid
      *
      * @api
      */
     public function setStatusCode($code, $text = null)
     {
         $this->statusCode = $code = (int) $code;
         if ($this->isInvalid()) {
             throw new \InvalidArgumentException(sprintf('The HTTP status code "%s" is not valid.', $code));
         }
         if (null === $text) {
             $this->statusText = isset(self::$statusTexts[$code]) ? self::$statusTexts[$code] : '';
             return $this;
         }
         if (false === $text) {
             $this->statusText = '';
             return $this;
         }
         $this->statusText = $text;
         return $this;
     }
     /**
      * Retrieves the status code for the current web response.
      *
      * @return int Status code
      *
      * @api
      */
     public function getStatusCode()
     {
         return $this->statusCode;
     }
     /**
      * Sets the response charset.
      *
      * @param string $charset Character set
      *
      * @return Response
      *
      * @api
      */
     public function setCharset($charset)
     {
         $this->charset = $charset;
         return $this;
     }
     /**
      * Retrieves the response charset.
      *
      * @return string Character set
      *
      * @api
      */
     public function getCharset()
     {
         return $this->charset;
     }
     /**
      * Returns true if the response is worth caching under any circumstance.
      *
      * Responses marked "private" with an explicit Cache-Control directive are
      * considered uncacheable.
      *
      * Responses with neither a freshness lifetime (Expires, max-age) nor cache
      * validator (Last-Modified, ETag) are considered uncacheable.
      *
      * @return bool true if the response is worth caching, false otherwise
      *
      * @api
      */
     public function isCacheable()
     {
         if (!in_array($this->statusCode, array(200, 203, 300, 301, 302, 404, 410))) {
             return false;
         }
         if ($this->headers->hasCacheControlDirective('no-store') || $this->headers->getCacheControlDirective('private')) {
             return false;
         }
         return $this->isValidateable() || $this->isFresh();
     }
     /**
      * Returns true if the response is "fresh".
      *
      * Fresh responses may be served from cache without any interaction with the
      * origin. A response is considered fresh when it includes a Cache-Control/max-age
      * indicator or Expires header and the calculated age is less than the freshness lifetime.
      *
      * @return bool true if the response is fresh, false otherwise
      *
      * @api
      */
     public function isFresh()
     {
         return $this->getTtl() > 0;
     }
     /**
      * Returns true if the response includes headers that can be used to validate
      * the response with the origin server using a conditional GET request.
      *
      * @return bool true if the response is validateable, false otherwise
      *
      * @api
      */
     public function isValidateable()
     {
         return $this->headers->has('Last-Modified') || $this->headers->has('ETag');
     }
     /**
      * Marks the response as "private".
      *
      * It makes the response ineligible for serving other clients.
      *
      * @return Response
      *
      * @api
      */
     public function setPrivate()
     {
         $this->headers->removeCacheControlDirective('public');
         $this->headers->addCacheControlDirective('private');
         return $this;
     }
     /**
      * Marks the response as "public".
      *
      * It makes the response eligible for serving other clients.
      *
      * @return Response
      *
      * @api
      */
     public function setPublic()
     {
         $this->headers->addCacheControlDirective('public');
         $this->headers->removeCacheControlDirective('private');
         return $this;
     }
     /**
      * Returns true if the response must be revalidated by caches.
      *
      * This method indicates that the response must not be served stale by a
      * cache in any circumstance without first revalidating with the origin.
      * When present, the TTL of the response should not be overridden to be
      * greater than the value provided by the origin.
      *
      * @return bool true if the response must be revalidated by a cache, false otherwise
      *
      * @api
      */
     public function mustRevalidate()
     {
         return $this->headers->hasCacheControlDirective('must-revalidate') || $this->headers->has('proxy-revalidate');
     }
     /**
      * Returns the Date header as a DateTime instance.
      *
      * @return \DateTime A \DateTime instance
      *
      * @throws \RuntimeException When the header is not parseable
      *
      * @api
      */
     public function getDate()
     {
         if (!$this->headers->has('Date')) {
             $this->setDate(new \DateTime());
         }
         return $this->headers->getDate('Date');
     }
     /**
      * Sets the Date header.
      *
      * @param \DateTime $date A \DateTime instance
      *
      * @return Response
      *
      * @api
      */
     public function setDate(\DateTime $date)
     {
         $date->setTimezone(new \DateTimeZone('UTC'));
         $this->headers->set('Date', $date->format('D, d M Y H:i:s').' GMT');
         return $this;
     }
     /**
      * Returns the age of the response.
      *
      * @return int The age of the response in seconds
      */
     public function getAge()
     {
         if (null !== $age = $this->headers->get('Age')) {
             return (int) $age;
         }
         return max(time() - $this->getDate()->format('U'), 0);
     }
     /**
      * Marks the response stale by setting the Age header to be equal to the maximum age of the response.
      *
      * @return Response
      *
      * @api
      */
     public function expire()
     {
         if ($this->isFresh()) {
             $this->headers->set('Age', $this->getMaxAge());
         }
         return $this;
     }
     /**
      * Returns the value of the Expires header as a DateTime instance.
      *
      * @return \DateTime|null A DateTime instance or null if the header does not exist
      *
      * @api
      */
     public function getExpires()
     {
         try {
             return $this->headers->getDate('Expires');
         } catch (\RuntimeException $e) {
             // according to RFC 2616 invalid date formats (e.g. "0" and "-1") must be treated as in the past
             return \DateTime::createFromFormat(DATE_RFC2822, 'Sat, 01 Jan 00 00:00:00 +0000');
         }
     }
     /**
      * Sets the Expires HTTP header with a DateTime instance.
      *
      * Passing null as value will remove the header.
      *
      * @param \DateTime|null $date A \DateTime instance or null to remove the header
      *
      * @return Response
      *
      * @api
      */
     public function setExpires(\DateTime $date = null)
     {
         if (null === $date) {
             $this->headers->remove('Expires');
         } else {
             $date = clone $date;
             $date->setTimezone(new \DateTimeZone('UTC'));
             $this->headers->set('Expires', $date->format('D, d M Y H:i:s').' GMT');
         }
         return $this;
     }
     /**
      * Returns the number of seconds after the time specified in the response's Date
      * header when the response should no longer be considered fresh.
      *
      * First, it checks for a s-maxage directive, then a max-age directive, and then it falls
      * back on an expires header. It returns null when no maximum age can be established.
      *
      * @return int|null Number of seconds
      *
      * @api
      */
     public function getMaxAge()
     {
         if ($this->headers->hasCacheControlDirective('s-maxage')) {
             return (int) $this->headers->getCacheControlDirective('s-maxage');
         }
         if ($this->headers->hasCacheControlDirective('max-age')) {
             return (int) $this->headers->getCacheControlDirective('max-age');
         }
         if (null !== $this->getExpires()) {
             return $this->getExpires()->format('U') - $this->getDate()->format('U');
         }
     }
     /**
      * Sets the number of seconds after which the response should no longer be considered fresh.
      *
      * This methods sets the Cache-Control max-age directive.
      *
      * @param int $value Number of seconds
      *
      * @return Response
      *
      * @api
      */
     public function setMaxAge($value)
     {
         $this->headers->addCacheControlDirective('max-age', $value);
         return $this;
     }
     /**
      * Sets the number of seconds after which the response should no longer be considered fresh by shared caches.
      *
      * This methods sets the Cache-Control s-maxage directive.
      *
      * @param int $value Number of seconds
      *
      * @return Response
      *
      * @api
      */
     public function setSharedMaxAge($value)
     {
         $this->setPublic();
         $this->headers->addCacheControlDirective('s-maxage', $value);
         return $this;
     }
     /**
      * Returns the response's time-to-live in seconds.
      *
      * It returns null when no freshness information is present in the response.
      *
      * When the responses TTL is <= 0, the response may not be served from cache without first
      * revalidating with the origin.
      *
      * @return int|null The TTL in seconds
      *
      * @api
      */
     public function getTtl()
     {
         if (null !== $maxAge = $this->getMaxAge()) {
             return $maxAge - $this->getAge();
         }
     }
     /**
      * Sets the response's time-to-live for shared caches.
      *
      * This method adjusts the Cache-Control/s-maxage directive.
      *
      * @param int $seconds Number of seconds
      *
      * @return Response
      *
      * @api
      */
     public function setTtl($seconds)
     {
         $this->setSharedMaxAge($this->getAge() + $seconds);
         return $this;
     }
     /**
      * Sets the response's time-to-live for private/client caches.
      *
      * This method adjusts the Cache-Control/max-age directive.
      *
      * @param int $seconds Number of seconds
      *
      * @return Response
      *
      * @api
      */
     public function setClientTtl($seconds)
     {
         $this->setMaxAge($this->getAge() + $seconds);
         return $this;
     }
     /**
      * Returns the Last-Modified HTTP header as a DateTime instance.
      *
      * @return \DateTime|null A DateTime instance or null if the header does not exist
      *
      * @throws \RuntimeException When the HTTP header is not parseable
      *
      * @api
      */
     public function getLastModified()
     {
         return $this->headers->getDate('Last-Modified');
     }
     /**
      * Sets the Last-Modified HTTP header with a DateTime instance.
      *
      * Passing null as value will remove the header.
      *
      * @param \DateTime|null $date A \DateTime instance or null to remove the header
      *
      * @return Response
      *
      * @api
      */
     public function setLastModified(\DateTime $date = null)
     {
         if (null === $date) {
             $this->headers->remove('Last-Modified');
         } else {
             $date = clone $date;
             $date->setTimezone(new \DateTimeZone('UTC'));
             $this->headers->set('Last-Modified', $date->format('D, d M Y H:i:s').' GMT');
         }
         return $this;
     }
     /**
      * Returns the literal value of the ETag HTTP header.
      *
      * @return string|null The ETag HTTP header or null if it does not exist
      *
      * @api
      */
     public function getEtag()
     {
         return $this->headers->get('ETag');
     }
     /**
      * Sets the ETag value.
      *
      * @param string|null $etag The ETag unique identifier or null to remove the header
      * @param bool        $weak Whether you want a weak ETag or not
      *
      * @return Response
      *
      * @api
      */
     public function setEtag($etag = null, $weak = false)
     {
         if (null === $etag) {
             $this->headers->remove('Etag');
         } else {
             if (0 !== strpos($etag, '"')) {
                 $etag = '"'.$etag.'"';
             }
             $this->headers->set('ETag', (true === $weak ? 'W/' : '').$etag);
         }
         return $this;
     }
     /**
      * Sets the response's cache headers (validation and/or expiration).
      *
      * Available options are: etag, last_modified, max_age, s_maxage, private, and public.
      *
      * @param array $options An array of cache options
      *
      * @return Response
      *
      * @throws \InvalidArgumentException
      *
      * @api
      */
     public function setCache(array $options)
     {
         if ($diff = array_diff(array_keys($options), array('etag', 'last_modified', 'max_age', 's_maxage', 'private', 'public'))) {
             throw new \InvalidArgumentException(sprintf('Response does not support the following options: "%s".', implode('", "', array_values($diff))));
         }
         if (isset($options['etag'])) {
             $this->setEtag($options['etag']);
         }
         if (isset($options['last_modified'])) {
             $this->setLastModified($options['last_modified']);
         }
         if (isset($options['max_age'])) {
             $this->setMaxAge($options['max_age']);
         }
         if (isset($options['s_maxage'])) {
             $this->setSharedMaxAge($options['s_maxage']);
         }
         if (isset($options['public'])) {
             if ($options['public']) {
                 $this->setPublic();
             } else {
                 $this->setPrivate();
             }
         }
         if (isset($options['private'])) {
             if ($options['private']) {
                 $this->setPrivate();
             } else {
                 $this->setPublic();
             }
         }
         return $this;
     }
     /**
      * Modifies the response so that it conforms to the rules defined for a 304 status code.
      *
      * This sets the status, removes the body, and discards any headers
      * that MUST NOT be included in 304 responses.
      *
      * @return Response
      *
      * @see http://tools.ietf.org/html/rfc2616#section-10.3.5
      *
      * @api
      */
     public function setNotModified()
     {
         $this->setStatusCode(304);
         $this->setContent(null);
         // remove headers that MUST NOT be included with 304 Not Modified responses
         foreach (array('Allow', 'Content-Encoding', 'Content-Language', 'Content-Length', 'Content-MD5', 'Content-Type', 'Last-Modified') as $header) {
             $this->headers->remove($header);
         }
         return $this;
     }
     /**
      * Returns true if the response includes a Vary header.
      *
      * @return bool true if the response includes a Vary header, false otherwise
      *
      * @api
      */
     public function hasVary()
     {
         return null !== $this->headers->get('Vary');
     }
     /**
      * Returns an array of header names given in the Vary header.
      *
      * @return array An array of Vary names
      *
      * @api
      */
     public function getVary()
     {
         if (!$vary = $this->headers->get('Vary', null, false)) {
             return array();
         }
         $ret = array();
         foreach ($vary as $item) {
             $ret = array_merge($ret, preg_split('/[\s,]+/', $item));
         }
         return $ret;
     }
     /**
      * Sets the Vary header.
      *
      * @param string|array $headers
      * @param bool         $replace Whether to replace the actual value of not (true by default)
      *
      * @return Response
      *
      * @api
      */
     public function setVary($headers, $replace = true)
     {
         $this->headers->set('Vary', $headers, $replace);
         return $this;
     }
     /**
      * Determines if the Response validators (ETag, Last-Modified) match
      * a conditional value specified in the Request.
      *
      * If the Response is not modified, it sets the status code to 304 and
      * removes the actual content by calling the setNotModified() method.
      *
      * @param Request $request A Request instance
      *
      * @return bool true if the Response validators match the Request, false otherwise
      *
      * @api
      */
     public function isNotModified(Request $request)
     {
         if (!$request->isMethodSafe()) {
             return false;
         }
         $notModified = false;
         $lastModified = $this->headers->get('Last-Modified');
         $modifiedSince = $request->headers->get('If-Modified-Since');
         if ($etags = $request->getETags()) {
             $notModified = in_array($this->getEtag(), $etags) || in_array('*', $etags);
         }
         if ($modifiedSince && $lastModified) {
             $notModified = strtotime($modifiedSince) >= strtotime($lastModified) && (!$etags || $notModified);
         }
         if ($notModified) {
             $this->setNotModified();
         }
         return $notModified;
     }
     // http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html
     /**
      * Is response invalid?
      *
      * @return bool
      *
      * @api
      */
     public function isInvalid()
     {
         return $this->statusCode < 100 || $this->statusCode >= 600;
     }
     /**
      * Is response informative?
      *
      * @return bool
      *
      * @api
      */
     public function isInformational()
     {
         return $this->statusCode >= 100 && $this->statusCode < 200;
     }
     /**
      * Is response successful?
      *
      * @return bool
      *
      * @api
      */
     public function isSuccessful()
     {
         return $this->statusCode >= 200 && $this->statusCode < 300;
     }
     /**
      * Is the response a redirect?
      *
      * @return bool
      *
      * @api
      */
     public function isRedirection()
     {
         return $this->statusCode >= 300 && $this->statusCode < 400;
     }
     /**
      * Is there a client error?
      *
      * @return bool
      *
      * @api
      */
     public function isClientError()
     {
         return $this->statusCode >= 400 && $this->statusCode < 500;
     }
     /**
      * Was there a server side error?
      *
      * @return bool
      *
      * @api
      */
     public function isServerError()
     {
         return $this->statusCode >= 500 && $this->statusCode < 600;
     }
     /**
      * Is the response OK?
      *
      * @return bool
      *
      * @api
      */
     public function isOk()
     {
         return 200 === $this->statusCode;
     }
     /**
      * Is the response forbidden?
      *
      * @return bool
      *
      * @api
      */
     public function isForbidden()
     {
         return 403 === $this->statusCode;
     }
     /**
      * Is the response a not found error?
      *
      * @return bool
      *
      * @api
      */
     public function isNotFound()
     {
         return 404 === $this->statusCode;
     }
     /**
      * Is the response a redirect of some form?
      *
      * @param string $location
      *
      * @return bool
      *
      * @api
      */
     public function isRedirect($location = null)
     {
         return in_array($this->statusCode, array(201, 301, 302, 303, 307, 308)) && (null === $location ?: $location == $this->headers->get('Location'));
     }
     /**
      * Is the response empty?
      *
      * @return bool
      *
      * @api
      */
     public function isEmpty()
     {
         return in_array($this->statusCode, array(204, 304));
     }
     /**
      * Cleans or flushes output buffers up to target level.
      *
      * Resulting level can be greater than target level if a non-removable buffer has been encountered.
      *
      * @param int  $targetLevel The target output buffering level
      * @param bool $flush       Whether to flush or clean the buffers
      */
     public static function closeOutputBuffers($targetLevel, $flush)
     {
         $status = ob_get_status(true);
         $level = count($status);
         $flags = defined('PHP_OUTPUT_HANDLER_REMOVABLE') ? PHP_OUTPUT_HANDLER_REMOVABLE | ($flush ? PHP_OUTPUT_HANDLER_FLUSHABLE : PHP_OUTPUT_HANDLER_CLEANABLE) : -1;
         while ($level-- > $targetLevel && ($s = $status[$level]) && (!isset($s['del']) ? !isset($s['flags']) || $flags === ($s['flags'] & $flags) : $s['del'])) {
             if ($flush) {
                 ob_end_flush();
             } else {
                 ob_end_clean();
             }
         }
     }
     /**
      * Checks if we need to remove Cache-Control for SSL encrypted downloads when using IE < 9.
      *
      * @link http://support.microsoft.com/kb/323308
      */
     protected function ensureIEOverSSLCompatibility(Request $request)
     {
         if (false !== stripos($this->headers->get('Content-Disposition'), 'attachment') && preg_match('/MSIE (.*?);/i', $request->server->get('HTTP_USER_AGENT'), $match) == 1 && true === $request->isSecure()) {
             if ((int) preg_replace('/(MSIE )(.*?);/', '$2', $match[0]) < 9) {
                 $this->headers->remove('Cache-Control');
             }
         }
     }
 }'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

50) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2166 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Component/HttpFoundation/Session/Storage/Handler/NativeSessionHandler.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 if (PHP_VERSION_ID >= 50400) {
-    class NativeSessionHandler extends \SessionHandler
-    {
-    }
+class NativeSessionHandler extends \SessionHandler
+{
+}
 } else {
-    class NativeSessionHandler
-    {
-    }
+class NativeSessionHandler
+{
+}
 }'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

51) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2214 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Component/Console/Tests/Fixtures/Style/SymfonyStyle/command/command_2.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 return function (InputInterface $input, OutputInterface $output) {
-    $output = new SymfonyStyle($input, $output);
-    $output->warning('Warning');
-    $output->caution('Caution');
-    $output->error('Error');
-    $output->success('Success');
-    $output->note('Note');
-    $output->block('Custom block', 'CUSTOM', 'fg=white;bg=green', 'X ', true);
+$output = new SymfonyStyle($input, $output);
+$output->warning('Warning');
+$output->caution('Caution');
+$output->error('Error');
+$output->success('Success');
+$output->note('Note');
+$output->block('Custom block', 'CUSTOM', 'fg=white;bg=green', 'X ', true);
 };'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

52) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2215 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Component/Console/Tests/Fixtures/Style/SymfonyStyle/command/command_3.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 return function (InputInterface $input, OutputInterface $output) {
-    $output = new SymfonyStyle($input, $output);
-    $output->title('First title');
-    $output->title('Second title');
+$output = new SymfonyStyle($input, $output);
+$output->title('First title');
+$output->title('Second title');
 };'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

53) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2216 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Component/Console/Tests/Fixtures/Style/SymfonyStyle/command/command_6.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 return function (InputInterface $input, OutputInterface $output) {
-    $output = new SymfonyStyle($input, $output);
-    $output->listing(array(
-        'Lorem ipsum dolor sit amet',
-        'consectetur adipiscing elit',
-    ));
-    $output->success('Lorem ipsum dolor sit amet');
+$output = new SymfonyStyle($input, $output);
+$output->listing(array(
+'Lorem ipsum dolor sit amet',
+'consectetur adipiscing elit',
+));
+$output->success('Lorem ipsum dolor sit amet');
 };'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

54) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2217 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Component/Console/Tests/Fixtures/Style/SymfonyStyle/command/command_1.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 return function (InputInterface $input, OutputInterface $output) {
-    $output = new SymfonyStyle($input, $output);
-    $output->title('Title');
-    $output->warning('Lorem ipsum dolor sit amet');
-    $output->title('Title');
+$output = new SymfonyStyle($input, $output);
+$output->title('Title');
+$output->warning('Lorem ipsum dolor sit amet');
+$output->title('Title');
 };'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

55) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2218 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Component/Console/Tests/Fixtures/Style/SymfonyStyle/command/command_7.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 return function (InputInterface $input, OutputInterface $output) {
-    $output = new SymfonyStyle($input, $output);
-    $output->title('Title');
-    $output->askHidden('Hidden question');
-    $output->choice('Choice question with default', array('choice1', 'choice2'), 'choice1');
-    $output->confirm('Confirmation with yes default', true);
-    $output->text('Duis aute irure dolor in reprehenderit in voluptate velit esse');
+$output = new SymfonyStyle($input, $output);
+$output->title('Title');
+$output->askHidden('Hidden question');
+$output->choice('Choice question with default', array('choice1', 'choice2'), 'choice1');
+$output->confirm('Confirmation with yes default', true);
+$output->text('Duis aute irure dolor in reprehenderit in voluptate velit esse');
 };'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

56) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2219 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Component/Console/Tests/Fixtures/Style/SymfonyStyle/command/command_5.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 return function (InputInterface $input, OutputInterface $output) {
-    $output = new SymfonyStyle($input, $output);
-    $output->writeln('Lorem ipsum dolor sit amet');
-    $output->listing(array(
-        'Lorem ipsum dolor sit amet',
-        'consectetur adipiscing elit',
-    ));
-    //Even using write:
-    $output->write('Lorem ipsum dolor sit amet');
-    $output->listing(array(
-        'Lorem ipsum dolor sit amet',
-        'consectetur adipiscing elit',
-    ));
-    $output->write('Lorem ipsum dolor sit amet');
-    $output->text(array(
-        'Lorem ipsum dolor sit amet',
-        'consectetur adipiscing elit',
-    ));
+$output = new SymfonyStyle($input, $output);
+$output->writeln('Lorem ipsum dolor sit amet');
+$output->listing(array(
+'Lorem ipsum dolor sit amet',
+'consectetur adipiscing elit',
+));
+//Even using write:
+$output->write('Lorem ipsum dolor sit amet');
+$output->listing(array(
+'Lorem ipsum dolor sit amet',
+'consectetur adipiscing elit',
+));
+$output->write('Lorem ipsum dolor sit amet');
+$output->text(array(
+'Lorem ipsum dolor sit amet',
+'consectetur adipiscing elit',
+));
 };'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

57) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2220 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Component/Console/Tests/Fixtures/Style/SymfonyStyle/command/command_0.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 return function (InputInterface $input, OutputInterface $output) {
-    $output = new SymfonyStyle($input, $output);
-    $output->caution('Lorem ipsum dolor sit amet');
+$output = new SymfonyStyle($input, $output);
+$output->caution('Lorem ipsum dolor sit amet');
 };'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

58) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2221 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Component/Console/Tests/Fixtures/Style/SymfonyStyle/command/command_4.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 return function (InputInterface $input, OutputInterface $output) {
-    $output = new SymfonyStyle($input, $output);
-    $output->write('Lorem ipsum dolor sit amet');
-    $output->title('First title');
-    $output->writeln('Lorem ipsum dolor sit amet');
-    $output->title('Second title');
-    $output->write('Lorem ipsum dolor sit amet');
-    $output->write('');
-    $output->title('Third title');
-    //Ensure edge case by appending empty strings to history:
-    $output->write('Lorem ipsum dolor sit amet');
-    $output->write(array('', '', ''));
-    $output->title('Fourth title');
-    //Ensure have manual control over number of blank lines:
-    $output->writeln('Lorem ipsum dolor sit amet');
-    $output->writeln(array('', '')); //Should append an extra blank line
-    $output->title('Fifth title');
-    $output->writeln('Lorem ipsum dolor sit amet');
-    $output->newLine(2); //Should append an extra blank line
-    $output->title('Fifth title');
+$output = new SymfonyStyle($input, $output);
+$output->write('Lorem ipsum dolor sit amet');
+$output->title('First title');
+$output->writeln('Lorem ipsum dolor sit amet');
+$output->title('Second title');
+$output->write('Lorem ipsum dolor sit amet');
+$output->write('');
+$output->title('Third title');
+//Ensure edge case by appending empty strings to history:
+$output->write('Lorem ipsum dolor sit amet');
+$output->write(array('', '', ''));
+$output->title('Fourth title');
+//Ensure have manual control over number of blank lines:
+$output->writeln('Lorem ipsum dolor sit amet');
+$output->writeln(array('', '')); //Should append an extra blank line
+$output->title('Fifth title');
+$output->writeln('Lorem ipsum dolor sit amet');
+$output->newLine(2); //Should append an extra blank line
+$output->title('Fifth title');
 };'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

59) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2461 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Component/ClassLoader/Tests/Fixtures/classmap/multipleNs.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 '<?php
 namespace {
-    class A
-    {
-    }
+class A
+{
 }
+}
 namespace Alpha {
-    class A
-    {
-    }
-    class B
-    {
-    }
+class A
+{
 }
+class B
+{
+}
+}
 namespace Beta {
-    class A
-    {
-    }
-    class B
-    {
-    }
+class A
+{
+}
+class B
+{
+}
 }'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

60) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2482 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Component/ClassLoader/Tests/LegacyApcUniversalClassLoaderTest.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
     }
-   /**
-    * @dataProvider getLoadClassTests
-    */
-   public function testLoadClass($className, $testClassName, $message)
-   {
+    /**
+     * @dataProvider getLoadClassTests
+     */
+    public function testLoadClass($className, $testClassName, $message)
+    {

@@ @@
     }
-   /**
-    * @dataProvider getLoadClassFromFallbackTests
-    */
-   public function testLoadClassFromFallback($className, $testClassName, $message)
-   {
+    /**
+     * @dataProvider getLoadClassFromFallbackTests
+     */
+    public function testLoadClassFromFallback($className, $testClassName, $message)
+    {

@@ @@
     }
-   /**
-    * @dataProvider getLoadClassNamespaceCollisionTests
-    */
-   public function testLoadClassNamespaceCollision($namespaces, $className, $message)
-   {
+    /**
+     * @dataProvider getLoadClassNamespaceCollisionTests
+     */
+    public function testLoadClassNamespaceCollision($namespaces, $className, $message)
+    {

@@ @@
     }
-   /**
-    * @dataProvider getLoadClassPrefixCollisionTests
-    */
-   public function testLoadClassPrefixCollision($prefixes, $className, $message)
-   {
+    /**
+     * @dataProvider getLoadClassPrefixCollisionTests
+     */
+    public function testLoadClassPrefixCollision($prefixes, $className, $message)
+    {
        $loader = new ApcUniversalClassLoader('test.prefix.collision.');
        $loader->registerPrefixes($prefixes);
        $loader->loadClass($className);
        $this->assertTrue(class_exists($className), $message);
    }
     public function getLoadClassPrefixCollisionTests()
     {
         return array(
            array(
                array(
                    'ApcPrefixCollision_A_' => __DIR__.DIRECTORY_SEPARATOR.'Fixtures/Apc/alpha/Apc',
                    'ApcPrefixCollision_A_B_' => __DIR__.DIRECTORY_SEPARATOR.'Fixtures/Apc/beta/Apc',
                ),
                'ApcPrefixCollision_A_Foo',
                '->loadClass() loads ApcPrefixCollision_A_Foo from alpha.',
            ),
            array(
                array(
                    'ApcPrefixCollision_A_B_' => __DIR__.DIRECTORY_SEPARATOR.'Fixtures/Apc/beta/Apc',
                    'ApcPrefixCollision_A_' => __DIR__.DIRECTORY_SEPARATOR.'Fixtures/Apc/alpha/Apc',
                ),
                'ApcPrefixCollision_A_Bar',
                '->loadClass() loads ApcPrefixCollision_A_Bar from alpha.',
            ),
            array(
                array(
                    'ApcPrefixCollision_A_' => __DIR__.DIRECTORY_SEPARATOR.'Fixtures/Apc/alpha/Apc',
                    'ApcPrefixCollision_A_B_' => __DIR__.DIRECTORY_SEPARATOR.'Fixtures/Apc/beta/Apc',
                ),
                'ApcPrefixCollision_A_B_Foo',
                '->loadClass() loads ApcPrefixCollision_A_B_Foo from beta.',
            ),
            array(
                array(
                    'ApcPrefixCollision_A_B_' => __DIR__.DIRECTORY_SEPARATOR.'Fixtures/Apc/beta/Apc',
                    'ApcPrefixCollision_A_' => __DIR__.DIRECTORY_SEPARATOR.'Fixtures/Apc/alpha/Apc',
                ),
                'ApcPrefixCollision_A_B_Bar',
                '->loadClass() loads ApcPrefixCollision_A_B_Bar from beta.',
            ),
        );
     }
 }'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

61) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2490 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Component/ClassLoader/ClassMapGenerator.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 if (!defined('SYMFONY_TRAIT')) {
-    if (PHP_VERSION_ID >= 50400) {
-        define('SYMFONY_TRAIT', T_TRAIT);
-    } else {
-        define('SYMFONY_TRAIT', 0);
-    }
+if (PHP_VERSION_ID >= 50400) {
+define('SYMFONY_TRAIT', T_TRAIT);
+} else {
+define('SYMFONY_TRAIT', 0);
+}
 }
 /**
  * ClassMapGenerator.
  *
  * @author Gyula Sallai <salla016@gmail.com>
  */
 class ClassMapGenerator
 {
     /**
      * Generate a class map file.
      *
      * @param array|string $dirs Directories or a single path to search in
      * @param string       $file The name of the class map file
      */
     public static function dump($dirs, $file)
     {
         $dirs = (array) $dirs;
         $maps = array();
         foreach ($dirs as $dir) {
             $maps = array_merge($maps, static::createMap($dir));
         }
         file_put_contents($file, sprintf('<?php return %s;', var_export($maps, true)));
     }
     /**
      * Iterate over all files in the given directory searching for classes.
      *
      * @param \Iterator|string $dir The directory to search in or an iterator
      *
      * @return array A class map array
      */
     public static function createMap($dir)
     {
         if (is_string($dir)) {
             $dir = new \RecursiveIteratorIterator(new \RecursiveDirectoryIterator($dir));
         }
         $map = array();
         foreach ($dir as $file) {
             if (!$file->isFile()) {
                 continue;
             }
             $path = $file->getRealPath();
             if (pathinfo($path, PATHINFO_EXTENSION) !== 'php') {
                 continue;
             }
             $classes = self::findClasses($path);
             foreach ($classes as $class) {
                 $map[$class] = $path;
             }
         }
         return $map;
     }
     /**
      * Extract the classes in the given file.
      *
      * @param string $path The file to check
      *
      * @return array The found classes
      */
     private static function findClasses($path)
     {
         $contents = file_get_contents($path);
         $tokens = token_get_all($contents);
         $classes = array();
         $namespace = '';
         for ($i = 0, $max = count($tokens); $i < $max; ++$i) {
             $token = $tokens[$i];
             if (is_string($token)) {
                 continue;
             }
             $class = '';
             switch ($token[0]) {
                 case T_NAMESPACE:
                     $namespace = '';
                     // If there is a namespace, extract it
                     while (($t = $tokens[++$i]) && is_array($t)) {
                         if (in_array($t[0], array(T_STRING, T_NS_SEPARATOR))) {
                             $namespace .= $t[1];
                         }
                     }
                     $namespace .= '\\';
                     break;
                 case T_CLASS:
                 case T_INTERFACE:
                 case SYMFONY_TRAIT:
                     // Find the classname
                     while (($t = $tokens[++$i]) && is_array($t)) {
                         if (T_STRING === $t[0]) {
                             $class .= $t[1];
                         } elseif ($class !== '' && T_WHITESPACE == $t[0]) {
                             break;
                         }
                     }
                     $classes[] = ltrim($namespace.$class, '\\');
                     break;
                 default:
                     break;
             }
         }
         return $classes;
     }
 }'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

62) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2501 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Component/Translation/Tests/fixtures/resources.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 '<?php
 return array (
-  'foo' => 'bar',
+'foo' => 'bar',
 );'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

63) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2626 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Bundle/TwigBundle/Tests/DependencyInjection/Fixtures/php/legacy-merge-form-resources-with-form-themes.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 '<?php
 $container->loadFromExtension('twig', array(
-    'form' => array(
-        'resources' => array(
-            'form_table_layout.html.twig',
-            'MyBundle:Form:my_theme.html.twig',
-        ),
-    ),
-    'form_themes' => array(
-        'FooBundle:Form:bar.html.twig',
-    ),
+'form' => array(
+'resources' => array(
+'form_table_layout.html.twig',
+'MyBundle:Form:my_theme.html.twig',
+),
+),
+'form_themes' => array(
+'FooBundle:Form:bar.html.twig',
+),
 ));'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

64) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2628 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Bundle/TwigBundle/Tests/DependencyInjection/Fixtures/php/customTemplateEscapingGuesser.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 '<?php
 $container->loadFromExtension('twig', array(
-    'autoescape_service' => 'my_project.some_bundle.template_escaping_guesser',
-    'autoescape_service_method' => 'guess',
+'autoescape_service' => 'my_project.some_bundle.template_escaping_guesser',
+'autoescape_service_method' => 'guess',
 ));'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

65) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2629 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Bundle/TwigBundle/Tests/DependencyInjection/Fixtures/php/legacy-form-resources-only.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 '<?php
 $container->loadFromExtension('twig', array(
-    'form' => array(
-        'resources' => array(
-            'form_table_layout.html.twig',
-            'MyBundle:Form:my_theme.html.twig',
-        ),
-    ),
+'form' => array(
+'resources' => array(
+'form_table_layout.html.twig',
+'MyBundle:Form:my_theme.html.twig',
+),
+),
 ));'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

66) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2630 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Bundle/TwigBundle/Tests/DependencyInjection/Fixtures/php/full.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 '<?php
 $container->loadFromExtension('twig', array(
-    'form_themes' => array(
-        'MyBundle::form.html.twig',
-    ),
-    'globals' => array(
-        'foo' => '@bar',
-        'baz' => '@@qux',
-        'pi' => 3.14,
-        'bad' => array('key' => 'foo'),
-    ),
-    'auto_reload' => true,
-    'autoescape' => true,
-    'base_template_class' => 'stdClass',
-    'cache' => '/tmp',
-    'charset' => 'ISO-8859-1',
-    'debug' => true,
-    'strict_variables' => true,
-    'paths' => array(
-        'path1',
-        'path2',
-        'namespaced_path1' => 'namespace1',
-        'namespaced_path2' => 'namespace2',
-    ),
+'form_themes' => array(
+'MyBundle::form.html.twig',
+),
+'globals' => array(
+'foo' => '@bar',
+'baz' => '@@qux',
+'pi' => 3.14,
+'bad' => array('key' => 'foo'),
+),
+'auto_reload' => true,
+'autoescape' => true,
+'base_template_class' => 'stdClass',
+'cache' => '/tmp',
+'charset' => 'ISO-8859-1',
+'debug' => true,
+'strict_variables' => true,
+'paths' => array(
+'path1',
+'path2',
+'namespaced_path1' => 'namespace1',
+'namespaced_path2' => 'namespace2',
+),
 ));'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

67) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2631 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Bundle/TwigBundle/Tests/DependencyInjection/Fixtures/php/extra.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 '<?php
 $container->loadFromExtension('twig', array(
-     'paths' => array(
-         'namespaced_path3' => 'namespace3',
-      ),
+'paths' => array(
+'namespaced_path3' => 'namespace3',
+),
 ));'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

68) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2660 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/merge_import.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 '<?php
 $container->loadFromExtension('security', array(
-    'firewalls' => array(
-        'main' => array(
-            'form_login' => array(
-                'login_path' => '/login',
-            ),
-        ),
-    ),
-    'role_hierarchy' => array(
-        'FOO' => 'BAR',
-        'ADMIN' => 'USER',
-    ),
+'firewalls' => array(
+'main' => array(
+'form_login' => array(
+'login_path' => '/login',
+),
+),
+),
+'role_hierarchy' => array(
+'FOO' => 'BAR',
+'ADMIN' => 'USER',
+),
 ));'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

69) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2661 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/custom_acl_provider.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 '<?php
 $this->load('container1.php', $container);
 $container->loadFromExtension('security', array(
-    'acl' => array(
-        'provider' => 'foo',
-    ),
+'acl' => array(
+'provider' => 'foo',
+),
 ));'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

70) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2662 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/container1.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 '<?php
 $container->loadFromExtension('security', array(
-    'acl' => array(),
-    'encoders' => array(
-        'JMS\FooBundle\Entity\User1' => 'plaintext',
-        'JMS\FooBundle\Entity\User2' => array(
-            'algorithm' => 'sha1',
-            'encode_as_base64' => false,
-            'iterations' => 5,
-        ),
-        'JMS\FooBundle\Entity\User3' => array(
-            'algorithm' => 'md5',
-        ),
-        'JMS\FooBundle\Entity\User4' => array(
-            'id' => 'security.encoder.foo',
-        ),
-        'JMS\FooBundle\Entity\User5' => array(
-            'algorithm' => 'pbkdf2',
-            'hash_algorithm' => 'sha1',
-            'encode_as_base64' => false,
-            'iterations' => 5,
-            'key_length' => 30,
-        ),
-        'JMS\FooBundle\Entity\User6' => array(
-            'algorithm' => 'bcrypt',
-            'cost' => 15,
-        ),
-    ),
-    'providers' => array(
-        'default' => array(
-            'memory' => array(
-                'users' => array(
-                    'foo' => array('password' => 'foo', 'roles' => 'ROLE_USER'),
-                ),
-            ),
-        ),
-        'digest' => array(
-            'memory' => array(
-                'users' => array(
-                    'foo' => array('password' => 'foo', 'roles' => 'ROLE_USER, ROLE_ADMIN'),
-                ),
-            ),
-        ),
-        'basic' => array(
-            'memory' => array(
-                'users' => array(
-                    'foo' => array('password' => '0beec7b5ea3f0fdbc95d0dd47f3c5bc275da8a33', 'roles' => 'ROLE_SUPER_ADMIN'),
-                    'bar' => array('password' => '0beec7b5ea3f0fdbc95d0dd47f3c5bc275da8a33', 'roles' => array('ROLE_USER', 'ROLE_ADMIN')),
-                ),
-            ),
-        ),
-        'service' => array(
-            'id' => 'user.manager',
-        ),
-        'chain' => array(
-            'chain' => array(
-                'providers' => array('service', 'basic'),
-            ),
-        ),
-    ),
-    'firewalls' => array(
-        'simple' => array('pattern' => '/login', 'security' => false),
-        'secure' => array('stateless' => true,
-            'http_basic' => true,
-            'http_digest' => array('key' => 'TheKey'),
-            'form_login' => true,
-            'anonymous' => true,
-            'switch_user' => true,
-            'x509' => true,
-            'remote_user' => true,
-            'logout' => true,
-            'remember_me' => array('secret' => 'TheSecret'),
-        ),
-        'host' => array(
-            'pattern' => '/test',
-            'host' => 'foo\\.example\\.org',
-            'methods' => array('GET', 'POST'),
-            'anonymous' => true,
-            'http_basic' => true,
-        ),
-    ),
-    'access_control' => array(
-        array('path' => '/blog/524', 'role' => 'ROLE_USER', 'requires_channel' => 'https', 'methods' => array('get', 'POST')),
-        array('path' => '/blog/.*', 'role' => 'IS_AUTHENTICATED_ANONYMOUSLY'),
-        array('path' => '/blog/524', 'role' => 'IS_AUTHENTICATED_ANONYMOUSLY', 'allow_if' => "token.getUsername() matches '/^admin/'"),
-    ),
-    'role_hierarchy' => array(
-        'ROLE_ADMIN' => 'ROLE_USER',
-        'ROLE_SUPER_ADMIN' => array('ROLE_USER', 'ROLE_ADMIN', 'ROLE_ALLOWED_TO_SWITCH'),
-        'ROLE_REMOTE' => 'ROLE_USER,ROLE_ADMIN',
-    ),
+'acl' => array(),
+'encoders' => array(
+'JMS\FooBundle\Entity\User1' => 'plaintext',
+'JMS\FooBundle\Entity\User2' => array(
+'algorithm' => 'sha1',
+'encode_as_base64' => false,
+'iterations' => 5,
+),
+'JMS\FooBundle\Entity\User3' => array(
+'algorithm' => 'md5',
+),
+'JMS\FooBundle\Entity\User4' => array(
+'id' => 'security.encoder.foo',
+),
+'JMS\FooBundle\Entity\User5' => array(
+'algorithm' => 'pbkdf2',
+'hash_algorithm' => 'sha1',
+'encode_as_base64' => false,
+'iterations' => 5,
+'key_length' => 30,
+),
+'JMS\FooBundle\Entity\User6' => array(
+'algorithm' => 'bcrypt',
+'cost' => 15,
+),
+),
+'providers' => array(
+'default' => array(
+'memory' => array(
+'users' => array(
+'foo' => array('password' => 'foo', 'roles' => 'ROLE_USER'),
+),
+),
+),
+'digest' => array(
+'memory' => array(
+'users' => array(
+'foo' => array('password' => 'foo', 'roles' => 'ROLE_USER, ROLE_ADMIN'),
+),
+),
+),
+'basic' => array(
+'memory' => array(
+'users' => array(
+'foo' => array('password' => '0beec7b5ea3f0fdbc95d0dd47f3c5bc275da8a33', 'roles' => 'ROLE_SUPER_ADMIN'),
+'bar' => array('password' => '0beec7b5ea3f0fdbc95d0dd47f3c5bc275da8a33', 'roles' => array('ROLE_USER', 'ROLE_ADMIN')),
+),
+),
+),
+'service' => array(
+'id' => 'user.manager',
+),
+'chain' => array(
+'chain' => array(
+'providers' => array('service', 'basic'),
+),
+),
+),
+'firewalls' => array(
+'simple' => array('pattern' => '/login', 'security' => false),
+'secure' => array('stateless' => true,
+'http_basic' => true,
+'http_digest' => array('key' => 'TheKey'),
+'form_login' => true,
+'anonymous' => true,
+'switch_user' => true,
+'x509' => true,
+'remote_user' => true,
+'logout' => true,
+'remember_me' => array('secret' => 'TheSecret'),
+),
+'host' => array(
+'pattern' => '/test',
+'host' => 'foo\\.example\\.org',
+'methods' => array('GET', 'POST'),
+'anonymous' => true,
+'http_basic' => true,
+),
+),
+'access_control' => array(
+array('path' => '/blog/524', 'role' => 'ROLE_USER', 'requires_channel' => 'https', 'methods' => array('get', 'POST')),
+array('path' => '/blog/.*', 'role' => 'IS_AUTHENTICATED_ANONYMOUSLY'),
+array('path' => '/blog/524', 'role' => 'IS_AUTHENTICATED_ANONYMOUSLY', 'allow_if' => "token.getUsername() matches '/^admin/'"),
+),
+'role_hierarchy' => array(
+'ROLE_ADMIN' => 'ROLE_USER',
+'ROLE_SUPER_ADMIN' => array('ROLE_USER', 'ROLE_ADMIN', 'ROLE_ALLOWED_TO_SWITCH'),
+'ROLE_REMOTE' => 'ROLE_USER,ROLE_ADMIN',
+),
 ));'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

71) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2663 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/merge.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 '<?php
 $this->load('merge_import.php', $container);
 $container->loadFromExtension('security', array(
-    'providers' => array(
-        'default' => array('id' => 'foo'),
-    ),
-    'firewalls' => array(
-        'main' => array(
-            'form_login' => false,
-            'http_basic' => null,
-        ),
-    ),
-    'role_hierarchy' => array(
-        'FOO' => array('MOO'),
-    ),
+'providers' => array(
+'default' => array('id' => 'foo'),
+),
+'firewalls' => array(
+'main' => array(
+'form_login' => false,
+'http_basic' => null,
+),
+),
+'role_hierarchy' => array(
+'FOO' => array('MOO'),
+),
 ));'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

72) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2664 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Bundle/SecurityBundle/Tests/DependencyInjection/Fixtures/php/remember_me_options.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 '<?php
 $container->loadFromExtension('security', array(
-    'providers' => array(
-        'default' => array('id' => 'foo'),
-    ),
-    'firewalls' => array(
-        'main' => array(
-            'form_login' => true,
-            'remember_me' => array(
-                'secret' => 'TheSecret',
-                'catch_exceptions' => false,
-                'token_provider' => 'token_provider_id',
-            ),
-        ),
-    ),
+'providers' => array(
+'default' => array('id' => 'foo'),
+),
+'firewalls' => array(
+'main' => array(
+'form_login' => true,
+'remember_me' => array(
+'secret' => 'TheSecret',
+'catch_exceptions' => false,
+'token_provider' => 'token_provider_id',
+),
+),
+),
 ));'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

73) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2674 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Bundle/SecurityBundle/Tests/Functional/SecurityRoutingIntegrationTest.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
     }
-   /**
-    * @dataProvider getConfigs
-    */
-   public function testSecurityConfigurationForExpression($config)
-   {
+    /**
+     * @dataProvider getConfigs
+     */
+    public function testSecurityConfigurationForExpression($config)
+    {
        $allowedClient = $this->createClient(array('test_case' => 'StandardFormLogin', 'root_config' => $config), array('HTTP_USER_AGENT' => 'Firefox 1.0'));
        $this->assertAllowed($allowedClient, '/protected-via-expression');
        $barredClient = $this->createClient(array('test_case' => 'StandardFormLogin', 'root_config' => $config), array());
        $this->assertRestricted($barredClient, '/protected-via-expression');
        $allowedClient = $this->createClient(array('test_case' => 'StandardFormLogin', 'root_config' => $config), array());
        $allowedClient->request('GET', '/protected-via-expression');
        $form = $allowedClient->followRedirect()->selectButton('login')->form();
        $form['_username'] = 'johannes';
        $form['_password'] = 'test';
        $allowedClient->submit($form);
        $this->assertRedirect($allowedClient->getResponse(), '/protected-via-expression');
        $this->assertAllowed($allowedClient, '/protected-via-expression');
    }
     private function assertAllowed($client, $path)
     {
         $client->request('GET', $path);
         $this->assertEquals(404, $client->getResponse()->getStatusCode());
     }
     private function assertRestricted($client, $path)
     {
         $client->request('GET', $path);
         $this->assertEquals(302, $client->getResponse()->getStatusCode());
     }
     public function getConfigs()
     {
         return array(array('config.yml'), array('routes_as_path.yml'));
     }
     protected function setUp()
     {
         parent::setUp();
         $this->deleteTmpDir('StandardFormLogin');
     }
     protected function tearDown()
     {
         parent::tearDown();
         $this->deleteTmpDir('StandardFormLogin');
     }
 }'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

74) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2676 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Bundle/SecurityBundle/Tests/Functional/app/PasswordEncode/bundles.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 '<?php
 return array(
-    new Symfony\Bundle\SecurityBundle\SecurityBundle(),
-    new Symfony\Bundle\FrameworkBundle\FrameworkBundle(),
+new Symfony\Bundle\SecurityBundle\SecurityBundle(),
+new Symfony\Bundle\FrameworkBundle\FrameworkBundle(),
 );'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

75) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2677 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Bundle/SecurityBundle/Tests/Functional/app/FirewallEntryPoint/bundles.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 '<?php
 return array(
-    new Symfony\Bundle\FrameworkBundle\FrameworkBundle(),
-    new Symfony\Bundle\SecurityBundle\SecurityBundle(),
-    new Symfony\Bundle\SecurityBundle\Tests\Functional\Bundle\FirewallEntryPointBundle\FirewallEntryPointBundle(),
+new Symfony\Bundle\FrameworkBundle\FrameworkBundle(),
+new Symfony\Bundle\SecurityBundle\SecurityBundle(),
+new Symfony\Bundle\SecurityBundle\Tests\Functional\Bundle\FirewallEntryPointBundle\FirewallEntryPointBundle(),
 );'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

76) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2678 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Bundle/SecurityBundle/Tests/Functional/app/CsrfFormLogin/bundles.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 '<?php
 return array(
-    new Symfony\Bundle\FrameworkBundle\FrameworkBundle(),
-    new Symfony\Bundle\SecurityBundle\SecurityBundle(),
-    new Symfony\Bundle\TwigBundle\TwigBundle(),
-    new Symfony\Bundle\SecurityBundle\Tests\Functional\Bundle\CsrfFormLoginBundle\CsrfFormLoginBundle(),
+new Symfony\Bundle\FrameworkBundle\FrameworkBundle(),
+new Symfony\Bundle\SecurityBundle\SecurityBundle(),
+new Symfony\Bundle\TwigBundle\TwigBundle(),
+new Symfony\Bundle\SecurityBundle\Tests\Functional\Bundle\CsrfFormLoginBundle\CsrfFormLoginBundle(),
 );'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

77) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2679 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Bundle/SecurityBundle/Tests/Functional/app/Acl/bundles.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 '<?php
 return array(
-    new Doctrine\Bundle\DoctrineBundle\DoctrineBundle(),
-    new Symfony\Bundle\SecurityBundle\SecurityBundle(),
-    new Symfony\Bundle\FrameworkBundle\FrameworkBundle(),
-    new Symfony\Bundle\SecurityBundle\Tests\Functional\Bundle\AclBundle\AclBundle(),
+new Doctrine\Bundle\DoctrineBundle\DoctrineBundle(),
+new Symfony\Bundle\SecurityBundle\SecurityBundle(),
+new Symfony\Bundle\FrameworkBundle\FrameworkBundle(),
+new Symfony\Bundle\SecurityBundle\Tests\Functional\Bundle\AclBundle\AclBundle(),
 );'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

78) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2680 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Bundle/SecurityBundle/Tests/Functional/app/AppKernel.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 while ($dir !== $lastDir) {
-    $lastDir = $dir;
-    if (is_file($dir.'/autoload.php')) {
-        require_once $dir.'/autoload.php';
-        break;
-    }
-    if (is_file($dir.'/autoload.php.dist')) {
-        require_once $dir.'/autoload.php.dist';
-        break;
-    }
-    if (file_exists($dir.'/vendor/autoload.php')) {
-        require_once $dir.'/vendor/autoload.php';
-        break;
-    }
-    $dir = dirname($dir);
+$lastDir = $dir;
+if (is_file($dir.'/autoload.php')) {
+require_once $dir.'/autoload.php';
+break;
+}
+if (is_file($dir.'/autoload.php.dist')) {
+require_once $dir.'/autoload.php.dist';
+break;
+}
+if (file_exists($dir.'/vendor/autoload.php')) {
+require_once $dir.'/vendor/autoload.php';
+break;
+}
+$dir = dirname($dir);
 }
 use Symfony\Component\Config\Loader\LoaderInterface;
 use Symfony\Component\Filesystem\Filesystem;
 use Symfony\Component\HttpKernel\Kernel;
 /**
  * App Test Kernel for functional tests.
  *
  * @author Johannes M. Schmitt <schmittjoh@gmail.com>
  */
 class AppKernel extends Kernel
 {
     private $testCase;
     private $rootConfig;
     public function __construct($testCase, $rootConfig, $environment, $debug)
     {
         if (!is_dir(__DIR__.'/'.$testCase)) {
             throw new \InvalidArgumentException(sprintf('The test case "%s" does not exist.', $testCase));
         }
         $this->testCase = $testCase;
         $fs = new Filesystem();
         if (!$fs->isAbsolutePath($rootConfig) && !is_file($rootConfig = __DIR__.'/'.$testCase.'/'.$rootConfig)) {
             throw new \InvalidArgumentException(sprintf('The root config "%s" does not exist.', $rootConfig));
         }
         $this->rootConfig = $rootConfig;
         parent::__construct($environment, $debug);
     }
     public function registerBundles()
     {
         if (!is_file($filename = $this->getRootDir().'/'.$this->testCase.'/bundles.php')) {
             throw new \RuntimeException(sprintf('The bundles file "%s" does not exist.', $filename));
         }
         return include $filename;
     }
     public function getRootDir()
     {
         return __DIR__;
     }
     public function getCacheDir()
     {
         return sys_get_temp_dir().'/'.Kernel::VERSION.'/'.$this->testCase.'/cache/'.$this->environment;
     }
     public function getLogDir()
     {
         return sys_get_temp_dir().'/'.Kernel::VERSION.'/'.$this->testCase.'/logs';
     }
     public function registerContainerConfiguration(LoaderInterface $loader)
     {
         $loader->load($this->rootConfig);
     }
     public function serialize()
     {
         return serialize(array($this->testCase, $this->rootConfig, $this->getEnvironment(), $this->isDebug()));
     }
     public function unserialize($str)
     {
         $a = unserialize($str);
         $this->__construct($a[0], $a[1], $a[2], $a[3]);
     }
     protected function getKernelParameters()
     {
         $parameters = parent::getKernelParameters();
         $parameters['kernel.test_case'] = $this->testCase;
         return $parameters;
     }
 }'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

79) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2681 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Bundle/SecurityBundle/Tests/Functional/app/StandardFormLogin/bundles.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 return array(
-    new FrameworkBundle(),
-    new SecurityBundle(),
-    new TwigBundle(),
-    new FormLoginBundle(),
+new FrameworkBundle(),
+new SecurityBundle(),
+new TwigBundle(),
+new FormLoginBundle(),
 );'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

80) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2755 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Bundle/FrameworkBundle/Tests/DependencyInjection/Fixtures/php/property_accessor.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 '<?php
 $container->loadFromExtension('framework', array(
-    'property_access' => array(
-        'magic_call' => true,
-        'throw_exception_on_invalid_index' => true,
-    ),
+'property_access' => array(
+'magic_call' => true,
+'throw_exception_on_invalid_index' => true,
+),
 ));'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

81) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2756 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Bundle/FrameworkBundle/Tests/DependencyInjection/Fixtures/php/session.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 '<?php
 $container->loadFromExtension('framework', array(
-    'session' => array(
-        'handler_id' => null,
-    ),
+'session' => array(
+'handler_id' => null,
+),
 ));'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

82) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2757 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Bundle/FrameworkBundle/Tests/DependencyInjection/Fixtures/php/form_csrf_sets_field_name.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 '<?php
 $container->loadFromExtension('framework', array(
-    'csrf_protection' => array(
-        'enabled' => true,
-        'field_name' => '_custom',
-    ),
-    'form' => array(
-        'enabled' => true,
-    ),
-    'session' => array(
-        'handler_id' => null,
-    ),
+'csrf_protection' => array(
+'enabled' => true,
+'field_name' => '_custom',
+),
+'form' => array(
+'enabled' => true,
+),
+'session' => array(
+'handler_id' => null,
+),
 ));'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

83) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2758 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Bundle/FrameworkBundle/Tests/DependencyInjection/Fixtures/php/translator_fallbacks.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 '<?php
 $container->loadFromExtension('framework', array(
-    'translator' => array(
-        'fallbacks' => array('en', 'fr'),
-    ),
+'translator' => array(
+'fallbacks' => array('en', 'fr'),
+),
 ));'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

84) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2759 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Bundle/FrameworkBundle/Tests/DependencyInjection/Fixtures/php/request.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 '<?php
 $container->loadFromExtension('framework', array(
-    'request' => array(
-        'formats' => array(),
-    ),
+'request' => array(
+'formats' => array(),
+),
 ));'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

85) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2760 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Bundle/FrameworkBundle/Tests/DependencyInjection/Fixtures/php/validation_no_static_method.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 '<?php
 $container->loadFromExtension('framework', array(
-    'secret' => 's3cr3t',
-    'validation' => array(
-        'enabled' => true,
-        'static_method' => false,
-    ),
+'secret' => 's3cr3t',
+'validation' => array(
+'enabled' => true,
+'static_method' => false,
+),
 ));'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

86) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2761 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Bundle/FrameworkBundle/Tests/DependencyInjection/Fixtures/php/legacy_templating_url_package.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 '<?php
 $container->loadFromExtension('framework', array(
-    'secret' => 's3cr3t',
-    'templating' => array(
-        'assets_base_urls' => 'https://cdn.example.com',
-        'engines' => array('php', 'twig'),
-        'packages' => array(
-            'images' => array(
-                'base_urls' => 'https://images.example.com',
-            ),
-        ),
-    ),
+'secret' => 's3cr3t',
+'templating' => array(
+'assets_base_urls' => 'https://cdn.example.com',
+'engines' => array('php', 'twig'),
+'packages' => array(
+'images' => array(
+'base_urls' => 'https://images.example.com',
+),
+),
+),
 ));'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

87) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2762 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Bundle/FrameworkBundle/Tests/DependencyInjection/Fixtures/php/validation_multiple_static_methods.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 '<?php
 $container->loadFromExtension('framework', array(
-    'secret' => 's3cr3t',
-    'validation' => array(
-        'enabled' => true,
-        'static_method' => array('loadFoo', 'loadBar'),
-    ),
+'secret' => 's3cr3t',
+'validation' => array(
+'enabled' => true,
+'static_method' => array('loadFoo', 'loadBar'),
+),
 ));'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

88) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2763 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Bundle/FrameworkBundle/Tests/DependencyInjection/Fixtures/php/profiler.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 '<?php
 $container->loadFromExtension('framework', array(
-    'profiler' => array(
-        'enabled' => true,
-    ),
+'profiler' => array(
+'enabled' => true,
+),
 ));'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

89) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2764 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Bundle/FrameworkBundle/Tests/DependencyInjection/Fixtures/php/assets_disabled.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 '<?php
 $container->loadFromExtension('framework', array(
-    'templating' => array(
-        'engines' => array('php', 'twig'),
-    ),
+'templating' => array(
+'engines' => array('php', 'twig'),
+),
 ));'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

90) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2765 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Bundle/FrameworkBundle/Tests/DependencyInjection/Fixtures/php/assets.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 '<?php
 $container->loadFromExtension('framework', array(
-    'assets' => array(
-        'version' => 'SomeVersionScheme',
-        'base_urls' => 'http://cdn.example.com',
-        'version_format' => '%%s?version=%%s',
-        'packages' => array(
-            'images_path' => array(
-                'base_path' => '/foo',
-            ),
-            'images' => array(
-                'version' => '1.0.0',
-                'base_urls' => array('http://images1.example.com', 'http://images2.example.com'),
-            ),
-            'foo' => array(
-                'version' => '1.0.0',
-                'version_format' => '%%s-%%s',
-            ),
-            'bar' => array(
-                'base_urls' => array('https://bar2.example.com'),
-            ),
-        ),
-    ),
+'assets' => array(
+'version' => 'SomeVersionScheme',
+'base_urls' => 'http://cdn.example.com',
+'version_format' => '%%s?version=%%s',
+'packages' => array(
+'images_path' => array(
+'base_path' => '/foo',
+),
+'images' => array(
+'version' => '1.0.0',
+'base_urls' => array('http://images1.example.com', 'http://images2.example.com'),
+),
+'foo' => array(
+'version' => '1.0.0',
+'version_format' => '%%s-%%s',
+),
+'bar' => array(
+'base_urls' => array('https://bar2.example.com'),
+),
+),
+),
 ));'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

91) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2766 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Bundle/FrameworkBundle/Tests/DependencyInjection/Fixtures/php/csrf_needs_session.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 '<?php
 $container->loadFromExtension('framework', array(
-    'csrf_protection' => array(
-        'enabled' => true,
-    ),
+'csrf_protection' => array(
+'enabled' => true,
+),
 ));'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

92) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2767 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Bundle/FrameworkBundle/Tests/DependencyInjection/Fixtures/php/csrf.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 '<?php
 $container->loadFromExtension('framework', array(
-    'csrf_protection' => true,
-    'form' => array(
-        'enabled' => true,
-        'csrf_protection' => true,
-    ),
-    'session' => array(
-        'handler_id' => null,
-    ),
+'csrf_protection' => true,
+'form' => array(
+'enabled' => true,
+'csrf_protection' => true,
+),
+'session' => array(
+'handler_id' => null,
+),
 ));'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

93) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2768 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Bundle/FrameworkBundle/Tests/DependencyInjection/Fixtures/php/form_no_csrf.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 '<?php
 $container->loadFromExtension('framework', array(
-    'form' => array(
-        'enabled' => true,
-        'csrf_protection' => false,
-    ),
+'form' => array(
+'enabled' => true,
+'csrf_protection' => false,
+),
 ));'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

94) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2769 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Bundle/FrameworkBundle/Tests/DependencyInjection/Fixtures/php/full.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 '<?php
 $container->loadFromExtension('framework', array(
-    'secret' => 's3cr3t',
-    'default_locale' => 'fr',
-    'form' => array(
-        'csrf_protection' => array(
-            'field_name' => '_csrf',
-        ),
-    ),
-    'http_method_override' => false,
-    'trusted_proxies' => array('127.0.0.1', '10.0.0.1'),
-    'csrf_protection' => array(
-        'enabled' => true,
-    ),
-    'esi' => array(
-        'enabled' => true,
-    ),
-    'profiler' => array(
-        'only_exceptions' => true,
-        'enabled' => false,
-    ),
-    'router' => array(
-        'resource' => '%kernel.root_dir%/config/routing.xml',
-        'type' => 'xml',
-    ),
-    'session' => array(
-        'storage_id' => 'session.storage.native',
-        'handler_id' => 'session.handler.native_file',
-        'name' => '_SYMFONY',
-        'cookie_lifetime' => 86400,
-        'cookie_path' => '/',
-        'cookie_domain' => 'example.com',
-        'cookie_secure' => true,
-        'cookie_httponly' => true,
-        'gc_maxlifetime' => 90000,
-        'gc_divisor' => 108,
-        'gc_probability' => 1,
-        'save_path' => '/path/to/sessions',
-    ),
-    'templating' => array(
-        'cache' => '/path/to/cache',
-        'engines' => array('php', 'twig'),
-        'loader' => array('loader.foo', 'loader.bar'),
-        'form' => array(
-            'resources' => array('theme1', 'theme2'),
-        ),
-        'hinclude_default_template' => 'global_hinclude_template',
-    ),
-    'translator' => array(
-        'enabled' => true,
-        'fallback' => 'fr',
-        'paths' => array('%kernel.root_dir%/Fixtures/translations'),
-    ),
-    'validation' => array(
-        'enabled' => true,
-        'cache' => 'apc',
-    ),
-    'annotations' => array(
-        'cache' => 'file',
-        'debug' => true,
-        'file_cache_dir' => '%kernel.cache_dir%/annotations',
-    ),
-    'serializer' => array('enabled' => true),
-    'ide' => 'file%%link%%format',
-    'request' => array(
-        'formats' => array(
-            'csv' => array(
-                'text/csv',
-                'text/plain',
-            ),
-            'pdf' => 'application/pdf',
-        ),
-    ),
+'secret' => 's3cr3t',
+'default_locale' => 'fr',
+'form' => array(
+'csrf_protection' => array(
+'field_name' => '_csrf',
+),
+),
+'http_method_override' => false,
+'trusted_proxies' => array('127.0.0.1', '10.0.0.1'),
+'csrf_protection' => array(
+'enabled' => true,
+),
+'esi' => array(
+'enabled' => true,
+),
+'profiler' => array(
+'only_exceptions' => true,
+'enabled' => false,
+),
+'router' => array(
+'resource' => '%kernel.root_dir%/config/routing.xml',
+'type' => 'xml',
+),
+'session' => array(
+'storage_id' => 'session.storage.native',
+'handler_id' => 'session.handler.native_file',
+'name' => '_SYMFONY',
+'cookie_lifetime' => 86400,
+'cookie_path' => '/',
+'cookie_domain' => 'example.com',
+'cookie_secure' => true,
+'cookie_httponly' => true,
+'gc_maxlifetime' => 90000,
+'gc_divisor' => 108,
+'gc_probability' => 1,
+'save_path' => '/path/to/sessions',
+),
+'templating' => array(
+'cache' => '/path/to/cache',
+'engines' => array('php', 'twig'),
+'loader' => array('loader.foo', 'loader.bar'),
+'form' => array(
+'resources' => array('theme1', 'theme2'),
+),
+'hinclude_default_template' => 'global_hinclude_template',
+),
+'translator' => array(
+'enabled' => true,
+'fallback' => 'fr',
+'paths' => array('%kernel.root_dir%/Fixtures/translations'),
+),
+'validation' => array(
+'enabled' => true,
+'cache' => 'apc',
+),
+'annotations' => array(
+'cache' => 'file',
+'debug' => true,
+'file_cache_dir' => '%kernel.cache_dir%/annotations',
+),
+'serializer' => array('enabled' => true),
+'ide' => 'file%%link%%format',
+'request' => array(
+'formats' => array(
+'csv' => array(
+'text/csv',
+'text/plain',
+),
+'pdf' => 'application/pdf',
+),
+),
 ));'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

95) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2771 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Bundle/FrameworkBundle/Tests/DependencyInjection/Fixtures/php/csrf_disabled.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 '<?php
 $container->loadFromExtension('framework', array(
-    'csrf_protection' => array(
-        'enabled' => false,
-    ),
+'csrf_protection' => array(
+'enabled' => false,
+),
 ));'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

96) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2772 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Bundle/FrameworkBundle/Tests/DependencyInjection/Fixtures/php/validation_annotations.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 '<?php
 $container->loadFromExtension('framework', array(
-    'secret' => 's3cr3t',
-    'validation' => array(
-        'enabled' => true,
-        'enable_annotations' => true,
-    ),
+'secret' => 's3cr3t',
+'validation' => array(
+'enabled' => true,
+'enable_annotations' => true,
+),
 ));'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

97) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2773 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Bundle/FrameworkBundle/Tests/DependencyInjection/Fixtures/php/form_csrf_under_form_sets_field_name.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 '<?php
 $container->loadFromExtension('framework', array(
-    'csrf_protection' => array(
-        'enabled' => true,
-        'field_name' => '_custom',
-    ),
-    'form' => array(
-        'enabled' => true,
-        'csrf_protection' => array(
-            'field_name' => '_custom_form',
-        ),
-    ),
-    'session' => array(
-        'handler_id' => null,
-    ),
+'csrf_protection' => array(
+'enabled' => true,
+'field_name' => '_custom',
+),
+'form' => array(
+'enabled' => true,
+'csrf_protection' => array(
+'field_name' => '_custom_form',
+),
+),
+'session' => array(
+'handler_id' => null,
+),
 ));'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

98) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2774 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Bundle/FrameworkBundle/Tests/DependencyInjection/Fixtures/php/legacy_templating_assets.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 '<?php
 $container->loadFromExtension('framework', array(
-    'templating' => array(
-        'engines' => array('php'),
-        'assets_version' => 'SomeVersionScheme',
-        'assets_base_urls' => 'http://cdn.example.com',
-        'assets_version_format' => '%%s?version=%%s',
-        'packages' => array(
-            'images' => array(
-                'version' => '1.0.0',
-                'base_urls' => array('http://images1.example.com', 'http://images2.example.com'),
-            ),
-            'foo' => array(
-                'version' => '1.0.0',
-                'version_format' => '%%s-%%s',
-            ),
-            'bar' => array(
-                'base_urls' => array('https://bar2.example.com'),
-            ),
-        ),
-    ),
+'templating' => array(
+'engines' => array('php'),
+'assets_version' => 'SomeVersionScheme',
+'assets_base_urls' => 'http://cdn.example.com',
+'assets_version_format' => '%%s?version=%%s',
+'packages' => array(
+'images' => array(
+'version' => '1.0.0',
+'base_urls' => array('http://images1.example.com', 'http://images2.example.com'),
+),
+'foo' => array(
+'version' => '1.0.0',
+'version_format' => '%%s-%%s',
+),
+'bar' => array(
+'base_urls' => array('https://bar2.example.com'),
+),
+),
+),
 ));'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

99) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2803 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Bundle/FrameworkBundle/Tests/Templating/Helper/Resources/Parent/form_widget_simple.html.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'<?php $type = isset($type) ? $type : 'text' ?>
+'<?php
+$type = isset($type) ? $type : 'text' ?>
 <input type="<?php echo $type ?>" <?php $view['form']->block($form, 'widget_attributes') ?> value="<?php echo $value ?>" rel="theme" />'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

100) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2806 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Bundle/FrameworkBundle/Tests/Templating/Helper/Resources/Custom/_names_entry_label.html.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'<?php if (!$label) {
-    $label = $view['form']->humanize($name);
+'<?php
+if (!$label) {
+$label = $view['form']->humanize($name);
 } ?>
 <label>Custom label: <?php echo $view->escape($view['translator']->trans($label, array(), $translation_domain)) ?></label>'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

101) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2807 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Bundle/FrameworkBundle/Tests/Templating/Helper/Resources/Custom/_name_c_entry_label.html.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'<?php if (!$label) { $label = $view['form']->humanize($name); } ?>
+'<?php
+if (!$label) { $label = $view['form']->humanize($name); } ?>
 <label>Custom name label: <?php echo $view->escape($view['translator']->trans($label, array(), $translation_domain)) ?></label>'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

102) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2834 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Bundle/FrameworkBundle/Tests/Functional/app/Fragment/bundles.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 '<?php
 use Symfony\Bundle\FrameworkBundle\Tests\Functional\Bundle\TestBundle\TestBundle;
 use Symfony\Bundle\FrameworkBundle\FrameworkBundle;
 return array(
-    new FrameworkBundle(),
-    new TestBundle(),
+new FrameworkBundle(),
+new TestBundle(),
 );'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

103) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2835 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Bundle/FrameworkBundle/Tests/Functional/app/Resources/fragment.html.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'<?php echo $this->get('actions')->render($this->get('actions')->controller('TestBundle:Fragment:inlined', array(
-            'options' => array(
-                'bar' => $bar,
-                'eleven' => 11,
-            ),
-        )));
+'<?php
+echo $this->get('actions')->render($this->get('actions')->controller('TestBundle:Fragment:inlined', array(
+'options' => array(
+'bar' => $bar,
+'eleven' => 11,
+),
+)));
 ?>--<?php
-        echo $this->get('actions')->render($this->get('actions')->controller('TestBundle:Fragment:customformat', array('_format' => 'html')));
+echo $this->get('actions')->render($this->get('actions')->controller('TestBundle:Fragment:customformat', array('_format' => 'html')));
 ?>--<?php
-        echo $this->get('actions')->render($this->get('actions')->controller('TestBundle:Fragment:customlocale', array('_locale' => 'es')));
+echo $this->get('actions')->render($this->get('actions')->controller('TestBundle:Fragment:customlocale', array('_locale' => 'es')));
 ?>--<?php
-        $app->getRequest()->setLocale('fr');
-        echo $this->get('actions')->render($this->get('actions')->controller('TestBundle:Fragment:forwardlocale'));
+$app->getRequest()->setLocale('fr');
+echo $this->get('actions')->render($this->get('actions')->controller('TestBundle:Fragment:forwardlocale'));
 ?>'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

104) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2836 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Bundle/FrameworkBundle/Tests/Functional/app/Profiler/bundles.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 '<?php
 use Symfony\Bundle\FrameworkBundle\Tests\Functional\Bundle\TestBundle\TestBundle;
 use Symfony\Bundle\FrameworkBundle\FrameworkBundle;
 return array(
-    new FrameworkBundle(),
-    new TestBundle(),
+new FrameworkBundle(),
+new TestBundle(),
 );'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

105) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2837 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Bundle/FrameworkBundle/Tests/Functional/app/ConfigDump/bundles.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 '<?php
 use Symfony\Bundle\FrameworkBundle\Tests\Functional\Bundle\TestBundle\TestBundle;
 use Symfony\Bundle\FrameworkBundle\FrameworkBundle;
 return array(
-    new FrameworkBundle(),
-    new TestBundle(),
+new FrameworkBundle(),
+new TestBundle(),
 );'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

106) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2838 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Bundle/FrameworkBundle/Tests/Functional/app/Session/bundles.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 '<?php
 use Symfony\Bundle\FrameworkBundle\Tests\Functional\Bundle\TestBundle\TestBundle;
 use Symfony\Bundle\FrameworkBundle\FrameworkBundle;
 return array(
-    new FrameworkBundle(),
-    new TestBundle(),
+new FrameworkBundle(),
+new TestBundle(),
 );'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

107) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2839 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Bundle/FrameworkBundle/Tests/Functional/app/AppKernel.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 while ($dir !== $lastDir) {
-    $lastDir = $dir;
-    if (file_exists($dir.'/autoload.php')) {
-        require_once $dir.'/autoload.php';
-        break;
-    }
-    if (file_exists($dir.'/autoload.php.dist')) {
-        require_once $dir.'/autoload.php.dist';
-        break;
-    }
-    if (file_exists($dir.'/vendor/autoload.php')) {
-        require_once $dir.'/vendor/autoload.php';
-        break;
-    }
-    $dir = dirname($dir);
+$lastDir = $dir;
+if (file_exists($dir.'/autoload.php')) {
+require_once $dir.'/autoload.php';
+break;
+}
+if (file_exists($dir.'/autoload.php.dist')) {
+require_once $dir.'/autoload.php.dist';
+break;
+}
+if (file_exists($dir.'/vendor/autoload.php')) {
+require_once $dir.'/vendor/autoload.php';
+break;
+}
+$dir = dirname($dir);
 }
 use Symfony\Component\Config\Loader\LoaderInterface;
 use Symfony\Component\Filesystem\Filesystem;
 use Symfony\Component\HttpKernel\Kernel;
 /**
  * App Test Kernel for functional tests.
  *
  * @author Johannes M. Schmitt <schmittjoh@gmail.com>
  */
 class AppKernel extends Kernel
 {
     private $testCase;
     private $rootConfig;
     public function __construct($testCase, $rootConfig, $environment, $debug)
     {
         if (!is_dir(__DIR__.'/'.$testCase)) {
             throw new \InvalidArgumentException(sprintf('The test case "%s" does not exist.', $testCase));
         }
         $this->testCase = $testCase;
         $fs = new Filesystem();
         if (!$fs->isAbsolutePath($rootConfig) && !file_exists($rootConfig = __DIR__.'/'.$testCase.'/'.$rootConfig)) {
             throw new \InvalidArgumentException(sprintf('The root config "%s" does not exist.', $rootConfig));
         }
         $this->rootConfig = $rootConfig;
         parent::__construct($environment, $debug);
     }
     public function registerBundles()
     {
         if (!file_exists($filename = $this->getRootDir().'/'.$this->testCase.'/bundles.php')) {
             throw new \RuntimeException(sprintf('The bundles file "%s" does not exist.', $filename));
         }
         return include $filename;
     }
     public function getRootDir()
     {
         return __DIR__;
     }
     public function getCacheDir()
     {
         return sys_get_temp_dir().'/'.Kernel::VERSION.'/'.$this->testCase.'/cache/'.$this->environment;
     }
     public function getLogDir()
     {
         return sys_get_temp_dir().'/'.Kernel::VERSION.'/'.$this->testCase.'/logs';
     }
     public function registerContainerConfiguration(LoaderInterface $loader)
     {
         $loader->load($this->rootConfig);
     }
     public function serialize()
     {
         return serialize(array($this->testCase, $this->rootConfig, $this->getEnvironment(), $this->isDebug()));
     }
     public function unserialize($str)
     {
         $a = unserialize($str);
         $this->__construct($a[0], $a[1], $a[2], $a[3]);
     }
     protected function getKernelParameters()
     {
         $parameters = parent::getKernelParameters();
         $parameters['kernel.test_case'] = $this->testCase;
         return $parameters;
     }
 }'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

108) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2881 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Bundle/FrameworkBundle/Resources/config/router_test.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 if (is_file($_SERVER['DOCUMENT_ROOT'].DIRECTORY_SEPARATOR.$_SERVER['SCRIPT_NAME'])) {
-    return false;
+return false;
 }
 $_SERVER = array_merge($_SERVER, $_ENV);
 $_SERVER['SCRIPT_FILENAME'] = $_SERVER['DOCUMENT_ROOT'].DIRECTORY_SEPARATOR.'app_test.php';
 require 'app_test.php';'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

109) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2882 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Bundle/FrameworkBundle/Resources/config/router_prod.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 if (ini_get('auto_prepend_file') && !in_array(realpath(ini_get('auto_prepend_file')), get_included_files(), true)) {
-    require ini_get('auto_prepend_file');
+require ini_get('auto_prepend_file');
 }
 if (is_file($_SERVER['DOCUMENT_ROOT'].DIRECTORY_SEPARATOR.$_SERVER['SCRIPT_NAME'])) {
-    return false;
+return false;
 }
 $_SERVER = array_merge($_SERVER, $_ENV);
 $_SERVER['SCRIPT_FILENAME'] = $_SERVER['DOCUMENT_ROOT'].DIRECTORY_SEPARATOR.'app.php';
 require 'app.php';
 error_log(sprintf('%s:%d [%d]: %s', $_SERVER['REMOTE_ADDR'], $_SERVER['REMOTE_PORT'], http_response_code(), $_SERVER['REQUEST_URI']), 4);'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

110) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2883 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Bundle/FrameworkBundle/Resources/config/router_dev.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 if (ini_get('auto_prepend_file') && !in_array(realpath(ini_get('auto_prepend_file')), get_included_files(), true)) {
-    require ini_get('auto_prepend_file');
+require ini_get('auto_prepend_file');
 }
 if (is_file($_SERVER['DOCUMENT_ROOT'].DIRECTORY_SEPARATOR.$_SERVER['SCRIPT_NAME'])) {
-    return false;
+return false;
 }
 $_SERVER = array_merge($_SERVER, $_ENV);
 $_SERVER['SCRIPT_FILENAME'] = $_SERVER['DOCUMENT_ROOT'].DIRECTORY_SEPARATOR.'app_dev.php';
 require 'app_dev.php';
 error_log(sprintf('%s:%d [%d]: %s', $_SERVER['REMOTE_ADDR'], $_SERVER['REMOTE_PORT'], http_response_code(), $_SERVER['REQUEST_URI']), 4);'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

111) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2884 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Bundle/FrameworkBundle/Resources/views/Form/password_widget.html.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'<?php echo $view['form']->block($form, 'form_widget_simple',  array('type' => isset($type) ? $type : 'password')) ?>'
+'<?php
+echo $view['form']->block($form, 'form_widget_simple',  array('type' => isset($type) ? $type : 'password')) ?>'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

112) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2885 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Bundle/FrameworkBundle/Resources/views/Form/collection_widget.html.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'<?php if (isset($prototype)): ?>
-    <?php $attr['data-prototype'] = $view->escape($view['form']->row($prototype)) ?>
+'<?php
+if (isset($prototype)): ?>
+<?php $attr['data-prototype'] = $view->escape($view['form']->row($prototype)) ?>
 <?php endif ?>
 <?php echo $view['form']->widget($form, array('attr' => $attr)) ?>'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

113) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2888 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Bundle/FrameworkBundle/Resources/views/Form/reset_widget.html.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'<?php echo $view['form']->block($form, 'button_widget',  array('type' => isset($type) ? $type : 'reset')) ?>'
+'<?php
+echo $view['form']->block($form, 'button_widget',  array('type' => isset($type) ? $type : 'reset')) ?>'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

114) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2889 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Bundle/FrameworkBundle/Resources/views/Form/datetime_widget.html.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'<?php if ($widget == 'single_text'): ?>
-    <?php echo $view['form']->block($form, 'form_widget_simple'); ?>
+'<?php
+if ($widget == 'single_text'): ?>
+<?php echo $view['form']->block($form, 'form_widget_simple'); ?>
 <?php else: ?>
-    <div <?php echo $view['form']->block($form, 'widget_container_attributes') ?>>
-        <?php echo $view['form']->widget($form['date']).' '.$view['form']->widget($form['time']) ?>
-    </div>
+<div <?php echo $view['form']->block($form, 'widget_container_attributes') ?>>
+<?php echo $view['form']->widget($form['date']).' '.$view['form']->widget($form['time']) ?>
+</div>
 <?php endif ?>'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

115) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2890 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Bundle/FrameworkBundle/Resources/views/Form/url_widget.html.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'<?php echo $view['form']->block($form, 'form_widget_simple',  array('type' => isset($type) ? $type : 'url')) ?>'
+'<?php
+echo $view['form']->block($form, 'form_widget_simple',  array('type' => isset($type) ? $type : 'url')) ?>'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

116) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2891 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Bundle/FrameworkBundle/Resources/views/Form/choice_widget_options.html.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'<?php use Symfony\Component\Form\ChoiceList\View\ChoiceGroupView;
+'<?php
+use Symfony\Component\Form\ChoiceList\View\ChoiceGroupView;
 $translatorHelper = $view['translator']; // outside of the loop for performance reasons! ?>
 <?php $formHelper = $view['form']; ?>
 <?php foreach ($choices as $group_label => $choice): ?>
-    <?php if (is_array($choice) || $choice instanceof ChoiceGroupView): ?>
-        <optgroup label="<?php echo $view->escape(false !== $choice_translation_domain ? $translatorHelper->trans($group_label, array(), $choice_translation_domain) : $group_label) ?>">
-            <?php echo $formHelper->block($form, 'choice_widget_options', array('choices' => $choice)) ?>
-        </optgroup>
-    <?php else: ?>
-        <option value="<?php echo $view->escape($choice->value) ?>" <?php echo $view['form']->block($form, 'attributes', array('attr' => $choice->attr)) ?><?php if ($is_selected($choice->value, $value)): ?> selected="selected"<?php endif?>><?php echo $view->escape(false !== $choice_translation_domain ? $translatorHelper->trans($choice->label, array(), $choice_translation_domain) : $choice->label) ?></option>
-    <?php endif ?>
+<?php if (is_array($choice) || $choice instanceof ChoiceGroupView): ?>
+<optgroup label="<?php echo $view->escape(false !== $choice_translation_domain ? $translatorHelper->trans($group_label, array(), $choice_translation_domain) : $group_label) ?>">
+<?php echo $formHelper->block($form, 'choice_widget_options', array('choices' => $choice)) ?>
+</optgroup>
+<?php else: ?>
+<option value="<?php echo $view->escape($choice->value) ?>" <?php echo $view['form']->block($form, 'attributes', array('attr' => $choice->attr)) ?><?php if ($is_selected($choice->value, $value)): ?> selected="selected"<?php endif?>><?php echo $view->escape(false !== $choice_translation_domain ? $translatorHelper->trans($choice->label, array(), $choice_translation_domain) : $choice->label) ?></option>
+<?php endif ?>
 <?php endforeach ?>'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

117) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2892 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Bundle/FrameworkBundle/Resources/views/Form/percent_widget.html.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'<?php echo $view['form']->block($form, 'form_widget_simple',  array('type' => isset($type) ? $type : 'text')) ?> %'
+'<?php
+echo $view['form']->block($form, 'form_widget_simple',  array('type' => isset($type) ? $type : 'text')) ?> %'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

118) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2893 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Bundle/FrameworkBundle/Resources/views/Form/hidden_widget.html.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'<?php echo $view['form']->block($form, 'form_widget_simple', array('type' => isset($type) ? $type : 'hidden')) ?>'
+'<?php
+echo $view['form']->block($form, 'form_widget_simple', array('type' => isset($type) ? $type : 'hidden')) ?>'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

119) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2894 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Bundle/FrameworkBundle/Resources/views/Form/form_errors.html.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'<?php if (count($errors) > 0): ?>
-    <ul>
-        <?php foreach ($errors as $error): ?>
-            <li><?php echo $error->getMessage() ?></li>
-        <?php endforeach; ?>
-    </ul>
+'<?php
+if (count($errors) > 0): ?>
+<ul>
+<?php foreach ($errors as $error): ?>
+<li><?php echo $error->getMessage() ?></li>
+<?php endforeach; ?>
+</ul>
 <?php endif ?>'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

120) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2895 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Bundle/FrameworkBundle/Resources/views/Form/number_widget.html.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'<?php echo $view['form']->block($form, 'form_widget_simple',  array('type' => isset($type) ? $type : 'text')) ?>'
+'<?php
+echo $view['form']->block($form, 'form_widget_simple',  array('type' => isset($type) ? $type : 'text')) ?>'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

121) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2896 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Bundle/FrameworkBundle/Resources/views/Form/form_enctype.html.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'<?php if ($form->vars['multipart']): ?>enctype="multipart/form-data"<?php endif ?>'
+'<?php
+if ($form->vars['multipart']): ?>enctype="multipart/form-data"<?php endif ?>'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

122) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2898 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Bundle/FrameworkBundle/Resources/views/Form/widget_container_attributes.html.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'<?php if (!empty($id)): ?>id="<?php echo $view->escape($id) ?>" <?php endif ?>
+'<?php
+if (!empty($id)): ?>id="<?php echo $view->escape($id) ?>" <?php endif ?>
 <?php foreach ($attr as $k => $v): ?>
 <?php if (in_array($v, array('placeholder', 'title'), true)): ?>
 <?php printf('%s="%s" ', $view->escape($k), $view->escape($view['translator']->trans($v, array(), $translation_domain))) ?>
 <?php elseif ($v === true): ?>
 <?php printf('%s="%s" ', $view->escape($k), $view->escape($k)) ?>
 <?php elseif ($v !== false): ?>
 <?php printf('%s="%s" ', $view->escape($k), $view->escape($v)) ?>
 <?php endif ?>
 <?php endforeach ?>'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

123) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2900 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Bundle/FrameworkBundle/Resources/views/Form/attributes.html.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'<?php echo $view['form']->block($form, 'widget_attributes') ?>'
+'<?php
+echo $view['form']->block($form, 'widget_attributes') ?>'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

124) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2902 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Bundle/FrameworkBundle/Resources/views/Form/range_widget.html.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'<?php echo $view['form']->block($form, 'form_widget_simple', array('type' => isset($type) ? $type : 'range'));'
+'<?php
+echo $view['form']->block($form, 'form_widget_simple', array('type' => isset($type) ? $type : 'range'));'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

125) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2904 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Bundle/FrameworkBundle/Resources/views/Form/form_rows.html.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'<?php foreach ($form as $child) : ?>
-    <?php echo $view['form']->row($child) ?>
+'<?php
+foreach ($form as $child) : ?>
+<?php echo $view['form']->row($child) ?>
 <?php endforeach; ?>'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

126) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2905 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Bundle/FrameworkBundle/Resources/views/Form/money_widget.html.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'<?php echo str_replace('{{ widget }}', $view['form']->block($form, 'form_widget_simple'), $money_pattern) ?>'
+'<?php
+echo str_replace('{{ widget }}', $view['form']->block($form, 'form_widget_simple'), $money_pattern) ?>'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

127) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2907 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Bundle/FrameworkBundle/Resources/views/Form/integer_widget.html.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'<?php echo $view['form']->block($form, 'form_widget_simple', array('type' => isset($type) ? $type : 'number')) ?>'
+'<?php
+echo $view['form']->block($form, 'form_widget_simple', array('type' => isset($type) ? $type : 'number')) ?>'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

128) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2908 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Bundle/FrameworkBundle/Resources/views/Form/form.html.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'<?php echo $view['form']->start($form) ?>
-    <?php echo $view['form']->widget($form) ?>
+'<?php
+echo $view['form']->start($form) ?>
+<?php echo $view['form']->widget($form) ?>
 <?php echo $view['form']->end($form) ?>'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

129) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2909 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Bundle/FrameworkBundle/Resources/views/Form/form_start.html.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'<?php $method = strtoupper($method) ?>
+'<?php
+$method = strtoupper($method) ?>
 <?php $form_method = $method === 'GET' || $method === 'POST' ? $method : 'POST' ?>
 <form name="<?php echo $name ?>" method="<?php echo strtolower($form_method) ?>" action="<?php echo $action ?>"<?php foreach ($attr as $k => $v) { printf(' %s="%s"', $view->escape($k), $view->escape($v)); } ?><?php if ($multipart): ?> enctype="multipart/form-data"<?php endif ?>>
 <?php if ($form_method !== $method): ?>
-    <input type="hidden" name="_method" value="<?php echo $method ?>" />
+<input type="hidden" name="_method" value="<?php echo $method ?>" />
 <?php endif ?>'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

130) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2911 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Bundle/FrameworkBundle/Resources/views/Form/form_rest.html.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'<?php foreach ($form as $child): ?>
-    <?php if (!$child->isRendered()): ?>
-        <?php echo $view['form']->row($child) ?>
-    <?php endif; ?>
+'<?php
+foreach ($form as $child): ?>
+<?php if (!$child->isRendered()): ?>
+<?php echo $view['form']->row($child) ?>
+<?php endif; ?>
 <?php endforeach; ?>'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

131) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2912 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Bundle/FrameworkBundle/Resources/views/Form/search_widget.html.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'<?php echo $view['form']->block($form, 'form_widget_simple',  array('type' => isset($type) ? $type : 'search')) ?>'
+'<?php
+echo $view['form']->block($form, 'form_widget_simple',  array('type' => isset($type) ? $type : 'search')) ?>'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

132) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2913 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Bundle/FrameworkBundle/Resources/views/Form/date_widget.html.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'<?php if ($widget == 'single_text'): ?>
-    <?php echo $view['form']->block($form, 'form_widget_simple'); ?>
+'<?php
+if ($widget == 'single_text'): ?>
+<?php echo $view['form']->block($form, 'form_widget_simple'); ?>
 <?php else: ?>
-    <div <?php echo $view['form']->block($form, 'widget_container_attributes') ?>>
-        <?php echo str_replace(array('{{ year }}', '{{ month }}', '{{ day }}'), array(
-            $view['form']->widget($form['year']),
-            $view['form']->widget($form['month']),
-            $view['form']->widget($form['day']),
-        ), $date_pattern) ?>
-    </div>
+<div <?php echo $view['form']->block($form, 'widget_container_attributes') ?>>
+<?php echo str_replace(array('{{ year }}', '{{ month }}', '{{ day }}'), array(
+$view['form']->widget($form['year']),
+$view['form']->widget($form['month']),
+$view['form']->widget($form['day']),
+), $date_pattern) ?>
+</div>
 <?php endif ?>'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

133) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2914 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Bundle/FrameworkBundle/Resources/views/Form/submit_widget.html.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'<?php echo $view['form']->block($form, 'button_widget',  array('type' => isset($type) ? $type : 'submit')) ?>'
+'<?php
+echo $view['form']->block($form, 'button_widget',  array('type' => isset($type) ? $type : 'submit')) ?>'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

134) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2915 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Bundle/FrameworkBundle/Resources/views/Form/time_widget.html.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'<?php if ($widget == 'single_text'): ?>
-    <?php echo $view['form']->block($form, 'form_widget_simple'); ?>
+'<?php
+if ($widget == 'single_text'): ?>
+<?php echo $view['form']->block($form, 'form_widget_simple'); ?>
 <?php else: ?>
-    <?php $vars = $widget == 'text' ? array('attr' => array('size' => 1)) : array() ?>
-    <div <?php echo $view['form']->block($form, 'widget_container_attributes') ?>>
-        <?php
-            // There should be no spaces between the colons and the widgets, that's why
-            // this block is written in a single PHP tag
-            echo $view['form']->widget($form['hour'], $vars);
-            if ($with_minutes) {
-                echo ':';
-                echo $view['form']->widget($form['minute'], $vars);
-            }
-            if ($with_seconds) {
-                echo ':';
-                echo $view['form']->widget($form['second'], $vars);
-            }
-        ?>
-    </div>
+<?php $vars = $widget == 'text' ? array('attr' => array('size' => 1)) : array() ?>
+<div <?php echo $view['form']->block($form, 'widget_container_attributes') ?>>
+<?php
+// There should be no spaces between the colons and the widgets, that's why
+// this block is written in a single PHP tag
+echo $view['form']->widget($form['hour'], $vars);
+if ($with_minutes) {
+echo ':';
+echo $view['form']->widget($form['minute'], $vars);
+}
+if ($with_seconds) {
+echo ':';
+echo $view['form']->widget($form['second'], $vars);
+}
+?>
+</div>
 <?php endif ?>'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

135) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2917 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Bundle/FrameworkBundle/Resources/views/Form/hidden_row.html.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'<?php echo $view['form']->widget($form) ?>'
+'<?php
+echo $view['form']->widget($form) ?>'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

136) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2919 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Bundle/FrameworkBundle/Resources/views/Form/button_widget.html.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'<?php if (!$label) { $label = isset($label_format)
-    ? strtr($label_format, array('%name%' => $name, '%id%' => $id))
-    : $view['form']->humanize($name); } ?>
+'<?php
+if (!$label) { $label = isset($label_format)
+? strtr($label_format, array('%name%' => $name, '%id%' => $id))
+: $view['form']->humanize($name); } ?>
 <button type="<?php echo isset($type) ? $view->escape($type) : 'button' ?>" <?php echo $view['form']->block($form, 'button_attributes') ?>><?php echo $view->escape($view['translator']->trans($label, array(), $translation_domain)) ?></button>'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

137) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2920 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Bundle/FrameworkBundle/Resources/views/Form/email_widget.html.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'<?php echo $view['form']->block($form, 'form_widget_simple', array('type' => isset($type) ? $type : 'email')) ?>'
+'<?php
+echo $view['form']->block($form, 'form_widget_simple', array('type' => isset($type) ? $type : 'email')) ?>'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

138) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2921 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Bundle/FrameworkBundle/Resources/views/Form/repeated_row.html.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'<?php echo $view['form']->block($form, 'form_rows') ?>'
+'<?php
+echo $view['form']->block($form, 'form_rows') ?>'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

139) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2923 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Bundle/FrameworkBundle/Resources/views/Form/form_end.html.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'<?php if (!isset($render_rest) || $render_rest): ?>
+'<?php
+if (!isset($render_rest) || $render_rest): ?>
 <?php echo $view['form']->rest($form) ?>
 <?php endif ?>
 </form>'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

140) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2924 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Bundle/FrameworkBundle/Resources/views/Form/choice_widget.html.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'<?php if ($expanded): ?>
+'<?php
+if ($expanded): ?>
 <?php echo $view['form']->block($form, 'choice_widget_expanded') ?>
 <?php else: ?>
 <?php echo $view['form']->block($form, 'choice_widget_collapsed') ?>
 <?php endif ?>'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

141) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2925 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Bundle/FrameworkBundle/Resources/views/Form/choice_options.html.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'<?php echo $view['form']->block($form, 'choice_widget_options') ?>'
+'<?php
+echo $view['form']->block($form, 'choice_widget_options') ?>'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

142) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2926 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Bundle/FrameworkBundle/Resources/views/Form/form_label.html.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'<?php if (false !== $label): ?>
+'<?php
+if (false !== $label): ?>
 <?php if ($required) { $label_attr['class'] = trim((isset($label_attr['class']) ? $label_attr['class'] : '').' required'); } ?>
 <?php if (!$compound) { $label_attr['for'] = $id; } ?>
 <?php if (!$label) { $label = isset($label_format)
-    ? strtr($label_format, array('%name%' => $name, '%id%' => $id))
-    : $view['form']->humanize($name); } ?>
+? strtr($label_format, array('%name%' => $name, '%id%' => $id))
+: $view['form']->humanize($name); } ?>
 <label <?php foreach ($label_attr as $k => $v) { printf('%s="%s" ', $view->escape($k), $view->escape($v)); } ?>><?php echo $view->escape(false !== $translation_domain ? $view['translator']->trans($label, array(), $translation_domain) : $label) ?></label>
 <?php endif ?>'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

143) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2927 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Bundle/FrameworkBundle/Resources/views/Form/form_widget.html.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'<?php if ($compound): ?>
+'<?php
+if ($compound): ?>
 <?php echo $view['form']->block($form, 'form_widget_compound')?>
 <?php else: ?>
 <?php echo $view['form']->block($form, 'form_widget_simple')?>
 <?php endif ?>'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

144) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #2928 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Bundle/FrameworkBundle/Resources/views/Form/container_attributes.html.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'<?php echo $view['form']->block($form, 'widget_container_attributes') ?>'
+'<?php
+echo $view['form']->block($form, 'widget_container_attributes') ?>'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

145) MelpTest\Cg\Integration\ParserTest::testRoundtrip with data set #3008 (/home/gerard/work/cg/test/MelpTest/Cg/Integration/../../../assets/parser/symfony/src/Symfony/Bridge/PhpUnit/bootstrap.php)
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 '<?php
 use Doctrine\Common\Annotations\AnnotationRegistry;
 use Symfony\Bridge\PhpUnit\DeprecationErrorHandler;
 // Detect if we're loaded by an actual run of phpunit
 if (!defined('PHPUNIT_COMPOSER_INSTALL') && !class_exists('PHPUnit_TextUI_Command', false)) {
-    return;
+return;
 }
 if (PHP_VERSION_ID >= 50400 && gc_enabled()) {
-    // Disabling Zend Garbage Collection to prevent segfaults with PHP5.4+
-    // https://bugs.php.net/bug.php?id=53976
-    gc_disable();
+// Disabling Zend Garbage Collection to prevent segfaults with PHP5.4+
+// https://bugs.php.net/bug.php?id=53976
+gc_disable();
 }
 // Enforce a consistent locale
 setlocale(LC_ALL, 'C');
 if (class_exists('Doctrine\Common\Annotations\AnnotationRegistry')) {
-    AnnotationRegistry::registerLoader('class_exists');
+AnnotationRegistry::registerLoader('class_exists');
 }
 DeprecationErrorHandler::register(getenv('SYMFONY_DEPRECATIONS_HELPER'));'

/home/gerard/work/cg/test/MelpTest/Cg/Integration/ParserTest.php:36

FAILURES!
Tests: 3172, Assertions: 3103, Failures: 145, Errors: 70.
